<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1734" onload="init(evt)" viewBox="0 0 1200 1734" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1734.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1717" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1717" > </text>
<g id="frames">
<g >
<title>mongo::(anonymous namespace)::readFileAsString (35,966,825 samples, 0.04%)</title><rect x="14.4" y="1637" width="0.5" height="15.0" fill="rgb(218,143,19)" rx="2" ry="2" />
<text  x="17.44" y="1647.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;mongo::stdx::thread::thread&lt;mongo::FTDCController::start (92,280,596 samples, 0.10%)</title><rect x="15.1" y="1605" width="1.3" height="15.0" fill="rgb(239,203,7)" rx="2" ry="2" />
<text  x="18.14" y="1615.5" ></text>
</g>
<g >
<title>ep_poll_callback (54,093,971 samples, 0.06%)</title><rect x="555.8" y="997" width="0.7" height="15.0" fill="rgb(217,141,25)" rx="2" ry="2" />
<text  x="558.82" y="1007.5" ></text>
</g>
<g >
<title>ip_vs_reply4 (19,804,338 samples, 0.02%)</title><rect x="739.6" y="965" width="0.2" height="15.0" fill="rgb(205,207,45)" rx="2" ry="2" />
<text  x="742.58" y="975.5" ></text>
</g>
<g >
<title>[cat] (7,704,311 samples, 0.01%)</title><rect x="10.2" y="1653" width="0.1" height="15.0" fill="rgb(215,193,12)" rx="2" ry="2" />
<text  x="13.16" y="1663.5" ></text>
</g>
<g >
<title>search_binary_handler (8,179,111 samples, 0.01%)</title><rect x="138.4" y="1589" width="0.1" height="15.0" fill="rgb(245,34,13)" rx="2" ry="2" />
<text  x="141.42" y="1599.5" ></text>
</g>
<g >
<title>update_nohz_stats (13,500,949 samples, 0.02%)</title><rect x="507.6" y="1429" width="0.2" height="15.0" fill="rgb(219,5,2)" rx="2" ry="2" />
<text  x="510.61" y="1439.5" ></text>
</g>
<g >
<title>__fdget (8,501,733 samples, 0.01%)</title><rect x="139.6" y="1493" width="0.1" height="15.0" fill="rgb(211,171,7)" rx="2" ry="2" />
<text  x="142.57" y="1503.5" ></text>
</g>
<g >
<title>br_nf_hook_thresh (977,615,274 samples, 1.10%)</title><rect x="1145.6" y="949" width="13.0" height="15.0" fill="rgb(233,137,13)" rx="2" ry="2" />
<text  x="1148.64" y="959.5" ></text>
</g>
<g >
<title>bio_associate_blkg_from_css (12,516,924 samples, 0.01%)</title><rect x="32.0" y="1461" width="0.1" height="15.0" fill="rgb(252,136,41)" rx="2" ry="2" />
<text  x="34.98" y="1471.5" ></text>
</g>
<g >
<title>fib_validate_source (12,092,336 samples, 0.01%)</title><rect x="527.2" y="1285" width="0.2" height="15.0" fill="rgb(208,131,49)" rx="2" ry="2" />
<text  x="530.23" y="1295.5" ></text>
</g>
<g >
<title>br_nf_pre_routing_finish (1,344,726,380 samples, 1.51%)</title><rect x="541.1" y="1365" width="17.8" height="15.0" fill="rgb(249,199,48)" rx="2" ry="2" />
<text  x="544.12" y="1375.5" ></text>
</g>
<g >
<title>execute_command (8,748,644 samples, 0.01%)</title><rect x="10.6" y="1317" width="0.2" height="15.0" fill="rgb(207,157,24)" rx="2" ry="2" />
<text  x="13.64" y="1327.5" ></text>
</g>
<g >
<title>tcp_snat_handler (13,892,810 samples, 0.02%)</title><rect x="566.8" y="1285" width="0.2" height="15.0" fill="rgb(228,223,54)" rx="2" ry="2" />
<text  x="569.77" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="581" width="18.3" height="15.0" fill="rgb(207,192,32)" rx="2" ry="2" />
<text  x="113.16" y="591.5" ></text>
</g>
<g >
<title>alloc_pages_current (23,480,692 samples, 0.03%)</title><rect x="31.1" y="1333" width="0.3" height="15.0" fill="rgb(254,176,51)" rx="2" ry="2" />
<text  x="34.07" y="1343.5" ></text>
</g>
<g >
<title>iptable_mangle_hook (8,317,488 samples, 0.01%)</title><rect x="1164.3" y="853" width="0.1" height="15.0" fill="rgb(208,208,9)" rx="2" ry="2" />
<text  x="1167.29" y="863.5" ></text>
</g>
<g >
<title>common_perm (7,857,763 samples, 0.01%)</title><rect x="90.8" y="1429" width="0.1" height="15.0" fill="rgb(254,93,38)" rx="2" ry="2" />
<text  x="93.80" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1509" width="0.8" height="15.0" fill="rgb(217,183,9)" rx="2" ry="2" />
<text  x="101.56" y="1519.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (76,945,547 samples, 0.09%)</title><rect x="1139.0" y="1109" width="1.0" height="15.0" fill="rgb(237,136,25)" rx="2" ry="2" />
<text  x="1141.99" y="1119.5" ></text>
</g>
<g >
<title>sch_direct_xmit (29,881,362 samples, 0.03%)</title><rect x="735.3" y="533" width="0.4" height="15.0" fill="rgb(213,210,34)" rx="2" ry="2" />
<text  x="738.34" y="543.5" ></text>
</g>
<g >
<title>uv__read (12,738,243 samples, 0.01%)</title><rect x="133.4" y="1605" width="0.2" height="15.0" fill="rgb(232,126,1)" rx="2" ry="2" />
<text  x="136.38" y="1615.5" ></text>
</g>
<g >
<title>arch_irq_work_raise (11,645,294 samples, 0.01%)</title><rect x="248.4" y="1301" width="0.2" height="15.0" fill="rgb(214,83,13)" rx="2" ry="2" />
<text  x="251.43" y="1311.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (9,288,296 samples, 0.01%)</title><rect x="709.4" y="1349" width="0.1" height="15.0" fill="rgb(220,168,48)" rx="2" ry="2" />
<text  x="712.39" y="1359.5" ></text>
</g>
<g >
<title>ip_vs_remote_request4 (136,984,736 samples, 0.15%)</title><rect x="568.0" y="1349" width="1.8" height="15.0" fill="rgb(212,5,49)" rx="2" ry="2" />
<text  x="571.03" y="1359.5" ></text>
</g>
<g >
<title>pwcache_get_user (39,432,921 samples, 0.04%)</title><rect x="240.6" y="1573" width="0.5" height="15.0" fill="rgb(220,35,4)" rx="2" ry="2" />
<text  x="243.57" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1397" width="0.4" height="15.0" fill="rgb(205,76,32)" rx="2" ry="2" />
<text  x="56.54" y="1407.5" ></text>
</g>
<g >
<title>execute_command_internal (9,393,046 samples, 0.01%)</title><rect x="10.8" y="1109" width="0.1" height="15.0" fill="rgb(254,182,50)" rx="2" ry="2" />
<text  x="13.80" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="773" width="6.5" height="15.0" fill="rgb(224,4,47)" rx="2" ry="2" />
<text  x="103.13" y="783.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (16,227,880 samples, 0.02%)</title><rect x="87.2" y="1573" width="0.2" height="15.0" fill="rgb(236,32,28)" rx="2" ry="2" />
<text  x="90.20" y="1583.5" ></text>
</g>
<g >
<title>nf_hook_slow (13,264,719 samples, 0.01%)</title><rect x="251.6" y="1221" width="0.2" height="15.0" fill="rgb(216,164,29)" rx="2" ry="2" />
<text  x="254.63" y="1231.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (11,660,580 samples, 0.01%)</title><rect x="707.8" y="1381" width="0.2" height="15.0" fill="rgb(224,119,24)" rx="2" ry="2" />
<text  x="710.83" y="1391.5" ></text>
</g>
<g >
<title>do_idle (26,575,833,962 samples, 29.80%)</title><rect x="244.1" y="1605" width="351.7" height="15.0" fill="rgb(242,76,24)" rx="2" ry="2" />
<text  x="247.10" y="1615.5" >do_idle</text>
</g>
<g >
<title>br_nf_pre_routing_finish (12,273,704 samples, 0.01%)</title><rect x="41.3" y="1429" width="0.2" height="15.0" fill="rgb(223,78,30)" rx="2" ry="2" />
<text  x="44.34" y="1439.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (14,672,658 samples, 0.02%)</title><rect x="706.2" y="1429" width="0.2" height="15.0" fill="rgb(213,24,48)" rx="2" ry="2" />
<text  x="709.22" y="1439.5" ></text>
</g>
<g >
<title>fput_many (8,217,143 samples, 0.01%)</title><rect x="713.4" y="1493" width="0.1" height="15.0" fill="rgb(217,25,9)" rx="2" ry="2" />
<text  x="716.36" y="1503.5" ></text>
</g>
<g >
<title>node::Start (25,996,559 samples, 0.03%)</title><rect x="137.8" y="1621" width="0.4" height="15.0" fill="rgb(227,146,15)" rx="2" ry="2" />
<text  x="140.81" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="485" width="18.3" height="15.0" fill="rgb(232,95,8)" rx="2" ry="2" />
<text  x="113.16" y="495.5" ></text>
</g>
<g >
<title>run_timer_softirq (9,593,881 samples, 0.01%)</title><rect x="650.9" y="1413" width="0.1" height="15.0" fill="rgb(226,171,5)" rx="2" ry="2" />
<text  x="653.88" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="373" width="3.6" height="15.0" fill="rgb(236,182,32)" rx="2" ry="2" />
<text  x="109.59" y="383.5" ></text>
</g>
<g >
<title>irq_exit (4,950,026,648 samples, 5.55%)</title><rect x="510.8" y="1509" width="65.5" height="15.0" fill="rgb(228,197,28)" rx="2" ry="2" />
<text  x="513.77" y="1519.5" >irq_exit</text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (30,821,401 samples, 0.03%)</title><rect x="148.9" y="1301" width="0.4" height="15.0" fill="rgb(250,37,13)" rx="2" ry="2" />
<text  x="151.93" y="1311.5" ></text>
</g>
<g >
<title>psi_task_change (8,189,398 samples, 0.01%)</title><rect x="136.8" y="1397" width="0.1" height="15.0" fill="rgb(238,49,47)" rx="2" ry="2" />
<text  x="139.80" y="1407.5" ></text>
</g>
<g >
<title>__kmalloc (21,860,956 samples, 0.02%)</title><rect x="145.1" y="1333" width="0.3" height="15.0" fill="rgb(239,201,37)" rx="2" ry="2" />
<text  x="148.07" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (8,367,044 samples, 0.01%)</title><rect x="98.4" y="181" width="0.1" height="15.0" fill="rgb(244,93,46)" rx="2" ry="2" />
<text  x="101.44" y="191.5" ></text>
</g>
<g >
<title>schedule (47,844,434 samples, 0.05%)</title><rect x="136.5" y="1445" width="0.7" height="15.0" fill="rgb(206,32,4)" rx="2" ry="2" />
<text  x="139.52" y="1455.5" ></text>
</g>
<g >
<title>schedule (16,024,379 samples, 0.02%)</title><rect x="46.0" y="1605" width="0.2" height="15.0" fill="rgb(215,108,31)" rx="2" ry="2" />
<text  x="49.00" y="1615.5" ></text>
</g>
<g >
<title>br_nf_forward_ip (216,451,649 samples, 0.24%)</title><rect x="542.1" y="1269" width="2.8" height="15.0" fill="rgb(253,13,42)" rx="2" ry="2" />
<text  x="545.08" y="1279.5" ></text>
</g>
<g >
<title>do_IRQ (11,363,177 samples, 0.01%)</title><rect x="126.6" y="85" width="0.1" height="15.0" fill="rgb(216,161,21)" rx="2" ry="2" />
<text  x="129.60" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="405" width="6.5" height="15.0" fill="rgb(213,17,28)" rx="2" ry="2" />
<text  x="103.13" y="415.5" ></text>
</g>
<g >
<title>ret_from_intr (118,444,017 samples, 0.13%)</title><rect x="639.3" y="1397" width="1.6" height="15.0" fill="rgb(251,212,30)" rx="2" ry="2" />
<text  x="642.34" y="1407.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (21,154,255 samples, 0.02%)</title><rect x="176.5" y="1109" width="0.3" height="15.0" fill="rgb(220,213,33)" rx="2" ry="2" />
<text  x="179.52" y="1119.5" ></text>
</g>
<g >
<title>_int_free (12,912,221 samples, 0.01%)</title><rect x="138.6" y="1637" width="0.1" height="15.0" fill="rgb(214,24,54)" rx="2" ry="2" />
<text  x="141.57" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1365" width="0.3" height="15.0" fill="rgb(231,105,23)" rx="2" ry="2" />
<text  x="102.79" y="1375.5" ></text>
</g>
<g >
<title>fdarray__poll (129,101,562 samples, 0.14%)</title><rect x="139.3" y="1589" width="1.7" height="15.0" fill="rgb(214,25,54)" rx="2" ry="2" />
<text  x="142.30" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (473,675,089 samples, 0.53%)</title><rect x="100.1" y="197" width="6.3" height="15.0" fill="rgb(219,133,30)" rx="2" ry="2" />
<text  x="103.13" y="207.5" ></text>
</g>
<g >
<title>luaL_addvalue (32,018,426 samples, 0.04%)</title><rect x="686.3" y="1621" width="0.4" height="15.0" fill="rgb(206,188,44)" rx="2" ry="2" />
<text  x="689.26" y="1631.5" ></text>
</g>
<g >
<title>execute_command_internal (8,352,489 samples, 0.01%)</title><rect x="11.0" y="1397" width="0.1" height="15.0" fill="rgb(243,145,47)" rx="2" ry="2" />
<text  x="13.95" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,549,793 samples, 0.12%)</title><rect x="97.2" y="997" width="1.4" height="15.0" fill="rgb(226,158,18)" rx="2" ry="2" />
<text  x="100.15" y="1007.5" ></text>
</g>
<g >
<title>__netif_receive_skb (8,107,841 samples, 0.01%)</title><rect x="1028.2" y="1413" width="0.1" height="15.0" fill="rgb(249,215,8)" rx="2" ry="2" />
<text  x="1031.22" y="1423.5" ></text>
</g>
<g >
<title>gro_normal_list.part.0 (17,272,619 samples, 0.02%)</title><rect x="41.3" y="1525" width="0.2" height="15.0" fill="rgb(221,144,32)" rx="2" ry="2" />
<text  x="44.30" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (10,821,443 samples, 0.01%)</title><rect x="110.0" y="229" width="0.2" height="15.0" fill="rgb(214,74,29)" rx="2" ry="2" />
<text  x="113.02" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1397" width="3.6" height="15.0" fill="rgb(226,105,43)" rx="2" ry="2" />
<text  x="109.59" y="1407.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (22,958,362 samples, 0.03%)</title><rect x="31.1" y="1317" width="0.3" height="15.0" fill="rgb(228,35,47)" rx="2" ry="2" />
<text  x="34.08" y="1327.5" ></text>
</g>
<g >
<title>[anon] (369,153,640 samples, 0.41%)</title><rect x="654.3" y="1653" width="4.9" height="15.0" fill="rgb(230,115,29)" rx="2" ry="2" />
<text  x="657.31" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (747,604,844 samples, 0.84%)</title><rect x="61.2" y="661" width="9.9" height="15.0" fill="rgb(216,79,18)" rx="2" ry="2" />
<text  x="64.22" y="671.5" ></text>
</g>
<g >
<title>__slab_free (17,180,361 samples, 0.02%)</title><rect x="517.6" y="1301" width="0.2" height="15.0" fill="rgb(240,163,50)" rx="2" ry="2" />
<text  x="520.57" y="1311.5" ></text>
</g>
<g >
<title>[sshd] (14,330,607 samples, 0.02%)</title><rect x="242.0" y="1573" width="0.2" height="15.0" fill="rgb(234,222,52)" rx="2" ry="2" />
<text  x="245.00" y="1583.5" ></text>
</g>
<g >
<title>bnx2_msi_1shot (14,052,957 samples, 0.02%)</title><rect x="508.7" y="1445" width="0.2" height="15.0" fill="rgb(217,157,17)" rx="2" ry="2" />
<text  x="511.75" y="1455.5" ></text>
</g>
<g >
<title>tick_do_broadcast (24,442,687 samples, 0.03%)</title><rect x="602.5" y="1285" width="0.4" height="15.0" fill="rgb(210,137,52)" rx="2" ry="2" />
<text  x="605.54" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="629" width="0.3" height="15.0" fill="rgb(231,57,12)" rx="2" ry="2" />
<text  x="102.79" y="639.5" ></text>
</g>
<g >
<title>__fdget_pos (25,422,966 samples, 0.03%)</title><rect x="143.6" y="1397" width="0.3" height="15.0" fill="rgb(205,58,31)" rx="2" ry="2" />
<text  x="146.58" y="1407.5" ></text>
</g>
<g >
<title>br_nf_dev_xmit (7,613,447 samples, 0.01%)</title><rect x="1179.7" y="1093" width="0.1" height="15.0" fill="rgb(214,29,35)" rx="2" ry="2" />
<text  x="1182.72" y="1103.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (400,954,103 samples, 0.45%)</title><rect x="171.6" y="1141" width="5.3" height="15.0" fill="rgb(240,50,54)" rx="2" ry="2" />
<text  x="174.63" y="1151.5" ></text>
</g>
<g >
<title>execute_command_internal (8,487,866 samples, 0.01%)</title><rect x="11.1" y="1525" width="0.1" height="15.0" fill="rgb(212,142,9)" rx="2" ry="2" />
<text  x="14.08" y="1535.5" ></text>
</g>
<g >
<title>ksys_read (14,703,657 samples, 0.02%)</title><rect x="240.7" y="1493" width="0.2" height="15.0" fill="rgb(227,192,35)" rx="2" ry="2" />
<text  x="243.68" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="485" width="0.4" height="15.0" fill="rgb(235,11,20)" rx="2" ry="2" />
<text  x="56.54" y="495.5" ></text>
</g>
<g >
<title>lj_vm_returnc (58,703,832 samples, 0.07%)</title><rect x="1119.1" y="1541" width="0.7" height="15.0" fill="rgb(213,11,9)" rx="2" ry="2" />
<text  x="1122.06" y="1551.5" ></text>
</g>
<g >
<title>mongo::FTDCCollectorCollection::collect (49,478,241 samples, 0.06%)</title><rect x="15.1" y="1573" width="0.7" height="15.0" fill="rgb(229,39,9)" rx="2" ry="2" />
<text  x="18.15" y="1583.5" ></text>
</g>
<g >
<title>ip_vs_in (185,348,421 samples, 0.21%)</title><rect x="737.1" y="949" width="2.5" height="15.0" fill="rgb(237,190,28)" rx="2" ry="2" />
<text  x="740.13" y="959.5" ></text>
</g>
<g >
<title>tcp_mt (9,291,079 samples, 0.01%)</title><rect x="1174.0" y="965" width="0.2" height="15.0" fill="rgb(220,177,20)" rx="2" ry="2" />
<text  x="1177.04" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="885" width="0.4" height="15.0" fill="rgb(209,165,47)" rx="2" ry="2" />
<text  x="56.88" y="895.5" ></text>
</g>
<g >
<title>jbd2_journal_inode_ranged_write (28,472,886 samples, 0.03%)</title><rect x="192.3" y="1221" width="0.4" height="15.0" fill="rgb(232,228,10)" rx="2" ry="2" />
<text  x="195.32" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="789" width="1.4" height="15.0" fill="rgb(210,197,17)" rx="2" ry="2" />
<text  x="100.15" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="821" width="0.8" height="15.0" fill="rgb(210,6,20)" rx="2" ry="2" />
<text  x="101.56" y="831.5" ></text>
</g>
<g >
<title>tick_broadcast_oneshot_control (1,291,712,416 samples, 1.45%)</title><rect x="489.6" y="1525" width="17.1" height="15.0" fill="rgb(228,131,44)" rx="2" ry="2" />
<text  x="492.64" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1493" width="0.4" height="15.0" fill="rgb(214,20,47)" rx="2" ry="2" />
<text  x="56.54" y="1503.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, Event&gt;, std::_Select1st&lt;std::pair&lt;std::string const, Event&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, Event&gt; &gt; &gt;::find (12,424,959 samples, 0.01%)</title><rect x="91.2" y="1589" width="0.2" height="15.0" fill="rgb(247,43,25)" rx="2" ry="2" />
<text  x="94.22" y="1599.5" ></text>
</g>
<g >
<title>insert_work (17,624,123 samples, 0.02%)</title><rect x="591.6" y="1429" width="0.2" height="15.0" fill="rgb(227,211,47)" rx="2" ry="2" />
<text  x="594.57" y="1439.5" ></text>
</g>
<g >
<title>ip_route_input_slow (28,963,472 samples, 0.03%)</title><rect x="740.0" y="949" width="0.4" height="15.0" fill="rgb(221,219,14)" rx="2" ry="2" />
<text  x="743.03" y="959.5" ></text>
</g>
<g >
<title>br_nf_forward_ip (25,462,960 samples, 0.03%)</title><rect x="41.7" y="1365" width="0.4" height="15.0" fill="rgb(224,74,8)" rx="2" ry="2" />
<text  x="44.72" y="1375.5" ></text>
</g>
<g >
<title>load_elf_binary (8,179,111 samples, 0.01%)</title><rect x="138.4" y="1573" width="0.1" height="15.0" fill="rgb(233,46,35)" rx="2" ry="2" />
<text  x="141.42" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (163,178,286 samples, 0.18%)</title><rect x="133.9" y="1557" width="2.2" height="15.0" fill="rgb(211,8,4)" rx="2" ry="2" />
<text  x="136.90" y="1567.5" ></text>
</g>
<g >
<title>lj_ff_tostring (910,517,254 samples, 1.02%)</title><rect x="1103.9" y="1541" width="12.0" height="15.0" fill="rgb(252,218,15)" rx="2" ry="2" />
<text  x="1106.85" y="1551.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (26,859,021 samples, 0.03%)</title><rect x="1174.3" y="949" width="0.4" height="15.0" fill="rgb(224,222,28)" rx="2" ry="2" />
<text  x="1177.34" y="959.5" ></text>
</g>
<g >
<title>cmd_record (7,636,897,497 samples, 8.56%)</title><rect x="139.2" y="1637" width="101.0" height="15.0" fill="rgb(229,5,49)" rx="2" ry="2" />
<text  x="142.16" y="1647.5" >cmd_record</text>
</g>
<g >
<title>load_balance (15,369,046 samples, 0.02%)</title><rect x="641.0" y="1349" width="0.2" height="15.0" fill="rgb(249,18,15)" rx="2" ry="2" />
<text  x="644.00" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,771,381 samples, 0.01%)</title><rect x="12.7" y="1557" width="0.2" height="15.0" fill="rgb(229,68,35)" rx="2" ry="2" />
<text  x="15.72" y="1567.5" ></text>
</g>
<g >
<title>br_nf_hook_thresh (24,140,464 samples, 0.03%)</title><rect x="41.7" y="1333" width="0.3" height="15.0" fill="rgb(205,79,46)" rx="2" ry="2" />
<text  x="44.73" y="1343.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (831,800,030 samples, 0.93%)</title><rect x="546.0" y="1157" width="11.0" height="15.0" fill="rgb(230,129,22)" rx="2" ry="2" />
<text  x="548.98" y="1167.5" ></text>
</g>
<g >
<title>__br_forward (150,676,070 samples, 0.17%)</title><rect x="1177.4" y="1061" width="2.0" height="15.0" fill="rgb(236,144,45)" rx="2" ry="2" />
<text  x="1180.39" y="1071.5" ></text>
</g>
<g >
<title>clear_page_rep (14,135,791 samples, 0.02%)</title><rect x="31.1" y="1285" width="0.2" height="15.0" fill="rgb(210,170,48)" rx="2" ry="2" />
<text  x="34.13" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,621,857 samples, 0.55%)</title><rect x="100.1" y="1333" width="6.5" height="15.0" fill="rgb(249,191,19)" rx="2" ry="2" />
<text  x="103.13" y="1343.5" ></text>
</g>
<g >
<title>inet_gro_receive (17,144,913 samples, 0.02%)</title><rect x="539.3" y="1413" width="0.2" height="15.0" fill="rgb(219,50,38)" rx="2" ry="2" />
<text  x="542.26" y="1423.5" ></text>
</g>
<g >
<title>operator new (11,001,703 samples, 0.01%)</title><rect x="99.2" y="133" width="0.1" height="15.0" fill="rgb(215,0,40)" rx="2" ry="2" />
<text  x="102.19" y="143.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (15,812,008 samples, 0.02%)</title><rect x="549.2" y="869" width="0.2" height="15.0" fill="rgb(225,181,8)" rx="2" ry="2" />
<text  x="552.23" y="879.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (147,525,329 samples, 0.17%)</title><rect x="527.8" y="1317" width="1.9" height="15.0" fill="rgb(229,51,16)" rx="2" ry="2" />
<text  x="530.79" y="1327.5" ></text>
</g>
<g >
<title>ip_output (75,420,192 samples, 0.08%)</title><rect x="734.9" y="629" width="1.0" height="15.0" fill="rgb(249,98,15)" rx="2" ry="2" />
<text  x="737.91" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,764,070,852 samples, 5.34%)</title><rect x="1123.9" y="1509" width="63.1" height="15.0" fill="rgb(245,216,45)" rx="2" ry="2" />
<text  x="1126.94" y="1519.5" >entry_..</text>
</g>
<g >
<title>insert_work (11,611,739 samples, 0.01%)</title><rect x="253.9" y="1317" width="0.2" height="15.0" fill="rgb(254,222,22)" rx="2" ry="2" />
<text  x="256.94" y="1327.5" ></text>
</g>
<g >
<title>gettimeofday (15,135,591 samples, 0.02%)</title><rect x="750.8" y="1557" width="0.2" height="15.0" fill="rgb(220,228,0)" rx="2" ry="2" />
<text  x="753.83" y="1567.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (13,122,198 samples, 0.01%)</title><rect x="1064.4" y="1461" width="0.1" height="15.0" fill="rgb(227,131,12)" rx="2" ry="2" />
<text  x="1067.37" y="1471.5" ></text>
</g>
<g >
<title>__netif_receive_skb (122,868,231 samples, 0.14%)</title><rect x="251.0" y="1445" width="1.7" height="15.0" fill="rgb(242,91,43)" rx="2" ry="2" />
<text  x="254.05" y="1455.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (24,350,517 samples, 0.03%)</title><rect x="893.9" y="1413" width="0.3" height="15.0" fill="rgb(242,69,35)" rx="2" ry="2" />
<text  x="896.86" y="1423.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (19,212,129 samples, 0.02%)</title><rect x="167.9" y="1189" width="0.3" height="15.0" fill="rgb(239,110,45)" rx="2" ry="2" />
<text  x="170.91" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="469" width="3.6" height="15.0" fill="rgb(213,54,11)" rx="2" ry="2" />
<text  x="109.59" y="479.5" ></text>
</g>
<g >
<title>dequeue_task_fair (130,686,172 samples, 0.15%)</title><rect x="708.3" y="1397" width="1.7" height="15.0" fill="rgb(214,62,2)" rx="2" ry="2" />
<text  x="711.27" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="933" width="0.4" height="15.0" fill="rgb(218,193,33)" rx="2" ry="2" />
<text  x="56.54" y="943.5" ></text>
</g>
<g >
<title>ipt_do_table (9,733,564 samples, 0.01%)</title><rect x="567.7" y="1333" width="0.1" height="15.0" fill="rgb(218,106,32)" rx="2" ry="2" />
<text  x="570.70" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="725" width="1.4" height="15.0" fill="rgb(247,208,32)" rx="2" ry="2" />
<text  x="100.15" y="735.5" ></text>
</g>
<g >
<title>ip_queue_xmit (10,177,762 samples, 0.01%)</title><rect x="700.9" y="1381" width="0.2" height="15.0" fill="rgb(241,66,45)" rx="2" ry="2" />
<text  x="703.94" y="1391.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_fn (10,328,796 samples, 0.01%)</title><rect x="1152.7" y="581" width="0.1" height="15.0" fill="rgb(245,173,28)" rx="2" ry="2" />
<text  x="1155.71" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="357" width="0.8" height="15.0" fill="rgb(227,8,23)" rx="2" ry="2" />
<text  x="101.56" y="367.5" ></text>
</g>
<g >
<title>up_read (12,266,789 samples, 0.01%)</title><rect x="192.9" y="1237" width="0.2" height="15.0" fill="rgb(231,218,54)" rx="2" ry="2" />
<text  x="195.94" y="1247.5" ></text>
</g>
<g >
<title>gro_normal_list.part.0 (436,688,715 samples, 0.49%)</title><rect x="533.4" y="1429" width="5.7" height="15.0" fill="rgb(230,177,54)" rx="2" ry="2" />
<text  x="536.36" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1525" width="1.4" height="15.0" fill="rgb(240,10,46)" rx="2" ry="2" />
<text  x="100.15" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="229" width="6.5" height="15.0" fill="rgb(234,102,19)" rx="2" ry="2" />
<text  x="103.13" y="239.5" ></text>
</g>
<g >
<title>discard_slab (20,169,565 samples, 0.02%)</title><rect x="514.1" y="1205" width="0.3" height="15.0" fill="rgb(216,211,53)" rx="2" ry="2" />
<text  x="517.09" y="1215.5" ></text>
</g>
<g >
<title>local.runtime.gcDrain (62,549,401 samples, 0.07%)</title><rect x="13.5" y="1621" width="0.8" height="15.0" fill="rgb(222,169,14)" rx="2" ry="2" />
<text  x="16.52" y="1631.5" ></text>
</g>
<g >
<title>bnx2_start_xmit (9,520,600 samples, 0.01%)</title><rect x="735.4" y="501" width="0.1" height="15.0" fill="rgb(205,128,37)" rx="2" ry="2" />
<text  x="738.39" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="581" width="0.3" height="15.0" fill="rgb(249,3,4)" rx="2" ry="2" />
<text  x="102.79" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="821" width="0.4" height="15.0" fill="rgb(207,110,30)" rx="2" ry="2" />
<text  x="56.88" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1237" width="0.9" height="15.0" fill="rgb(247,57,36)" rx="2" ry="2" />
<text  x="134.54" y="1247.5" ></text>
</g>
<g >
<title>br_netif_receive_skb (13,603,784 samples, 0.02%)</title><rect x="251.6" y="1301" width="0.2" height="15.0" fill="rgb(216,159,49)" rx="2" ry="2" />
<text  x="254.62" y="1311.5" ></text>
</g>
<g >
<title>irq_exit (11,849,460 samples, 0.01%)</title><rect x="920.2" y="1445" width="0.2" height="15.0" fill="rgb(213,77,51)" rx="2" ry="2" />
<text  x="923.23" y="1455.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (10,826,025 samples, 0.01%)</title><rect x="509.8" y="1477" width="0.2" height="15.0" fill="rgb(230,114,8)" rx="2" ry="2" />
<text  x="512.84" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1445" width="18.3" height="15.0" fill="rgb(234,104,6)" rx="2" ry="2" />
<text  x="113.16" y="1455.5" ></text>
</g>
<g >
<title>__netif_receive_skb (11,312,360 samples, 0.01%)</title><rect x="592.0" y="1445" width="0.2" height="15.0" fill="rgb(239,191,48)" rx="2" ry="2" />
<text  x="595.01" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="213" width="0.3" height="15.0" fill="rgb(212,116,37)" rx="2" ry="2" />
<text  x="102.79" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (7,762,594 samples, 0.01%)</title><rect x="748.2" y="1509" width="0.1" height="15.0" fill="rgb(231,10,27)" rx="2" ry="2" />
<text  x="751.16" y="1519.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (73,355,145 samples, 0.08%)</title><rect x="562.9" y="1269" width="0.9" height="15.0" fill="rgb(220,211,48)" rx="2" ry="2" />
<text  x="565.85" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="821" width="0.4" height="15.0" fill="rgb(216,166,5)" rx="2" ry="2" />
<text  x="56.54" y="831.5" ></text>
</g>
<g >
<title>futex_wait (57,190,229 samples, 0.06%)</title><rect x="136.4" y="1477" width="0.8" height="15.0" fill="rgb(239,122,1)" rx="2" ry="2" />
<text  x="139.44" y="1487.5" ></text>
</g>
<g >
<title>intel_pmu_disable_all (43,860,299 samples, 0.05%)</title><rect x="642.6" y="1205" width="0.5" height="15.0" fill="rgb(221,123,34)" rx="2" ry="2" />
<text  x="645.57" y="1215.5" ></text>
</g>
<g >
<title>node::Environment::CheckImmediate (10,209,941 samples, 0.01%)</title><rect x="137.8" y="1541" width="0.2" height="15.0" fill="rgb(251,172,38)" rx="2" ry="2" />
<text  x="140.83" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (94,634,169 samples, 0.11%)</title><rect x="699.4" y="1509" width="1.2" height="15.0" fill="rgb(240,27,5)" rx="2" ry="2" />
<text  x="702.39" y="1519.5" ></text>
</g>
<g >
<title>ip_local_deliver (57,366,582 samples, 0.06%)</title><rect x="42.1" y="1269" width="0.8" height="15.0" fill="rgb(205,124,50)" rx="2" ry="2" />
<text  x="45.11" y="1279.5" ></text>
</g>
<g >
<title>__irq_work_queue_local (11,645,294 samples, 0.01%)</title><rect x="248.4" y="1317" width="0.2" height="15.0" fill="rgb(221,78,38)" rx="2" ry="2" />
<text  x="251.43" y="1327.5" ></text>
</g>
<g >
<title>ip_local_deliver (223,190,721 samples, 0.25%)</title><rect x="737.0" y="997" width="3.0" height="15.0" fill="rgb(211,62,25)" rx="2" ry="2" />
<text  x="740.02" y="1007.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (13,311,117 samples, 0.01%)</title><rect x="177.8" y="1173" width="0.2" height="15.0" fill="rgb(231,51,47)" rx="2" ry="2" />
<text  x="180.81" y="1183.5" ></text>
</g>
<g >
<title>alloc_pages_current (12,247,556 samples, 0.01%)</title><rect x="156.1" y="1141" width="0.2" height="15.0" fill="rgb(213,221,20)" rx="2" ry="2" />
<text  x="159.12" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1301" width="0.3" height="15.0" fill="rgb(244,119,45)" rx="2" ry="2" />
<text  x="102.79" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1349" width="0.8" height="15.0" fill="rgb(252,134,29)" rx="2" ry="2" />
<text  x="101.56" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (105,682,256 samples, 0.12%)</title><rect x="100.2" y="117" width="1.4" height="15.0" fill="rgb(235,208,17)" rx="2" ry="2" />
<text  x="103.18" y="127.5" ></text>
</g>
<g >
<title>bio_attempt_back_merge (44,390,583 samples, 0.05%)</title><rect x="35.0" y="1413" width="0.6" height="15.0" fill="rgb(239,23,41)" rx="2" ry="2" />
<text  x="38.03" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="885" width="0.9" height="15.0" fill="rgb(239,158,18)" rx="2" ry="2" />
<text  x="134.54" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="901" width="6.5" height="15.0" fill="rgb(250,130,54)" rx="2" ry="2" />
<text  x="103.13" y="911.5" ></text>
</g>
<g >
<title>lj_mem_realloc (9,269,822 samples, 0.01%)</title><rect x="920.1" y="1461" width="0.1" height="15.0" fill="rgb(230,219,14)" rx="2" ry="2" />
<text  x="923.07" y="1471.5" ></text>
</g>
<g >
<title>ps (56,970,051 samples, 0.06%)</title><rect x="240.5" y="1669" width="0.7" height="15.0" fill="rgb(241,202,51)" rx="2" ry="2" />
<text  x="243.47" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1061" width="1.4" height="15.0" fill="rgb(231,6,43)" rx="2" ry="2" />
<text  x="100.15" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,621,857 samples, 0.55%)</title><rect x="100.1" y="1381" width="6.5" height="15.0" fill="rgb(221,170,20)" rx="2" ry="2" />
<text  x="103.13" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="197" width="18.3" height="15.0" fill="rgb(223,106,30)" rx="2" ry="2" />
<text  x="113.16" y="207.5" ></text>
</g>
<g >
<title>handle_edge_irq (626,600,513 samples, 0.70%)</title><rect x="641.8" y="1445" width="8.3" height="15.0" fill="rgb(242,11,48)" rx="2" ry="2" />
<text  x="644.82" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="949" width="0.4" height="15.0" fill="rgb(211,164,21)" rx="2" ry="2" />
<text  x="56.54" y="959.5" ></text>
</g>
<g >
<title>netif_rx (18,946,510 samples, 0.02%)</title><rect x="537.0" y="1045" width="0.3" height="15.0" fill="rgb(214,72,48)" rx="2" ry="2" />
<text  x="540.02" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (93,364,941 samples, 0.10%)</title><rect x="97.3" y="197" width="1.3" height="15.0" fill="rgb(251,70,23)" rx="2" ry="2" />
<text  x="100.32" y="207.5" ></text>
</g>
<g >
<title>br_nf_hook_thresh (242,391,967 samples, 0.27%)</title><rect x="733.2" y="853" width="3.2" height="15.0" fill="rgb(229,49,42)" rx="2" ry="2" />
<text  x="736.20" y="863.5" ></text>
</g>
<g >
<title>lj_alloc_free (2,765,550,349 samples, 3.10%)</title><rect x="853.4" y="1461" width="36.6" height="15.0" fill="rgb(208,57,14)" rx="2" ry="2" />
<text  x="856.37" y="1471.5" >lj_..</text>
</g>
<g >
<title>map_id_up (9,250,940 samples, 0.01%)</title><rect x="174.6" y="1077" width="0.2" height="15.0" fill="rgb(223,225,13)" rx="2" ry="2" />
<text  x="177.64" y="1087.5" ></text>
</g>
<g >
<title>xas_start (14,087,415 samples, 0.02%)</title><rect x="214.1" y="1237" width="0.2" height="15.0" fill="rgb(251,100,49)" rx="2" ry="2" />
<text  x="217.07" y="1247.5" ></text>
</g>
<g >
<title>iptable_mangle_hook (8,053,167 samples, 0.01%)</title><rect x="567.8" y="1349" width="0.1" height="15.0" fill="rgb(228,43,29)" rx="2" ry="2" />
<text  x="570.83" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (11,132,990 samples, 0.01%)</title><rect x="143.0" y="1461" width="0.1" height="15.0" fill="rgb(221,55,34)" rx="2" ry="2" />
<text  x="145.97" y="1471.5" ></text>
</g>
<g >
<title>__queue_work (22,255,092 samples, 0.02%)</title><rect x="591.5" y="1445" width="0.3" height="15.0" fill="rgb(231,145,29)" rx="2" ry="2" />
<text  x="594.51" y="1455.5" ></text>
</g>
<g >
<title>__ip_finish_output (28,689,452 samples, 0.03%)</title><rect x="568.5" y="1253" width="0.4" height="15.0" fill="rgb(239,207,3)" rx="2" ry="2" />
<text  x="571.48" y="1263.5" ></text>
</g>
<g >
<title>__libc_start_main (46,292,250 samples, 0.05%)</title><rect x="240.5" y="1637" width="0.6" height="15.0" fill="rgb(231,39,49)" rx="2" ry="2" />
<text  x="243.48" y="1647.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (103,310,771 samples, 0.12%)</title><rect x="88.5" y="1461" width="1.4" height="15.0" fill="rgb(250,66,24)" rx="2" ry="2" />
<text  x="91.54" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1589" width="18.3" height="15.0" fill="rgb(209,177,6)" rx="2" ry="2" />
<text  x="113.16" y="1599.5" ></text>
</g>
<g >
<title>kthread (26,223,180 samples, 0.03%)</title><rect x="44.8" y="1637" width="0.3" height="15.0" fill="rgb(244,11,5)" rx="2" ry="2" />
<text  x="47.80" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,211,758 samples, 0.01%)</title><rect x="49.5" y="1637" width="0.2" height="15.0" fill="rgb(230,194,5)" rx="2" ry="2" />
<text  x="52.55" y="1647.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (9,191,171 samples, 0.01%)</title><rect x="227.0" y="1237" width="0.1" height="15.0" fill="rgb(215,9,1)" rx="2" ry="2" />
<text  x="229.98" y="1247.5" ></text>
</g>
<g >
<title>sched_clock_cpu (10,897,027 samples, 0.01%)</title><rect x="578.8" y="1557" width="0.1" height="15.0" fill="rgb(222,220,41)" rx="2" ry="2" />
<text  x="581.79" y="1567.5" ></text>
</g>
<g >
<title>br_nf_forward_finish (207,910,341 samples, 0.23%)</title><rect x="542.1" y="1253" width="2.8" height="15.0" fill="rgb(231,45,34)" rx="2" ry="2" />
<text  x="545.12" y="1263.5" ></text>
</g>
<g >
<title>lj_alloc_malloc (61,149,233 samples, 0.07%)</title><rect x="676.0" y="1637" width="0.8" height="15.0" fill="rgb(229,114,4)" rx="2" ry="2" />
<text  x="678.95" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="245" width="0.9" height="15.0" fill="rgb(251,104,39)" rx="2" ry="2" />
<text  x="134.54" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="965" width="3.6" height="15.0" fill="rgb(244,66,16)" rx="2" ry="2" />
<text  x="109.59" y="975.5" ></text>
</g>
<g >
<title>__vfs_write (4,599,001,521 samples, 5.16%)</title><rect x="1125.3" y="1429" width="60.9" height="15.0" fill="rgb(225,147,44)" rx="2" ry="2" />
<text  x="1128.35" y="1439.5" >__vfs_..</text>
</g>
<g >
<title>nf_hook_slow (23,784,078 samples, 0.03%)</title><rect x="255.5" y="1285" width="0.3" height="15.0" fill="rgb(230,126,12)" rx="2" ry="2" />
<text  x="258.47" y="1295.5" ></text>
</g>
<g >
<title>wait_for_stable_page (13,548,527 samples, 0.02%)</title><rect x="214.3" y="1269" width="0.2" height="15.0" fill="rgb(237,214,29)" rx="2" ry="2" />
<text  x="217.33" y="1279.5" ></text>
</g>
<g >
<title>nf_hook_slow (14,314,606 samples, 0.02%)</title><rect x="43.2" y="1461" width="0.2" height="15.0" fill="rgb(210,88,43)" rx="2" ry="2" />
<text  x="46.25" y="1471.5" ></text>
</g>
<g >
<title>scheduler_tick (11,186,640 samples, 0.01%)</title><rect x="639.4" y="1189" width="0.1" height="15.0" fill="rgb(229,129,21)" rx="2" ry="2" />
<text  x="642.40" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,603,565 samples, 0.01%)</title><rect x="68.5" y="469" width="0.1" height="15.0" fill="rgb(250,65,17)" rx="2" ry="2" />
<text  x="71.48" y="479.5" ></text>
</g>
<g >
<title>lj_lib_checknum (69,422,006 samples, 0.08%)</title><rect x="687.5" y="1637" width="0.9" height="15.0" fill="rgb(209,65,20)" rx="2" ry="2" />
<text  x="690.46" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1061" width="0.9" height="15.0" fill="rgb(214,174,51)" rx="2" ry="2" />
<text  x="134.54" y="1071.5" ></text>
</g>
<g >
<title>ext4_mb_mark_diskspace_used (425,744,162 samples, 0.48%)</title><rect x="179.1" y="1173" width="5.6" height="15.0" fill="rgb(222,42,49)" rx="2" ry="2" />
<text  x="182.11" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (655,335,104 samples, 0.73%)</title><rect x="61.4" y="613" width="8.6" height="15.0" fill="rgb(214,106,2)" rx="2" ry="2" />
<text  x="64.36" y="623.5" ></text>
</g>
<g >
<title>ipt_do_table (16,463,289 samples, 0.02%)</title><rect x="1170.1" y="933" width="0.2" height="15.0" fill="rgb(249,93,39)" rx="2" ry="2" />
<text  x="1173.08" y="943.5" ></text>
</g>
<g >
<title>allocate_slab (415,966,613 samples, 0.47%)</title><rect x="22.6" y="1349" width="5.5" height="15.0" fill="rgb(240,204,9)" rx="2" ry="2" />
<text  x="25.63" y="1359.5" ></text>
</g>
<g >
<title>from_kuid (11,016,656 samples, 0.01%)</title><rect x="174.6" y="1093" width="0.2" height="15.0" fill="rgb(217,157,3)" rx="2" ry="2" />
<text  x="177.61" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="869" width="3.0" height="15.0" fill="rgb(237,149,44)" rx="2" ry="2" />
<text  x="131.55" y="879.5" ></text>
</g>
<g >
<title>operator new (13,556,379 samples, 0.02%)</title><rect x="69.5" y="533" width="0.2" height="15.0" fill="rgb(210,29,24)" rx="2" ry="2" />
<text  x="72.51" y="543.5" ></text>
</g>
<g >
<title>PtyGetProc (23,360,239 samples, 0.03%)</title><rect x="51.0" y="1605" width="0.3" height="15.0" fill="rgb(228,142,38)" rx="2" ry="2" />
<text  x="53.99" y="1615.5" ></text>
</g>
<g >
<title>kthread (1,800,516,281 samples, 2.02%)</title><rect x="16.5" y="1637" width="23.8" height="15.0" fill="rgb(205,73,45)" rx="2" ry="2" />
<text  x="19.45" y="1647.5" >k..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,821,443 samples, 0.01%)</title><rect x="110.0" y="213" width="0.2" height="15.0" fill="rgb(225,91,8)" rx="2" ry="2" />
<text  x="113.02" y="223.5" ></text>
</g>
<g >
<title>ksize (10,610,709 samples, 0.01%)</title><rect x="1129.9" y="1285" width="0.1" height="15.0" fill="rgb(250,99,46)" rx="2" ry="2" />
<text  x="1132.88" y="1295.5" ></text>
</g>
<g >
<title>get_page_from_freelist (371,364,939 samples, 0.42%)</title><rect x="23.0" y="1285" width="4.9" height="15.0" fill="rgb(238,25,16)" rx="2" ry="2" />
<text  x="25.95" y="1295.5" ></text>
</g>
<g >
<title>aeCreateTimeEvent (32,007,236 samples, 0.04%)</title><rect x="747.0" y="1557" width="0.5" height="15.0" fill="rgb(245,105,0)" rx="2" ry="2" />
<text  x="750.03" y="1567.5" ></text>
</g>
<g >
<title>hack_digit (138,394,269 samples, 0.16%)</title><rect x="1112.4" y="1429" width="1.8" height="15.0" fill="rgb(237,51,4)" rx="2" ry="2" />
<text  x="1115.35" y="1439.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (12,287,673 samples, 0.01%)</title><rect x="509.8" y="1509" width="0.2" height="15.0" fill="rgb(207,55,2)" rx="2" ry="2" />
<text  x="512.84" y="1519.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (54,798,028 samples, 0.06%)</title><rect x="180.3" y="1157" width="0.7" height="15.0" fill="rgb(243,187,54)" rx="2" ry="2" />
<text  x="183.25" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (77,807,596 samples, 0.09%)</title><rect x="128.6" y="101" width="1.0" height="15.0" fill="rgb(238,99,3)" rx="2" ry="2" />
<text  x="131.58" y="111.5" ></text>
</g>
<g >
<title>__tick_broadcast_oneshot_control (1,249,389,762 samples, 1.40%)</title><rect x="489.6" y="1509" width="16.6" height="15.0" fill="rgb(209,66,27)" rx="2" ry="2" />
<text  x="492.65" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15,625,902 samples, 0.02%)</title><rect x="111.3" y="69" width="0.2" height="15.0" fill="rgb(214,111,32)" rx="2" ry="2" />
<text  x="114.34" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="453" width="18.3" height="15.0" fill="rgb(247,138,20)" rx="2" ry="2" />
<text  x="113.16" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="501" width="0.4" height="15.0" fill="rgb(206,27,13)" rx="2" ry="2" />
<text  x="56.88" y="511.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/vendor/github.com/hashicorp/memberlist.(*Memberlist).probeNode (8,882,105 samples, 0.01%)</title><rect x="11.8" y="1573" width="0.1" height="15.0" fill="rgb(238,140,8)" rx="2" ry="2" />
<text  x="14.78" y="1583.5" ></text>
</g>
<g >
<title>br_nf_hook_thresh (50,784,351 samples, 0.06%)</title><rect x="251.1" y="1349" width="0.7" height="15.0" fill="rgb(230,49,28)" rx="2" ry="2" />
<text  x="254.14" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,777,663 samples, 0.01%)</title><rect x="83.8" y="1301" width="0.1" height="15.0" fill="rgb(227,103,49)" rx="2" ry="2" />
<text  x="86.78" y="1311.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_fn (24,866,033 samples, 0.03%)</title><rect x="1164.5" y="837" width="0.4" height="15.0" fill="rgb(220,165,50)" rx="2" ry="2" />
<text  x="1167.54" y="847.5" ></text>
</g>
<g >
<title>lj_meta_tset (115,448,937 samples, 0.13%)</title><rect x="1120.4" y="1525" width="1.5" height="15.0" fill="rgb(223,19,54)" rx="2" ry="2" />
<text  x="1123.38" y="1535.5" ></text>
</g>
<g >
<title>load_new_mm_cr3 (8,042,661 samples, 0.01%)</title><rect x="489.5" y="1477" width="0.1" height="15.0" fill="rgb(213,13,27)" rx="2" ry="2" />
<text  x="492.50" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1477" width="3.6" height="15.0" fill="rgb(212,96,51)" rx="2" ry="2" />
<text  x="109.59" y="1487.5" ></text>
</g>
<g >
<title>lj_BC_TDUP (41,732,895 samples, 0.05%)</title><rect x="1073.4" y="1541" width="0.6" height="15.0" fill="rgb(244,165,35)" rx="2" ry="2" />
<text  x="1076.45" y="1551.5" ></text>
</g>
<g >
<title>lj_str_new (30,090,415 samples, 0.03%)</title><rect x="686.8" y="1573" width="0.4" height="15.0" fill="rgb(232,139,46)" rx="2" ry="2" />
<text  x="689.79" y="1583.5" ></text>
</g>
<g >
<title>__ip_finish_output (40,696,777 samples, 0.05%)</title><rect x="737.7" y="869" width="0.6" height="15.0" fill="rgb(219,92,51)" rx="2" ry="2" />
<text  x="740.73" y="879.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (14,648,408 samples, 0.02%)</title><rect x="67.2" y="389" width="0.2" height="15.0" fill="rgb(205,44,4)" rx="2" ry="2" />
<text  x="70.19" y="399.5" ></text>
</g>
<g >
<title>smp_reschedule_interrupt (204,593,130 samples, 0.23%)</title><rect x="639.1" y="1461" width="2.7" height="15.0" fill="rgb(212,6,46)" rx="2" ry="2" />
<text  x="642.06" y="1471.5" ></text>
</g>
<g >
<title>copy_user_generic_string (19,517,369 samples, 0.02%)</title><rect x="1128.0" y="1301" width="0.2" height="15.0" fill="rgb(228,198,53)" rx="2" ry="2" />
<text  x="1130.96" y="1311.5" ></text>
</g>
<g >
<title>checked_request2size (9,672,657 samples, 0.01%)</title><rect x="126.1" y="69" width="0.1" height="15.0" fill="rgb(229,208,34)" rx="2" ry="2" />
<text  x="129.08" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1317" width="0.3" height="15.0" fill="rgb(209,128,8)" rx="2" ry="2" />
<text  x="102.79" y="1327.5" ></text>
</g>
<g >
<title>proc_pid_status (8,483,302 samples, 0.01%)</title><rect x="240.7" y="1413" width="0.1" height="15.0" fill="rgb(250,4,23)" rx="2" ry="2" />
<text  x="243.71" y="1423.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_fn (75,540,668 samples, 0.08%)</title><rect x="1140.5" y="1157" width="1.0" height="15.0" fill="rgb(247,34,35)" rx="2" ry="2" />
<text  x="1143.50" y="1167.5" ></text>
</g>
<g >
<title>tcp_send_ack (17,101,421 samples, 0.02%)</title><rect x="42.3" y="1157" width="0.2" height="15.0" fill="rgb(238,98,49)" rx="2" ry="2" />
<text  x="45.25" y="1167.5" ></text>
</g>
<g >
<title>lj_gc_step (61,252,978 samples, 0.07%)</title><rect x="1097.3" y="1525" width="0.8" height="15.0" fill="rgb(251,67,49)" rx="2" ry="2" />
<text  x="1100.31" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="565" width="0.4" height="15.0" fill="rgb(211,228,31)" rx="2" ry="2" />
<text  x="56.54" y="575.5" ></text>
</g>
<g >
<title>__wake_up_common (56,715,392 samples, 0.06%)</title><rect x="555.8" y="1013" width="0.7" height="15.0" fill="rgb(231,63,51)" rx="2" ry="2" />
<text  x="558.79" y="1023.5" ></text>
</g>
<g >
<title>__libc_write (7,234,722,128 samples, 8.11%)</title><rect x="142.6" y="1477" width="95.8" height="15.0" fill="rgb(239,65,7)" rx="2" ry="2" />
<text  x="145.63" y="1487.5" >__libc_write</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,880,873 samples, 0.55%)</title><rect x="100.1" y="1573" width="6.5" height="15.0" fill="rgb(212,27,37)" rx="2" ry="2" />
<text  x="103.13" y="1583.5" ></text>
</g>
<g >
<title>csum_partial (26,918,566 samples, 0.03%)</title><rect x="1155.8" y="405" width="0.4" height="15.0" fill="rgb(217,74,26)" rx="2" ry="2" />
<text  x="1158.80" y="415.5" ></text>
</g>
<g >
<title>br_dev_queue_push_xmit (187,971,599 samples, 0.21%)</title><rect x="542.4" y="1157" width="2.4" height="15.0" fill="rgb(221,112,42)" rx="2" ry="2" />
<text  x="545.35" y="1167.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1621" width="0.4" height="15.0" fill="rgb(231,128,28)" rx="2" ry="2" />
<text  x="56.88" y="1631.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (4,125,037,353 samples, 4.63%)</title><rect x="596.7" y="1493" width="54.6" height="15.0" fill="rgb(220,127,16)" rx="2" ry="2" />
<text  x="599.69" y="1503.5" >cpuid..</text>
</g>
<g >
<title>__netdev_alloc_skb (8,881,903 samples, 0.01%)</title><rect x="521.6" y="1413" width="0.2" height="15.0" fill="rgb(208,22,42)" rx="2" ry="2" />
<text  x="524.65" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,959,739 samples, 0.01%)</title><rect x="98.3" y="181" width="0.1" height="15.0" fill="rgb(209,6,53)" rx="2" ry="2" />
<text  x="101.30" y="191.5" ></text>
</g>
<g >
<title>__blk_mq_delay_run_hw_queue (68,196,158 samples, 0.08%)</title><rect x="35.9" y="1365" width="0.9" height="15.0" fill="rgb(227,220,34)" rx="2" ry="2" />
<text  x="38.90" y="1375.5" ></text>
</g>
<g >
<title>mmput (7,865,736 samples, 0.01%)</title><rect x="138.4" y="1541" width="0.1" height="15.0" fill="rgb(251,62,18)" rx="2" ry="2" />
<text  x="141.42" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (875,232,783 samples, 0.98%)</title><rect x="702.3" y="1541" width="11.6" height="15.0" fill="rgb(216,205,7)" rx="2" ry="2" />
<text  x="705.27" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (751,050,712 samples, 0.84%)</title><rect x="61.2" y="677" width="9.9" height="15.0" fill="rgb(221,33,1)" rx="2" ry="2" />
<text  x="64.18" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11,138,968 samples, 0.01%)</title><rect x="97.2" y="149" width="0.1" height="15.0" fill="rgb(213,156,27)" rx="2" ry="2" />
<text  x="100.18" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="805" width="0.8" height="15.0" fill="rgb(248,129,11)" rx="2" ry="2" />
<text  x="101.56" y="815.5" ></text>
</g>
<g >
<title>netif_rx (10,784,099 samples, 0.01%)</title><rect x="1163.5" y="757" width="0.2" height="15.0" fill="rgb(252,22,43)" rx="2" ry="2" />
<text  x="1166.55" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="805" width="0.9" height="15.0" fill="rgb(232,58,11)" rx="2" ry="2" />
<text  x="134.54" y="815.5" ></text>
</g>
<g >
<title>__skb_ext_put (9,844,373 samples, 0.01%)</title><rect x="536.2" y="1109" width="0.2" height="15.0" fill="rgb(212,152,48)" rx="2" ry="2" />
<text  x="539.23" y="1119.5" ></text>
</g>
<g >
<title>ext4_mb_use_preallocated.constprop.0 (54,620,783 samples, 0.06%)</title><rect x="185.1" y="1173" width="0.7" height="15.0" fill="rgb(215,162,19)" rx="2" ry="2" />
<text  x="188.05" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="341" width="18.3" height="15.0" fill="rgb(207,77,5)" rx="2" ry="2" />
<text  x="113.16" y="351.5" ></text>
</g>
<g >
<title>lj_BC_CALL (132,279,309 samples, 0.15%)</title><rect x="752.6" y="1541" width="1.7" height="15.0" fill="rgb(225,183,39)" rx="2" ry="2" />
<text  x="755.59" y="1551.5" ></text>
</g>
<g >
<title>std::string::append (13,348,588 samples, 0.01%)</title><rect x="92.2" y="1589" width="0.2" height="15.0" fill="rgb(206,13,26)" rx="2" ry="2" />
<text  x="95.19" y="1599.5" ></text>
</g>
<g >
<title>ext4_update_bh_state (12,798,527 samples, 0.01%)</title><rect x="192.7" y="1237" width="0.2" height="15.0" fill="rgb(231,115,37)" rx="2" ry="2" />
<text  x="195.73" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="405" width="0.3" height="15.0" fill="rgb(253,127,40)" rx="2" ry="2" />
<text  x="102.79" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (224,100,124 samples, 0.25%)</title><rect x="62.2" y="357" width="3.0" height="15.0" fill="rgb(247,107,38)" rx="2" ry="2" />
<text  x="65.24" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (85,492,387 samples, 0.10%)</title><rect x="72.3" y="741" width="1.1" height="15.0" fill="rgb(250,173,24)" rx="2" ry="2" />
<text  x="75.30" y="751.5" ></text>
</g>
<g >
<title>mongo::FTDCBSONUtil::(anonymous namespace)::extractMetricsFromDocument (10,911,326 samples, 0.01%)</title><rect x="15.8" y="1509" width="0.2" height="15.0" fill="rgb(213,15,1)" rx="2" ry="2" />
<text  x="18.83" y="1519.5" ></text>
</g>
<g >
<title>iptable_mangle_hook (18,668,997 samples, 0.02%)</title><rect x="1151.4" y="581" width="0.2" height="15.0" fill="rgb(228,107,49)" rx="2" ry="2" />
<text  x="1154.39" y="591.5" ></text>
</g>
<g >
<title>inet_addr_type_dev_table (16,343,351 samples, 0.02%)</title><rect x="730.7" y="1157" width="0.3" height="15.0" fill="rgb(225,47,3)" rx="2" ry="2" />
<text  x="733.74" y="1167.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (8,107,841 samples, 0.01%)</title><rect x="1028.2" y="1397" width="0.1" height="15.0" fill="rgb(209,188,40)" rx="2" ry="2" />
<text  x="1031.22" y="1407.5" ></text>
</g>
<g >
<title>nf_nat_packet (56,312,582 samples, 0.06%)</title><rect x="1140.7" y="1125" width="0.7" height="15.0" fill="rgb(232,14,40)" rx="2" ry="2" />
<text  x="1143.66" y="1135.5" ></text>
</g>
<g >
<title>execute_shell_function (10,085,220 samples, 0.01%)</title><rect x="10.6" y="1333" width="0.2" height="15.0" fill="rgb(230,66,25)" rx="2" ry="2" />
<text  x="13.64" y="1343.5" ></text>
</g>
<g >
<title>__wake_up (92,248,649 samples, 0.10%)</title><rect x="554.2" y="965" width="1.2" height="15.0" fill="rgb(212,131,43)" rx="2" ry="2" />
<text  x="557.20" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="437" width="1.4" height="15.0" fill="rgb(214,83,43)" rx="2" ry="2" />
<text  x="100.15" y="447.5" ></text>
</g>
<g >
<title>br_forward (33,944,803 samples, 0.04%)</title><rect x="1180.7" y="1061" width="0.4" height="15.0" fill="rgb(242,202,29)" rx="2" ry="2" />
<text  x="1183.66" y="1071.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (25,939,801 samples, 0.03%)</title><rect x="1135.3" y="1141" width="0.3" height="15.0" fill="rgb(244,87,0)" rx="2" ry="2" />
<text  x="1138.30" y="1151.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (131,476,089 samples, 0.15%)</title><rect x="227.4" y="1253" width="1.8" height="15.0" fill="rgb(242,156,21)" rx="2" ry="2" />
<text  x="230.42" y="1263.5" ></text>
</g>
<g >
<title>_int_free (10,262,696 samples, 0.01%)</title><rect x="73.9" y="789" width="0.2" height="15.0" fill="rgb(220,228,16)" rx="2" ry="2" />
<text  x="76.94" y="799.5" ></text>
</g>
<g >
<title>_int_free (10,324,026 samples, 0.01%)</title><rect x="64.6" y="277" width="0.1" height="15.0" fill="rgb(244,128,26)" rx="2" ry="2" />
<text  x="67.58" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1509" width="0.9" height="15.0" fill="rgb(254,1,50)" rx="2" ry="2" />
<text  x="134.54" y="1519.5" ></text>
</g>
<g >
<title>__random (12,797,543 samples, 0.01%)</title><rect x="1187.8" y="1509" width="0.2" height="15.0" fill="rgb(213,70,13)" rx="2" ry="2" />
<text  x="1190.80" y="1519.5" ></text>
</g>
<g >
<title>__next_timer_interrupt (47,254,325 samples, 0.05%)</title><rect x="586.3" y="1509" width="0.7" height="15.0" fill="rgb(251,63,15)" rx="2" ry="2" />
<text  x="589.33" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,549,793 samples, 0.12%)</title><rect x="97.2" y="293" width="1.4" height="15.0" fill="rgb(227,125,42)" rx="2" ry="2" />
<text  x="100.15" y="303.5" ></text>
</g>
<g >
<title>execute_command (11,864,933 samples, 0.01%)</title><rect x="10.8" y="1253" width="0.1" height="15.0" fill="rgb(229,107,35)" rx="2" ry="2" />
<text  x="13.79" y="1263.5" ></text>
</g>
<g >
<title>do_IRQ (21,627,222 samples, 0.02%)</title><rect x="898.9" y="1461" width="0.3" height="15.0" fill="rgb(222,161,12)" rx="2" ry="2" />
<text  x="901.94" y="1471.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (17,126,859 samples, 0.02%)</title><rect x="40.3" y="1621" width="0.2" height="15.0" fill="rgb(232,137,36)" rx="2" ry="2" />
<text  x="43.29" y="1631.5" ></text>
</g>
<g >
<title>__fprop_inc_percpu_max (11,493,994 samples, 0.01%)</title><rect x="516.3" y="1301" width="0.1" height="15.0" fill="rgb(252,6,25)" rx="2" ry="2" />
<text  x="519.26" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="629" width="3.6" height="15.0" fill="rgb(247,128,28)" rx="2" ry="2" />
<text  x="109.59" y="639.5" ></text>
</g>
<g >
<title>bio_alloc_bioset (803,180,061 samples, 0.90%)</title><rect x="21.3" y="1477" width="10.6" height="15.0" fill="rgb(251,73,14)" rx="2" ry="2" />
<text  x="24.29" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="965" width="18.3" height="15.0" fill="rgb(250,195,1)" rx="2" ry="2" />
<text  x="113.16" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="405" width="3.6" height="15.0" fill="rgb(240,173,39)" rx="2" ry="2" />
<text  x="109.59" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1317" width="0.4" height="15.0" fill="rgb(208,158,28)" rx="2" ry="2" />
<text  x="56.54" y="1327.5" ></text>
</g>
<g >
<title>lj_vm_exit_handler (101,206,686 samples, 0.11%)</title><rect x="690.6" y="1637" width="1.4" height="15.0" fill="rgb(222,113,42)" rx="2" ry="2" />
<text  x="693.64" y="1647.5" ></text>
</g>
<g >
<title>nf_hook_slow (126,625,090 samples, 0.14%)</title><rect x="1151.2" y="597" width="1.6" height="15.0" fill="rgb(246,171,54)" rx="2" ry="2" />
<text  x="1154.17" y="607.5" ></text>
</g>
<g >
<title>kfree_skbmem (12,549,950 samples, 0.01%)</title><rect x="726.2" y="1317" width="0.2" height="15.0" fill="rgb(211,227,44)" rx="2" ry="2" />
<text  x="729.24" y="1327.5" ></text>
</g>
<g >
<title>__GI___libc_free (12,889,116 samples, 0.01%)</title><rect x="698.5" y="1557" width="0.2" height="15.0" fill="rgb(213,22,11)" rx="2" ry="2" />
<text  x="701.54" y="1567.5" ></text>
</g>
<g >
<title>alloc_pages_current (653,143,782 samples, 0.73%)</title><rect x="195.3" y="1237" width="8.7" height="15.0" fill="rgb(250,158,19)" rx="2" ry="2" />
<text  x="198.34" y="1247.5" ></text>
</g>
<g >
<title>nf_conntrack_udp_packet (16,714,600 samples, 0.02%)</title><rect x="532.1" y="1301" width="0.2" height="15.0" fill="rgb(222,209,40)" rx="2" ry="2" />
<text  x="535.12" y="1311.5" ></text>
</g>
<g >
<title>dev_queue_xmit (64,298,498 samples, 0.07%)</title><rect x="1163.1" y="821" width="0.8" height="15.0" fill="rgb(240,212,9)" rx="2" ry="2" />
<text  x="1166.07" y="831.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (46,018,153 samples, 0.05%)</title><rect x="602.4" y="1477" width="0.6" height="15.0" fill="rgb(207,143,14)" rx="2" ry="2" />
<text  x="605.35" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1301" width="0.8" height="15.0" fill="rgb(213,96,20)" rx="2" ry="2" />
<text  x="101.56" y="1311.5" ></text>
</g>
<g >
<title>l4proto_manip_pkt (13,270,053 samples, 0.01%)</title><rect x="575.2" y="1285" width="0.1" height="15.0" fill="rgb(253,18,47)" rx="2" ry="2" />
<text  x="578.15" y="1295.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (10,070,344 samples, 0.01%)</title><rect x="126.6" y="53" width="0.1" height="15.0" fill="rgb(250,161,49)" rx="2" ry="2" />
<text  x="129.61" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="357" width="6.5" height="15.0" fill="rgb(205,127,27)" rx="2" ry="2" />
<text  x="103.13" y="367.5" ></text>
</g>
<g >
<title>ret_from_fork (17,205,033 samples, 0.02%)</title><rect x="40.3" y="1653" width="0.2" height="15.0" fill="rgb(241,146,18)" rx="2" ry="2" />
<text  x="43.29" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1125" width="1.4" height="15.0" fill="rgb(228,110,24)" rx="2" ry="2" />
<text  x="100.15" y="1135.5" ></text>
</g>
<g >
<title>ext4_journal_submit_inode_data_buffers (1,794,954,312 samples, 2.01%)</title><rect x="16.5" y="1589" width="23.8" height="15.0" fill="rgb(235,117,26)" rx="2" ry="2" />
<text  x="19.50" y="1599.5" >e..</text>
</g>
<g >
<title>iptable_filter_hook (16,463,289 samples, 0.02%)</title><rect x="1170.1" y="949" width="0.2" height="15.0" fill="rgb(208,105,41)" rx="2" ry="2" />
<text  x="1173.08" y="959.5" ></text>
</g>
<g >
<title>gc_onestep (151,383,803 samples, 0.17%)</title><rect x="1116.0" y="1509" width="2.0" height="15.0" fill="rgb(253,61,5)" rx="2" ry="2" />
<text  x="1118.98" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1333" width="0.8" height="15.0" fill="rgb(247,28,16)" rx="2" ry="2" />
<text  x="101.56" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1189" width="18.3" height="15.0" fill="rgb(205,43,48)" rx="2" ry="2" />
<text  x="113.16" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1413" width="0.9" height="15.0" fill="rgb(230,4,29)" rx="2" ry="2" />
<text  x="134.54" y="1423.5" ></text>
</g>
<g >
<title>ip_local_deliver (907,552,540 samples, 1.02%)</title><rect x="545.9" y="1173" width="12.0" height="15.0" fill="rgb(253,155,9)" rx="2" ry="2" />
<text  x="548.91" y="1183.5" ></text>
</g>
<g >
<title>__x64_sys_write (7,157,082,952 samples, 8.03%)</title><rect x="143.5" y="1429" width="94.7" height="15.0" fill="rgb(226,76,11)" rx="2" ry="2" />
<text  x="146.45" y="1439.5" >__x64_sys_w..</text>
</g>
<g >
<title>ip_finish_output2 (94,430,537 samples, 0.11%)</title><rect x="1162.9" y="837" width="1.3" height="15.0" fill="rgb(206,195,53)" rx="2" ry="2" />
<text  x="1165.94" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1317" width="18.3" height="15.0" fill="rgb(216,141,20)" rx="2" ry="2" />
<text  x="113.16" y="1327.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (8,240,477 samples, 0.01%)</title><rect x="746.7" y="1461" width="0.1" height="15.0" fill="rgb(222,90,9)" rx="2" ry="2" />
<text  x="749.73" y="1471.5" ></text>
</g>
<g >
<title>ip_route_me_harder (211,592,050 samples, 0.24%)</title><rect x="1137.6" y="1157" width="2.8" height="15.0" fill="rgb(216,217,39)" rx="2" ry="2" />
<text  x="1140.59" y="1167.5" ></text>
</g>
<g >
<title>Glob::isIgnored (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1605" width="1.4" height="15.0" fill="rgb(253,173,51)" rx="2" ry="2" />
<text  x="100.15" y="1615.5" ></text>
</g>
<g >
<title>__fopen_internal (9,002,233 samples, 0.01%)</title><rect x="51.1" y="1573" width="0.1" height="15.0" fill="rgb(249,211,46)" rx="2" ry="2" />
<text  x="54.12" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1461" width="0.4" height="15.0" fill="rgb(233,70,16)" rx="2" ry="2" />
<text  x="56.88" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,584,462,189 samples, 1.78%)</title><rect x="723.9" y="1509" width="21.0" height="15.0" fill="rgb(251,2,11)" rx="2" ry="2" />
<text  x="726.95" y="1519.5" ></text>
</g>
<g >
<title>validate_xmit_skb (19,827,588 samples, 0.02%)</title><rect x="537.3" y="1077" width="0.3" height="15.0" fill="rgb(220,172,36)" rx="2" ry="2" />
<text  x="540.34" y="1087.5" ></text>
</g>
<g >
<title>fib_validate_source (7,909,257 samples, 0.01%)</title><rect x="558.7" y="1301" width="0.1" height="15.0" fill="rgb(208,94,35)" rx="2" ry="2" />
<text  x="561.73" y="1311.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_fn (8,512,329 samples, 0.01%)</title><rect x="743.1" y="1173" width="0.1" height="15.0" fill="rgb(218,200,1)" rx="2" ry="2" />
<text  x="746.08" y="1183.5" ></text>
</g>
<g >
<title>writen (7,258,245,634 samples, 8.14%)</title><rect x="142.3" y="1525" width="96.1" height="15.0" fill="rgb(239,174,20)" rx="2" ry="2" />
<text  x="145.32" y="1535.5" >writen</text>
</g>
<g >
<title>node::AsyncWrap::MakeCallback (8,873,064 samples, 0.01%)</title><rect x="133.1" y="1557" width="0.2" height="15.0" fill="rgb(235,135,32)" rx="2" ry="2" />
<text  x="136.14" y="1567.5" ></text>
</g>
<g >
<title>_int_free (10,880,985 samples, 0.01%)</title><rect x="70.6" y="597" width="0.1" height="15.0" fill="rgb(205,42,1)" rx="2" ry="2" />
<text  x="73.55" y="607.5" ></text>
</g>
<g >
<title>br_nf_forward_finish (244,737,143 samples, 0.27%)</title><rect x="733.2" y="869" width="3.2" height="15.0" fill="rgb(231,182,35)" rx="2" ry="2" />
<text  x="736.17" y="879.5" ></text>
</g>
<g >
<title>ip_output (8,545,501 samples, 0.01%)</title><rect x="43.1" y="1445" width="0.1" height="15.0" fill="rgb(229,215,22)" rx="2" ry="2" />
<text  x="46.13" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,213,083,534 samples, 2.48%)</title><rect x="57.5" y="1541" width="29.3" height="15.0" fill="rgb(248,82,10)" rx="2" ry="2" />
<text  x="60.51" y="1551.5" >st..</text>
</g>
<g >
<title>ip_vs_route_me_harder (83,593,624 samples, 0.09%)</title><rect x="565.6" y="1285" width="1.1" height="15.0" fill="rgb(245,4,31)" rx="2" ry="2" />
<text  x="568.62" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,991,656 samples, 0.01%)</title><rect x="68.5" y="453" width="0.1" height="15.0" fill="rgb(243,164,37)" rx="2" ry="2" />
<text  x="71.52" y="463.5" ></text>
</g>
<g >
<title>v8::internal::KeyAccumulator::CollectKeys (10,460,137 samples, 0.01%)</title><rect x="52.8" y="1573" width="0.2" height="15.0" fill="rgb(225,88,15)" rx="2" ry="2" />
<text  x="55.83" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="933" width="3.0" height="15.0" fill="rgb(248,38,19)" rx="2" ry="2" />
<text  x="131.55" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,621,857 samples, 0.55%)</title><rect x="100.1" y="1317" width="6.5" height="15.0" fill="rgb(233,30,24)" rx="2" ry="2" />
<text  x="103.13" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="357" width="0.9" height="15.0" fill="rgb(234,103,21)" rx="2" ry="2" />
<text  x="134.54" y="367.5" ></text>
</g>
<g >
<title>flush_old_exec (8,179,111 samples, 0.01%)</title><rect x="138.4" y="1557" width="0.1" height="15.0" fill="rgb(242,64,31)" rx="2" ry="2" />
<text  x="141.42" y="1567.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (30,799,424 samples, 0.03%)</title><rect x="740.0" y="965" width="0.4" height="15.0" fill="rgb(254,189,22)" rx="2" ry="2" />
<text  x="743.01" y="975.5" ></text>
</g>
<g >
<title>lapic_timer_set_oneshot (20,956,552 samples, 0.02%)</title><rect x="504.4" y="1493" width="0.3" height="15.0" fill="rgb(235,163,25)" rx="2" ry="2" />
<text  x="507.45" y="1503.5" ></text>
</g>
<g >
<title>__ip_finish_output (835,590,500 samples, 0.94%)</title><rect x="731.8" y="1189" width="11.1" height="15.0" fill="rgb(234,46,43)" rx="2" ry="2" />
<text  x="734.80" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (635,292,250 samples, 0.71%)</title><rect x="61.6" y="565" width="8.4" height="15.0" fill="rgb(251,112,9)" rx="2" ry="2" />
<text  x="64.60" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="405" width="0.8" height="15.0" fill="rgb(207,39,38)" rx="2" ry="2" />
<text  x="101.56" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="613" width="0.4" height="15.0" fill="rgb(228,69,7)" rx="2" ry="2" />
<text  x="56.54" y="623.5" ></text>
</g>
<g >
<title>__remove_hrtimer (24,538,475 samples, 0.03%)</title><rect x="706.8" y="1429" width="0.3" height="15.0" fill="rgb(214,4,35)" rx="2" ry="2" />
<text  x="709.76" y="1439.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (17,066,837 samples, 0.02%)</title><rect x="899.0" y="1429" width="0.2" height="15.0" fill="rgb(231,41,19)" rx="2" ry="2" />
<text  x="902.00" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (54,833,088 samples, 0.06%)</title><rect x="746.2" y="1525" width="0.8" height="15.0" fill="rgb(236,227,36)" rx="2" ry="2" />
<text  x="749.23" y="1535.5" ></text>
</g>
<g >
<title>default_wake_function (85,796,839 samples, 0.10%)</title><rect x="554.3" y="901" width="1.1" height="15.0" fill="rgb(238,129,19)" rx="2" ry="2" />
<text  x="557.25" y="911.5" ></text>
</g>
<g >
<title>schedule (12,035,060 samples, 0.01%)</title><rect x="46.7" y="1605" width="0.1" height="15.0" fill="rgb(244,72,24)" rx="2" ry="2" />
<text  x="49.67" y="1615.5" ></text>
</g>
<g >
<title>_int_malloc (25,262,969 samples, 0.03%)</title><rect x="752.0" y="1509" width="0.3" height="15.0" fill="rgb(228,119,26)" rx="2" ry="2" />
<text  x="755.01" y="1519.5" ></text>
</g>
<g >
<title>common_file_perm (15,398,630 samples, 0.02%)</title><rect x="1186.5" y="1381" width="0.2" height="15.0" fill="rgb(217,76,27)" rx="2" ry="2" />
<text  x="1189.47" y="1391.5" ></text>
</g>
<g >
<title>nf_hook_slow (13,969,218 samples, 0.02%)</title><rect x="43.4" y="1461" width="0.2" height="15.0" fill="rgb(208,37,14)" rx="2" ry="2" />
<text  x="46.45" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,318,551 samples, 0.04%)</title><rect x="53.9" y="533" width="0.4" height="15.0" fill="rgb(237,184,3)" rx="2" ry="2" />
<text  x="56.88" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (24,704,807 samples, 0.03%)</title><rect x="132.5" y="1573" width="0.3" height="15.0" fill="rgb(246,134,2)" rx="2" ry="2" />
<text  x="135.51" y="1583.5" ></text>
</g>
<g >
<title>br_nf_pre_routing_finish (95,495,846 samples, 0.11%)</title><rect x="41.7" y="1461" width="1.2" height="15.0" fill="rgb(210,183,29)" rx="2" ry="2" />
<text  x="44.67" y="1471.5" ></text>
</g>
<g >
<title>mongo::ServerStatusSection::appendSection (31,981,342 samples, 0.04%)</title><rect x="15.3" y="1493" width="0.5" height="15.0" fill="rgb(249,155,20)" rx="2" ry="2" />
<text  x="18.35" y="1503.5" ></text>
</g>
<g >
<title>kmem_cache_free (75,103,861 samples, 0.08%)</title><rect x="513.4" y="1269" width="1.0" height="15.0" fill="rgb(236,30,29)" rx="2" ry="2" />
<text  x="516.37" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (169,306,075 samples, 0.19%)</title><rect x="107.8" y="165" width="2.2" height="15.0" fill="rgb(222,201,12)" rx="2" ry="2" />
<text  x="110.78" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,698,765,444 samples, 1.91%)</title><rect x="59.2" y="1237" width="22.5" height="15.0" fill="rgb(223,35,27)" rx="2" ry="2" />
<text  x="62.20" y="1247.5" >s..</text>
</g>
<g >
<title>iptable_mangle_hook (18,309,759 samples, 0.02%)</title><rect x="1170.3" y="949" width="0.2" height="15.0" fill="rgb(250,68,10)" rx="2" ry="2" />
<text  x="1173.29" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1285" width="3.0" height="15.0" fill="rgb(248,39,36)" rx="2" ry="2" />
<text  x="131.55" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,271,264 samples, 0.55%)</title><rect x="100.1" y="629" width="6.5" height="15.0" fill="rgb(224,100,54)" rx="2" ry="2" />
<text  x="103.13" y="639.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/vendor/github.com/hashicorp/memberlist.(*Memberlist).streamListen.func1 (25,652,766 samples, 0.03%)</title><rect x="12.0" y="1637" width="0.3" height="15.0" fill="rgb(250,68,46)" rx="2" ry="2" />
<text  x="14.99" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb (11,824,158 samples, 0.01%)</title><rect x="650.3" y="1381" width="0.2" height="15.0" fill="rgb(211,52,38)" rx="2" ry="2" />
<text  x="653.33" y="1391.5" ></text>
</g>
<g >
<title>br_nf_forward_ip (32,835,559 samples, 0.04%)</title><rect x="251.2" y="1269" width="0.4" height="15.0" fill="rgb(239,0,49)" rx="2" ry="2" />
<text  x="254.18" y="1279.5" ></text>
</g>
<g >
<title>skb_release_all (41,025,236 samples, 0.05%)</title><rect x="520.0" y="1397" width="0.6" height="15.0" fill="rgb(252,138,3)" rx="2" ry="2" />
<text  x="523.03" y="1407.5" ></text>
</g>
<g >
<title>veth_xmit (9,730,146 samples, 0.01%)</title><rect x="568.6" y="1173" width="0.2" height="15.0" fill="rgb(218,96,16)" rx="2" ry="2" />
<text  x="571.64" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1253" width="0.8" height="15.0" fill="rgb(241,140,45)" rx="2" ry="2" />
<text  x="101.56" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (64,616,695 samples, 0.07%)</title><rect x="1188.7" y="1653" width="0.8" height="15.0" fill="rgb(242,5,19)" rx="2" ry="2" />
<text  x="1191.67" y="1663.5" ></text>
</g>
<g >
<title>nf_nat_packet (14,392,527 samples, 0.02%)</title><rect x="1182.1" y="1125" width="0.2" height="15.0" fill="rgb(253,119,32)" rx="2" ry="2" />
<text  x="1185.09" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="453" width="1.4" height="15.0" fill="rgb(206,210,2)" rx="2" ry="2" />
<text  x="100.15" y="463.5" ></text>
</g>
<g >
<title>__check_object_size (8,555,165 samples, 0.01%)</title><rect x="96.1" y="1477" width="0.1" height="15.0" fill="rgb(245,220,41)" rx="2" ry="2" />
<text  x="99.11" y="1487.5" ></text>
</g>
<g >
<title>net_rx_action (8,070,572 samples, 0.01%)</title><rect x="987.2" y="1445" width="0.1" height="15.0" fill="rgb(210,7,5)" rx="2" ry="2" />
<text  x="990.15" y="1455.5" ></text>
</g>
<g >
<title>ipv4_confirm (10,603,953 samples, 0.01%)</title><rect x="1181.4" y="1189" width="0.2" height="15.0" fill="rgb(237,36,31)" rx="2" ry="2" />
<text  x="1184.42" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="453" width="0.4" height="15.0" fill="rgb(242,99,48)" rx="2" ry="2" />
<text  x="56.88" y="463.5" ></text>
</g>
<g >
<title>blk_mq_make_request (11,296,465 samples, 0.01%)</title><rect x="33.6" y="1461" width="0.1" height="15.0" fill="rgb(250,198,41)" rx="2" ry="2" />
<text  x="36.60" y="1471.5" ></text>
</g>
<g >
<title>__wake_up_common (60,083,633 samples, 0.07%)</title><rect x="145.6" y="1285" width="0.7" height="15.0" fill="rgb(233,202,44)" rx="2" ry="2" />
<text  x="148.55" y="1295.5" ></text>
</g>
<g >
<title>__sprintf (823,851,071 samples, 0.92%)</title><rect x="1104.1" y="1493" width="10.9" height="15.0" fill="rgb(242,66,21)" rx="2" ry="2" />
<text  x="1107.09" y="1503.5" ></text>
</g>
<g >
<title>br_nf_hook_thresh (11,011,811 samples, 0.01%)</title><rect x="41.4" y="1413" width="0.1" height="15.0" fill="rgb(213,76,1)" rx="2" ry="2" />
<text  x="44.35" y="1423.5" ></text>
</g>
<g >
<title>lj_mem_realloc (28,439,788 samples, 0.03%)</title><rect x="1115.5" y="1493" width="0.4" height="15.0" fill="rgb(231,217,49)" rx="2" ry="2" />
<text  x="1118.49" y="1503.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted (15,166,789 samples, 0.02%)</title><rect x="168.0" y="1173" width="0.2" height="15.0" fill="rgb(237,73,47)" rx="2" ry="2" />
<text  x="170.96" y="1183.5" ></text>
</g>
<g >
<title>ext4_map_blocks (2,521,982,300 samples, 2.83%)</title><rect x="159.4" y="1237" width="33.3" height="15.0" fill="rgb(242,78,28)" rx="2" ry="2" />
<text  x="162.36" y="1247.5" >ex..</text>
</g>
<g >
<title>net_rx_action (12,070,946 samples, 0.01%)</title><rect x="650.3" y="1413" width="0.2" height="15.0" fill="rgb(240,88,25)" rx="2" ry="2" />
<text  x="653.33" y="1423.5" ></text>
</g>
<g >
<title>propagatemark (93,311,742 samples, 0.10%)</title><rect x="897.7" y="1477" width="1.2" height="15.0" fill="rgb(213,30,3)" rx="2" ry="2" />
<text  x="900.71" y="1487.5" ></text>
</g>
<g >
<title>nf_hook_slow (158,190,467 samples, 0.18%)</title><rect x="1165.4" y="885" width="2.1" height="15.0" fill="rgb(254,216,6)" rx="2" ry="2" />
<text  x="1168.42" y="895.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (10,341,090 samples, 0.01%)</title><rect x="686.9" y="1557" width="0.1" height="15.0" fill="rgb(251,61,19)" rx="2" ry="2" />
<text  x="689.86" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="869" width="18.3" height="15.0" fill="rgb(252,159,18)" rx="2" ry="2" />
<text  x="113.16" y="879.5" ></text>
</g>
<g >
<title>ext4_release_io_end (28,410,010 samples, 0.03%)</title><rect x="517.4" y="1333" width="0.4" height="15.0" fill="rgb(254,14,20)" rx="2" ry="2" />
<text  x="520.42" y="1343.5" ></text>
</g>
<g >
<title>veth_xmit (18,473,217 samples, 0.02%)</title><rect x="1180.8" y="949" width="0.2" height="15.0" fill="rgb(215,28,51)" rx="2" ry="2" />
<text  x="1183.77" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,373,780,903 samples, 1.54%)</title><rect x="59.9" y="1045" width="18.2" height="15.0" fill="rgb(220,43,4)" rx="2" ry="2" />
<text  x="62.92" y="1055.5" ></text>
</g>
<g >
<title>lapic_timer_set_oneshot (32,593,790 samples, 0.04%)</title><rect x="503.4" y="1477" width="0.5" height="15.0" fill="rgb(213,166,14)" rx="2" ry="2" />
<text  x="506.44" y="1487.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (273,851,080 samples, 0.31%)</title><rect x="732.9" y="949" width="3.7" height="15.0" fill="rgb(213,126,51)" rx="2" ry="2" />
<text  x="735.93" y="959.5" ></text>
</g>
<g >
<title>dev_queue_xmit (220,671,738 samples, 0.25%)</title><rect x="733.4" y="757" width="3.0" height="15.0" fill="rgb(215,149,36)" rx="2" ry="2" />
<text  x="736.43" y="767.5" ></text>
</g>
<g >
<title>ret_from_fork (9,421,846 samples, 0.01%)</title><rect x="44.7" y="1653" width="0.1" height="15.0" fill="rgb(218,92,5)" rx="2" ry="2" />
<text  x="47.66" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="997" width="0.3" height="15.0" fill="rgb(231,156,16)" rx="2" ry="2" />
<text  x="102.79" y="1007.5" ></text>
</g>
<g >
<title>iptunnel_xmit (15,116,309 samples, 0.02%)</title><rect x="41.8" y="1141" width="0.2" height="15.0" fill="rgb(232,4,12)" rx="2" ry="2" />
<text  x="44.81" y="1151.5" ></text>
</g>
<g >
<title>br_forward_finish (801,476,862 samples, 0.90%)</title><rect x="1147.3" y="821" width="10.6" height="15.0" fill="rgb(212,210,48)" rx="2" ry="2" />
<text  x="1150.32" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1493" width="18.3" height="15.0" fill="rgb(236,38,48)" rx="2" ry="2" />
<text  x="113.16" y="1503.5" ></text>
</g>
<g >
<title>nf_nat_packet (29,915,118 samples, 0.03%)</title><rect x="575.0" y="1333" width="0.4" height="15.0" fill="rgb(219,23,18)" rx="2" ry="2" />
<text  x="577.98" y="1343.5" ></text>
</g>
<g >
<title>sock_read_iter (1,443,576,256 samples, 1.62%)</title><rect x="725.0" y="1397" width="19.1" height="15.0" fill="rgb(251,67,44)" rx="2" ry="2" />
<text  x="728.01" y="1407.5" ></text>
</g>
<g >
<title>execute_shell_function (12,129,602 samples, 0.01%)</title><rect x="10.8" y="1269" width="0.1" height="15.0" fill="rgb(212,193,40)" rx="2" ry="2" />
<text  x="13.79" y="1279.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (11,275,833 samples, 0.01%)</title><rect x="52.0" y="1637" width="0.1" height="15.0" fill="rgb(244,140,19)" rx="2" ry="2" />
<text  x="54.98" y="1647.5" ></text>
</g>
<g >
<title>rest_init (4,348,009,023 samples, 4.88%)</title><rect x="596.4" y="1573" width="57.5" height="15.0" fill="rgb(211,3,16)" rx="2" ry="2" />
<text  x="599.36" y="1583.5" >rest_i..</text>
</g>
<g >
<title>ksys_write (7,151,954,574 samples, 8.02%)</title><rect x="143.5" y="1413" width="94.7" height="15.0" fill="rgb(215,107,44)" rx="2" ry="2" />
<text  x="146.52" y="1423.5" >ksys_write</text>
</g>
<g >
<title>___printf_fp (9,632,269 samples, 0.01%)</title><rect x="1114.2" y="1445" width="0.2" height="15.0" fill="rgb(206,213,50)" rx="2" ry="2" />
<text  x="1117.23" y="1455.5" ></text>
</g>
<g >
<title>release_sock (7,581,702 samples, 0.01%)</title><rect x="1126.6" y="1333" width="0.1" height="15.0" fill="rgb(253,48,16)" rx="2" ry="2" />
<text  x="1129.61" y="1343.5" ></text>
</g>
<g >
<title>__fget_light (12,428,838 samples, 0.01%)</title><rect x="746.4" y="1461" width="0.2" height="15.0" fill="rgb(245,154,28)" rx="2" ry="2" />
<text  x="749.39" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (6,049,411,966 samples, 6.78%)</title><rect x="53.5" y="1653" width="80.1" height="15.0" fill="rgb(221,163,34)" rx="2" ry="2" />
<text  x="56.54" y="1663.5" >[unknown]</text>
</g>
<g >
<title>tcp_stream_memory_free (11,736,226 samples, 0.01%)</title><rect x="704.9" y="1413" width="0.2" height="15.0" fill="rgb(214,155,44)" rx="2" ry="2" />
<text  x="707.91" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="965" width="0.4" height="15.0" fill="rgb(225,73,11)" rx="2" ry="2" />
<text  x="56.88" y="975.5" ></text>
</g>
<g >
<title>tcp_delack_timer (61,145,426 samples, 0.07%)</title><rect x="255.3" y="1429" width="0.8" height="15.0" fill="rgb(236,52,38)" rx="2" ry="2" />
<text  x="258.32" y="1439.5" ></text>
</g>
<g >
<title>nf_hook_slow (217,979,127 samples, 0.24%)</title><rect x="737.1" y="981" width="2.9" height="15.0" fill="rgb(247,117,19)" rx="2" ry="2" />
<text  x="740.09" y="991.5" ></text>
</g>
<g >
<title>__libc_use_alloca (11,408,289 samples, 0.01%)</title><rect x="1110.8" y="1429" width="0.2" height="15.0" fill="rgb(231,129,3)" rx="2" ry="2" />
<text  x="1113.82" y="1439.5" ></text>
</g>
<g >
<title>new_sync_read (1,452,528,073 samples, 1.63%)</title><rect x="724.9" y="1413" width="19.2" height="15.0" fill="rgb(246,73,10)" rx="2" ry="2" />
<text  x="727.90" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1013" width="18.3" height="15.0" fill="rgb(249,108,17)" rx="2" ry="2" />
<text  x="113.16" y="1023.5" ></text>
</g>
<g >
<title>br_dev_queue_push_xmit (99,090,016 samples, 0.11%)</title><rect x="536.4" y="1125" width="1.3" height="15.0" fill="rgb(251,45,45)" rx="2" ry="2" />
<text  x="539.41" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1029" width="3.0" height="15.0" fill="rgb(248,18,15)" rx="2" ry="2" />
<text  x="131.55" y="1039.5" ></text>
</g>
<g >
<title>__netif_receive_skb (10,480,032 samples, 0.01%)</title><rect x="889.8" y="1349" width="0.2" height="15.0" fill="rgb(205,49,54)" rx="2" ry="2" />
<text  x="892.82" y="1359.5" ></text>
</g>
<g >
<title>smp_irq_work_interrupt (27,265,215 samples, 0.03%)</title><rect x="591.5" y="1525" width="0.3" height="15.0" fill="rgb(240,184,1)" rx="2" ry="2" />
<text  x="594.47" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1173" width="0.4" height="15.0" fill="rgb(227,145,27)" rx="2" ry="2" />
<text  x="56.54" y="1183.5" ></text>
</g>
<g >
<title>update_cfs_group (11,547,476 samples, 0.01%)</title><rect x="708.6" y="1365" width="0.2" height="15.0" fill="rgb(237,144,15)" rx="2" ry="2" />
<text  x="711.64" y="1375.5" ></text>
</g>
<g >
<title>ip_route_input_slow (46,649,681 samples, 0.05%)</title><rect x="558.3" y="1317" width="0.6" height="15.0" fill="rgb(217,129,33)" rx="2" ry="2" />
<text  x="561.25" y="1327.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (12,429,250 samples, 0.01%)</title><rect x="561.2" y="1349" width="0.1" height="15.0" fill="rgb(224,56,6)" rx="2" ry="2" />
<text  x="564.17" y="1359.5" ></text>
</g>
<g >
<title>ext4_read_block_bitmap_nowait (108,981,288 samples, 0.12%)</title><rect x="182.7" y="1141" width="1.4" height="15.0" fill="rgb(224,162,53)" rx="2" ry="2" />
<text  x="185.66" y="1151.5" ></text>
</g>
<g >
<title>timerqueue_add (10,682,136 samples, 0.01%)</title><rect x="706.3" y="1413" width="0.1" height="15.0" fill="rgb(234,98,20)" rx="2" ry="2" />
<text  x="709.27" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="805" width="0.4" height="15.0" fill="rgb(250,201,52)" rx="2" ry="2" />
<text  x="56.54" y="815.5" ></text>
</g>
<g >
<title>newidle_balance (8,102,700 samples, 0.01%)</title><rect x="135.7" y="1397" width="0.1" height="15.0" fill="rgb(229,174,26)" rx="2" ry="2" />
<text  x="138.66" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,830,167 samples, 0.12%)</title><rect x="105.0" y="117" width="1.4" height="15.0" fill="rgb(226,19,49)" rx="2" ry="2" />
<text  x="108.00" y="127.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (23,915,330 samples, 0.03%)</title><rect x="1167.8" y="869" width="0.3" height="15.0" fill="rgb(238,5,7)" rx="2" ry="2" />
<text  x="1170.75" y="879.5" ></text>
</g>
<g >
<title>udp_queue_rcv_one_skb (89,991,487 samples, 0.10%)</title><rect x="528.4" y="1221" width="1.2" height="15.0" fill="rgb(246,218,8)" rx="2" ry="2" />
<text  x="531.41" y="1231.5" ></text>
</g>
<g >
<title>operator new (14,676,790 samples, 0.02%)</title><rect x="70.7" y="597" width="0.2" height="15.0" fill="rgb(254,133,7)" rx="2" ry="2" />
<text  x="73.71" y="607.5" ></text>
</g>
<g >
<title>do_IRQ (15,350,524 samples, 0.02%)</title><rect x="920.2" y="1461" width="0.2" height="15.0" fill="rgb(242,106,13)" rx="2" ry="2" />
<text  x="923.20" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,318,551 samples, 0.04%)</title><rect x="53.9" y="981" width="0.4" height="15.0" fill="rgb(251,157,42)" rx="2" ry="2" />
<text  x="56.88" y="991.5" ></text>
</g>
<g >
<title>nf_nat_manip_pkt (17,834,144 samples, 0.02%)</title><rect x="1164.6" y="789" width="0.3" height="15.0" fill="rgb(227,197,18)" rx="2" ry="2" />
<text  x="1167.63" y="799.5" ></text>
</g>
<g >
<title>lj_alloc_realloc (15,884,888 samples, 0.02%)</title><rect x="1121.6" y="1445" width="0.2" height="15.0" fill="rgb(222,49,7)" rx="2" ry="2" />
<text  x="1124.59" y="1455.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (9,772,548 samples, 0.01%)</title><rect x="537.1" y="1013" width="0.1" height="15.0" fill="rgb(231,159,26)" rx="2" ry="2" />
<text  x="540.09" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1445" width="0.4" height="15.0" fill="rgb(228,19,49)" rx="2" ry="2" />
<text  x="56.88" y="1455.5" ></text>
</g>
<g >
<title>ip_vs_nat_xmit (20,600,969 samples, 0.02%)</title><rect x="252.1" y="1301" width="0.2" height="15.0" fill="rgb(213,132,20)" rx="2" ry="2" />
<text  x="255.07" y="1311.5" ></text>
</g>
<g >
<title>lj_str_new (16,484,767 samples, 0.02%)</title><rect x="1118.3" y="1525" width="0.2" height="15.0" fill="rgb(247,41,6)" rx="2" ry="2" />
<text  x="1121.33" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="533" width="0.4" height="15.0" fill="rgb(240,31,51)" rx="2" ry="2" />
<text  x="56.54" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (89,933,054 samples, 0.10%)</title><rect x="106.6" y="133" width="1.2" height="15.0" fill="rgb(235,45,48)" rx="2" ry="2" />
<text  x="109.59" y="143.5" ></text>
</g>
<g >
<title>ip_forward (443,874,748 samples, 0.50%)</title><rect x="562.1" y="1381" width="5.8" height="15.0" fill="rgb(247,12,12)" rx="2" ry="2" />
<text  x="565.06" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1061" width="0.3" height="15.0" fill="rgb(206,2,32)" rx="2" ry="2" />
<text  x="102.79" y="1071.5" ></text>
</g>
<g >
<title>ext4_read_block_bitmap (128,000,368 samples, 0.14%)</title><rect x="182.5" y="1157" width="1.7" height="15.0" fill="rgb(234,54,15)" rx="2" ry="2" />
<text  x="185.48" y="1167.5" ></text>
</g>
<g >
<title>execute_command (32,949,984 samples, 0.04%)</title><rect x="10.6" y="1493" width="0.5" height="15.0" fill="rgb(228,70,38)" rx="2" ry="2" />
<text  x="13.64" y="1503.5" ></text>
</g>
<g >
<title>complete_walk (9,478,222 samples, 0.01%)</title><rect x="88.6" y="1445" width="0.1" height="15.0" fill="rgb(233,170,53)" rx="2" ry="2" />
<text  x="91.58" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1349" width="18.3" height="15.0" fill="rgb(243,31,45)" rx="2" ry="2" />
<text  x="113.16" y="1359.5" ></text>
</g>
<g >
<title>__alloc_skb (21,389,083 samples, 0.02%)</title><rect x="547.7" y="1029" width="0.3" height="15.0" fill="rgb(252,104,44)" rx="2" ry="2" />
<text  x="550.72" y="1039.5" ></text>
</g>
<g >
<title>enqueue_task_fair (21,561,776 samples, 0.02%)</title><rect x="145.8" y="1189" width="0.3" height="15.0" fill="rgb(232,162,29)" rx="2" ry="2" />
<text  x="148.80" y="1199.5" ></text>
</g>
<g >
<title>process_backlog (181,536,009 samples, 0.20%)</title><rect x="41.6" y="1557" width="2.4" height="15.0" fill="rgb(231,165,21)" rx="2" ry="2" />
<text  x="44.56" y="1567.5" ></text>
</g>
<g >
<title>ext4_get_branch (318,186,663 samples, 0.36%)</title><rect x="188.0" y="1205" width="4.2" height="15.0" fill="rgb(240,98,51)" rx="2" ry="2" />
<text  x="190.96" y="1215.5" ></text>
</g>
<g >
<title>tick_do_broadcast (95,758,714 samples, 0.11%)</title><rect x="639.6" y="1269" width="1.3" height="15.0" fill="rgb(233,154,30)" rx="2" ry="2" />
<text  x="642.61" y="1279.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1,169,786,053 samples, 1.31%)</title><rect x="1144.0" y="1013" width="15.5" height="15.0" fill="rgb(251,179,34)" rx="2" ry="2" />
<text  x="1147.02" y="1023.5" ></text>
</g>
<g >
<title>__x64_sys_execve (8,179,111 samples, 0.01%)</title><rect x="138.4" y="1621" width="0.1" height="15.0" fill="rgb(209,71,15)" rx="2" ry="2" />
<text  x="141.42" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="501" width="1.4" height="15.0" fill="rgb(241,82,32)" rx="2" ry="2" />
<text  x="100.15" y="511.5" ></text>
</g>
<g >
<title>kmem_cache_free (26,980,999 samples, 0.03%)</title><rect x="517.4" y="1317" width="0.4" height="15.0" fill="rgb(215,24,28)" rx="2" ry="2" />
<text  x="520.44" y="1327.5" ></text>
</g>
<g >
<title>schedule (16,359,695 samples, 0.02%)</title><rect x="45.7" y="1605" width="0.2" height="15.0" fill="rgb(221,13,7)" rx="2" ry="2" />
<text  x="48.66" y="1615.5" ></text>
</g>
<g >
<title>tick_irq_enter (15,505,377 samples, 0.02%)</title><rect x="250.4" y="1493" width="0.2" height="15.0" fill="rgb(252,110,9)" rx="2" ry="2" />
<text  x="253.38" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="533" width="3.6" height="15.0" fill="rgb(254,182,33)" rx="2" ry="2" />
<text  x="109.59" y="543.5" ></text>
</g>
<g >
<title>__netif_receive_skb (59,734,595 samples, 0.07%)</title><rect x="42.1" y="1365" width="0.8" height="15.0" fill="rgb(219,185,32)" rx="2" ry="2" />
<text  x="45.09" y="1375.5" ></text>
</g>
<g >
<title>ext4_io_submit (371,387,597 samples, 0.42%)</title><rect x="33.4" y="1493" width="4.9" height="15.0" fill="rgb(234,25,42)" rx="2" ry="2" />
<text  x="36.40" y="1503.5" ></text>
</g>
<g >
<title>br_nf_post_routing (141,839,969 samples, 0.16%)</title><rect x="535.9" y="1157" width="1.9" height="15.0" fill="rgb(215,156,35)" rx="2" ry="2" />
<text  x="538.92" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="789" width="0.4" height="15.0" fill="rgb(221,199,11)" rx="2" ry="2" />
<text  x="56.54" y="799.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (12,798,683 samples, 0.01%)</title><rect x="1142.0" y="1173" width="0.1" height="15.0" fill="rgb(207,196,15)" rx="2" ry="2" />
<text  x="1144.96" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,794,724,605 samples, 2.01%)</title><rect x="59.0" y="1269" width="23.8" height="15.0" fill="rgb(210,107,4)" rx="2" ry="2" />
<text  x="62.05" y="1279.5" >s..</text>
</g>
<g >
<title>__x64_sys_poll (157,192,338 samples, 0.18%)</title><rect x="133.9" y="1525" width="2.1" height="15.0" fill="rgb(248,211,8)" rx="2" ry="2" />
<text  x="136.94" y="1535.5" ></text>
</g>
<g >
<title>eth_gro_receive (34,993,365 samples, 0.04%)</title><rect x="524.1" y="1317" width="0.4" height="15.0" fill="rgb(228,93,47)" rx="2" ry="2" />
<text  x="527.08" y="1327.5" ></text>
</g>
<g >
<title>apparmor_file_permission (15,398,630 samples, 0.02%)</title><rect x="1186.5" y="1397" width="0.2" height="15.0" fill="rgb(219,94,30)" rx="2" ry="2" />
<text  x="1189.47" y="1407.5" ></text>
</g>
<g >
<title>ext4_get_group_no_and_offset (16,652,565 samples, 0.02%)</title><rect x="185.5" y="1141" width="0.3" height="15.0" fill="rgb(237,7,25)" rx="2" ry="2" />
<text  x="188.55" y="1151.5" ></text>
</g>
<g >
<title>__xa_set_mark (60,908,506 samples, 0.07%)</title><rect x="220.3" y="1221" width="0.9" height="15.0" fill="rgb(210,200,10)" rx="2" ry="2" />
<text  x="223.34" y="1231.5" ></text>
</g>
<g >
<title>call_cpuidle (25,245,663,646 samples, 28.31%)</title><rect x="245.2" y="1589" width="334.1" height="15.0" fill="rgb(205,85,29)" rx="2" ry="2" />
<text  x="248.19" y="1599.5" >call_cpuidle</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="837" width="3.0" height="15.0" fill="rgb(220,149,1)" rx="2" ry="2" />
<text  x="131.55" y="847.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/libnetwork/networkdb.(*NetworkDB).gossip (10,759,724 samples, 0.01%)</title><rect x="11.6" y="1589" width="0.1" height="15.0" fill="rgb(225,224,2)" rx="2" ry="2" />
<text  x="14.60" y="1599.5" ></text>
</g>
<g >
<title>nf_hook_slow (271,110,697 samples, 0.30%)</title><rect x="571.8" y="1397" width="3.6" height="15.0" fill="rgb(220,207,35)" rx="2" ry="2" />
<text  x="574.83" y="1407.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (54,001,886 samples, 0.06%)</title><rect x="42.1" y="1253" width="0.7" height="15.0" fill="rgb(245,64,43)" rx="2" ry="2" />
<text  x="45.11" y="1263.5" ></text>
</g>
<g >
<title>lj_mem_realloc (8,825,941 samples, 0.01%)</title><rect x="1189.7" y="1653" width="0.1" height="15.0" fill="rgb(222,41,42)" rx="2" ry="2" />
<text  x="1192.73" y="1663.5" ></text>
</g>
<g >
<title>bnx2_poll_msix (22,344,553 samples, 0.03%)</title><rect x="41.0" y="1557" width="0.3" height="15.0" fill="rgb(217,110,25)" rx="2" ry="2" />
<text  x="44.00" y="1567.5" ></text>
</g>
<g >
<title>nf_nat_packet (14,479,744 samples, 0.02%)</title><rect x="731.4" y="1141" width="0.2" height="15.0" fill="rgb(231,0,6)" rx="2" ry="2" />
<text  x="734.44" y="1151.5" ></text>
</g>
<g >
<title>__strchrnul_sse2 (15,716,687 samples, 0.02%)</title><rect x="680.5" y="1557" width="0.2" height="15.0" fill="rgb(210,128,50)" rx="2" ry="2" />
<text  x="683.46" y="1567.5" ></text>
</g>
<g >
<title>__vfs_read (13,214,025 samples, 0.01%)</title><rect x="240.7" y="1461" width="0.2" height="15.0" fill="rgb(215,204,42)" rx="2" ry="2" />
<text  x="243.69" y="1471.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (1,509,453,986 samples, 1.69%)</title><rect x="194.5" y="1285" width="20.0" height="15.0" fill="rgb(212,9,53)" rx="2" ry="2" />
<text  x="197.54" y="1295.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (35,954,126 samples, 0.04%)</title><rect x="507.3" y="1445" width="0.5" height="15.0" fill="rgb(216,193,48)" rx="2" ry="2" />
<text  x="510.31" y="1455.5" ></text>
</g>
<g >
<title>nf_nat_inet_fn (10,037,754 samples, 0.01%)</title><rect x="549.6" y="901" width="0.1" height="15.0" fill="rgb(219,60,41)" rx="2" ry="2" />
<text  x="552.55" y="911.5" ></text>
</g>
<g >
<title>sock_poll (61,397,319 samples, 0.07%)</title><rect x="704.3" y="1429" width="0.8" height="15.0" fill="rgb(233,147,52)" rx="2" ry="2" />
<text  x="707.25" y="1439.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (178,842,572 samples, 0.20%)</title><rect x="41.6" y="1525" width="2.4" height="15.0" fill="rgb(242,30,44)" rx="2" ry="2" />
<text  x="44.59" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="341" width="0.8" height="15.0" fill="rgb(232,110,54)" rx="2" ry="2" />
<text  x="101.56" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="661" width="0.8" height="15.0" fill="rgb(234,138,39)" rx="2" ry="2" />
<text  x="101.56" y="671.5" ></text>
</g>
<g >
<title>schedule (9,361,192 samples, 0.01%)</title><rect x="241.3" y="1589" width="0.2" height="15.0" fill="rgb(242,221,35)" rx="2" ry="2" />
<text  x="244.33" y="1599.5" ></text>
</g>
<g >
<title>block_write_end (8,220,900 samples, 0.01%)</title><rect x="149.3" y="1301" width="0.2" height="15.0" fill="rgb(230,7,29)" rx="2" ry="2" />
<text  x="152.34" y="1311.5" ></text>
</g>
<g >
<title>__clone (9,585,215 samples, 0.01%)</title><rect x="47.7" y="1653" width="0.2" height="15.0" fill="rgb(244,67,27)" rx="2" ry="2" />
<text  x="50.74" y="1663.5" ></text>
</g>
<g >
<title>__GI___poll (179,607,913 samples, 0.20%)</title><rect x="133.7" y="1573" width="2.4" height="15.0" fill="rgb(254,156,48)" rx="2" ry="2" />
<text  x="136.70" y="1583.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (9,910,647 samples, 0.01%)</title><rect x="251.7" y="1109" width="0.1" height="15.0" fill="rgb(250,145,37)" rx="2" ry="2" />
<text  x="254.65" y="1119.5" ></text>
</g>
<g >
<title>__fget_light (28,098,252 samples, 0.03%)</title><rect x="1124.6" y="1429" width="0.3" height="15.0" fill="rgb(221,213,51)" rx="2" ry="2" />
<text  x="1127.58" y="1439.5" ></text>
</g>
<g >
<title>irq_exit (9,982,589 samples, 0.01%)</title><rect x="1090.4" y="1493" width="0.2" height="15.0" fill="rgb(226,94,52)" rx="2" ry="2" />
<text  x="1093.44" y="1503.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (26,838,963 samples, 0.03%)</title><rect x="731.0" y="1141" width="0.3" height="15.0" fill="rgb(233,205,24)" rx="2" ry="2" />
<text  x="733.96" y="1151.5" ></text>
</g>
<g >
<title>lapic_timer_broadcast (95,551,183 samples, 0.11%)</title><rect x="639.6" y="1253" width="1.3" height="15.0" fill="rgb(212,209,9)" rx="2" ry="2" />
<text  x="642.61" y="1263.5" ></text>
</g>
<g >
<title>select_estimate_accuracy (20,078,503 samples, 0.02%)</title><rect x="713.0" y="1477" width="0.2" height="15.0" fill="rgb(223,116,18)" rx="2" ry="2" />
<text  x="715.98" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1013" width="3.6" height="15.0" fill="rgb(246,2,44)" rx="2" ry="2" />
<text  x="109.59" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="949" width="0.8" height="15.0" fill="rgb(209,21,4)" rx="2" ry="2" />
<text  x="101.56" y="959.5" ></text>
</g>
<g >
<title>enqueue_entity (25,883,399 samples, 0.03%)</title><rect x="94.3" y="1397" width="0.3" height="15.0" fill="rgb(253,193,40)" rx="2" ry="2" />
<text  x="97.28" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="869" width="6.5" height="15.0" fill="rgb(248,78,47)" rx="2" ry="2" />
<text  x="103.13" y="879.5" ></text>
</g>
<g >
<title>ip_vs_nat_xmit (7,738,589 samples, 0.01%)</title><rect x="1169.0" y="917" width="0.1" height="15.0" fill="rgb(225,126,26)" rx="2" ry="2" />
<text  x="1172.02" y="927.5" ></text>
</g>
<g >
<title>__fdget (23,024,952 samples, 0.03%)</title><rect x="702.6" y="1493" width="0.3" height="15.0" fill="rgb(232,136,35)" rx="2" ry="2" />
<text  x="705.59" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="885" width="3.0" height="15.0" fill="rgb(216,0,42)" rx="2" ry="2" />
<text  x="131.55" y="895.5" ></text>
</g>
<g >
<title>ext4_do_update_inode (185,667,005 samples, 0.21%)</title><rect x="172.4" y="1109" width="2.5" height="15.0" fill="rgb(233,220,1)" rx="2" ry="2" />
<text  x="175.41" y="1119.5" ></text>
</g>
<g >
<title>__mpn_mul (26,857,655 samples, 0.03%)</title><rect x="1111.7" y="1429" width="0.3" height="15.0" fill="rgb(208,114,28)" rx="2" ry="2" />
<text  x="1114.69" y="1439.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (115,633,760 samples, 0.13%)</title><rect x="639.4" y="1333" width="1.5" height="15.0" fill="rgb(225,176,7)" rx="2" ry="2" />
<text  x="642.36" y="1343.5" ></text>
</g>
<g >
<title>ipt_do_table (8,460,204 samples, 0.01%)</title><rect x="557.4" y="1125" width="0.1" height="15.0" fill="rgb(206,159,6)" rx="2" ry="2" />
<text  x="560.37" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="741" width="3.6" height="15.0" fill="rgb(211,127,21)" rx="2" ry="2" />
<text  x="109.59" y="751.5" ></text>
</g>
<g >
<title>dev_queue_xmit (20,808,154 samples, 0.02%)</title><rect x="568.6" y="1221" width="0.2" height="15.0" fill="rgb(210,34,39)" rx="2" ry="2" />
<text  x="571.55" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,621,857 samples, 0.55%)</title><rect x="100.1" y="1285" width="6.5" height="15.0" fill="rgb(233,76,51)" rx="2" ry="2" />
<text  x="103.13" y="1295.5" ></text>
</g>
<g >
<title>skb_checksum_help (47,903,261 samples, 0.05%)</title><rect x="1155.6" y="453" width="0.6" height="15.0" fill="rgb(223,16,36)" rx="2" ry="2" />
<text  x="1158.56" y="463.5" ></text>
</g>
<g >
<title>__fsnotify_parent (19,575,335 samples, 0.02%)</title><rect x="238.7" y="1413" width="0.3" height="15.0" fill="rgb(210,199,24)" rx="2" ry="2" />
<text  x="241.73" y="1423.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (956,696,942 samples, 1.07%)</title><rect x="1145.9" y="933" width="12.6" height="15.0" fill="rgb(210,120,36)" rx="2" ry="2" />
<text  x="1148.88" y="943.5" ></text>
</g>
<g >
<title>__wake_up_common (88,949,758 samples, 0.10%)</title><rect x="554.2" y="933" width="1.2" height="15.0" fill="rgb(220,91,22)" rx="2" ry="2" />
<text  x="557.21" y="943.5" ></text>
</g>
<g >
<title>irq_work_queue (13,742,195 samples, 0.02%)</title><rect x="709.7" y="1333" width="0.2" height="15.0" fill="rgb(250,190,40)" rx="2" ry="2" />
<text  x="712.69" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="885" width="0.8" height="15.0" fill="rgb(253,198,6)" rx="2" ry="2" />
<text  x="101.56" y="895.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_fn (25,305,397 samples, 0.03%)</title><rect x="560.7" y="1333" width="0.3" height="15.0" fill="rgb(228,77,8)" rx="2" ry="2" />
<text  x="563.70" y="1343.5" ></text>
</g>
<g >
<title>_int_free (12,435,903 samples, 0.01%)</title><rect x="67.0" y="405" width="0.2" height="15.0" fill="rgb(247,143,43)" rx="2" ry="2" />
<text  x="69.99" y="415.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (10,326,748 samples, 0.01%)</title><rect x="962.3" y="1477" width="0.1" height="15.0" fill="rgb(232,124,23)" rx="2" ry="2" />
<text  x="965.26" y="1487.5" ></text>
</g>
<g >
<title>kthread (17,308,974 samples, 0.02%)</title><rect x="40.5" y="1637" width="0.2" height="15.0" fill="rgb(211,104,54)" rx="2" ry="2" />
<text  x="43.52" y="1647.5" ></text>
</g>
<g >
<title>put_cpu_partial (25,923,158 samples, 0.03%)</title><rect x="514.0" y="1237" width="0.4" height="15.0" fill="rgb(227,123,53)" rx="2" ry="2" />
<text  x="517.02" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="821" width="18.3" height="15.0" fill="rgb(237,6,19)" rx="2" ry="2" />
<text  x="113.16" y="831.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (22,591,432 samples, 0.03%)</title><rect x="550.2" y="757" width="0.3" height="15.0" fill="rgb(214,112,50)" rx="2" ry="2" />
<text  x="553.19" y="767.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (264,806,984 samples, 0.30%)</title><rect x="547.7" y="1045" width="3.5" height="15.0" fill="rgb(225,229,24)" rx="2" ry="2" />
<text  x="550.70" y="1055.5" ></text>
</g>
<g >
<title>__strncpy_sse2_unaligned (28,692,154 samples, 0.03%)</title><rect x="681.3" y="1621" width="0.3" height="15.0" fill="rgb(254,113,4)" rx="2" ry="2" />
<text  x="684.26" y="1631.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (690,366,967 samples, 0.77%)</title><rect x="204.1" y="1253" width="9.1" height="15.0" fill="rgb(210,147,24)" rx="2" ry="2" />
<text  x="207.10" y="1263.5" ></text>
</g>
<g >
<title>do_IRQ (24,407,154 samples, 0.03%)</title><rect x="591.8" y="1525" width="0.4" height="15.0" fill="rgb(234,68,51)" rx="2" ry="2" />
<text  x="594.84" y="1535.5" ></text>
</g>
<g >
<title>execute_command_internal (32,949,984 samples, 0.04%)</title><rect x="10.6" y="1477" width="0.5" height="15.0" fill="rgb(218,168,6)" rx="2" ry="2" />
<text  x="13.64" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1125" width="0.8" height="15.0" fill="rgb(226,68,11)" rx="2" ry="2" />
<text  x="101.56" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,621,857 samples, 0.55%)</title><rect x="100.1" y="1349" width="6.5" height="15.0" fill="rgb(220,107,8)" rx="2" ry="2" />
<text  x="103.13" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,113,861 samples, 0.01%)</title><rect x="80.2" y="1109" width="0.1" height="15.0" fill="rgb(245,47,29)" rx="2" ry="2" />
<text  x="83.19" y="1119.5" ></text>
</g>
<g >
<title>lj_gc_step (9,835,360,507 samples, 11.03%)</title><rect x="790.3" y="1509" width="130.2" height="15.0" fill="rgb(220,48,35)" rx="2" ry="2" />
<text  x="793.32" y="1519.5" >lj_gc_step</text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1621" width="0.4" height="15.0" fill="rgb(213,13,22)" rx="2" ry="2" />
<text  x="56.54" y="1631.5" ></text>
</g>
<g >
<title>vxlan_xmit (664,500,023 samples, 0.75%)</title><rect x="1148.7" y="693" width="8.8" height="15.0" fill="rgb(205,142,36)" rx="2" ry="2" />
<text  x="1151.74" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="757" width="3.6" height="15.0" fill="rgb(248,203,19)" rx="2" ry="2" />
<text  x="109.59" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1013" width="0.4" height="15.0" fill="rgb(220,4,43)" rx="2" ry="2" />
<text  x="56.88" y="1023.5" ></text>
</g>
<g >
<title>br_forward_finish (27,190,519 samples, 0.03%)</title><rect x="550.2" y="805" width="0.3" height="15.0" fill="rgb(228,211,45)" rx="2" ry="2" />
<text  x="553.17" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,140,265 samples, 0.01%)</title><rect x="84.9" y="1365" width="0.2" height="15.0" fill="rgb(208,101,54)" rx="2" ry="2" />
<text  x="87.94" y="1375.5" ></text>
</g>
<g >
<title>ip_rcv_finish (917,349,054 samples, 1.03%)</title><rect x="545.9" y="1189" width="12.1" height="15.0" fill="rgb(222,100,29)" rx="2" ry="2" />
<text  x="548.86" y="1199.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (63,020,632 samples, 0.07%)</title><rect x="741.6" y="1141" width="0.8" height="15.0" fill="rgb(225,30,10)" rx="2" ry="2" />
<text  x="744.58" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1397" width="0.3" height="15.0" fill="rgb(228,162,0)" rx="2" ry="2" />
<text  x="102.79" y="1407.5" ></text>
</g>
<g >
<title>string_quote_removal (8,435,251 samples, 0.01%)</title><rect x="10.6" y="1253" width="0.2" height="15.0" fill="rgb(219,191,45)" rx="2" ry="2" />
<text  x="13.65" y="1263.5" ></text>
</g>
<g >
<title>kthread (26,619,934 samples, 0.03%)</title><rect x="45.2" y="1637" width="0.3" height="15.0" fill="rgb(232,197,51)" rx="2" ry="2" />
<text  x="48.15" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1429" width="1.4" height="15.0" fill="rgb(254,5,7)" rx="2" ry="2" />
<text  x="100.15" y="1439.5" ></text>
</g>
<g >
<title>clear_page_dirty_for_io (73,804,238 samples, 0.08%)</title><rect x="38.5" y="1525" width="1.0" height="15.0" fill="rgb(238,155,47)" rx="2" ry="2" />
<text  x="41.50" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="821" width="0.3" height="15.0" fill="rgb(248,82,41)" rx="2" ry="2" />
<text  x="102.79" y="831.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (13,189,588 samples, 0.01%)</title><rect x="70.7" y="581" width="0.2" height="15.0" fill="rgb(236,37,27)" rx="2" ry="2" />
<text  x="73.73" y="591.5" ></text>
</g>
<g >
<title>vfs_getattr_nosec (11,237,981 samples, 0.01%)</title><rect x="90.9" y="1477" width="0.2" height="15.0" fill="rgb(241,144,5)" rx="2" ry="2" />
<text  x="93.92" y="1487.5" ></text>
</g>
<g >
<title>ret_from_intr (26,573,535 samples, 0.03%)</title><rect x="889.6" y="1445" width="0.4" height="15.0" fill="rgb(224,108,37)" rx="2" ry="2" />
<text  x="892.61" y="1455.5" ></text>
</g>
<g >
<title>execute_command (12,397,920 samples, 0.01%)</title><rect x="10.8" y="1397" width="0.2" height="15.0" fill="rgb(212,209,26)" rx="2" ry="2" />
<text  x="13.79" y="1407.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (51,334,315 samples, 0.06%)</title><rect x="741.6" y="1125" width="0.7" height="15.0" fill="rgb(206,160,25)" rx="2" ry="2" />
<text  x="744.64" y="1135.5" ></text>
</g>
<g >
<title>br_handle_frame (310,984,364 samples, 0.35%)</title><rect x="732.6" y="1013" width="4.2" height="15.0" fill="rgb(222,59,37)" rx="2" ry="2" />
<text  x="735.65" y="1023.5" ></text>
</g>
<g >
<title>__check_block_validity.constprop.0 (39,329,319 samples, 0.04%)</title><rect x="160.5" y="1221" width="0.5" height="15.0" fill="rgb(248,155,52)" rx="2" ry="2" />
<text  x="163.51" y="1231.5" ></text>
</g>
<g >
<title>pskb_expand_head (53,026,913 samples, 0.06%)</title><rect x="1167.6" y="885" width="0.7" height="15.0" fill="rgb(232,25,46)" rx="2" ry="2" />
<text  x="1170.56" y="895.5" ></text>
</g>
<g >
<title>ip_route_input_noref (69,977,368 samples, 0.08%)</title><rect x="526.6" y="1333" width="0.9" height="15.0" fill="rgb(232,177,51)" rx="2" ry="2" />
<text  x="529.57" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1541" width="3.6" height="15.0" fill="rgb(220,212,4)" rx="2" ry="2" />
<text  x="109.59" y="1551.5" ></text>
</g>
<g >
<title>ip_vs_out.part.0 (201,844,678 samples, 0.23%)</title><rect x="564.9" y="1317" width="2.7" height="15.0" fill="rgb(245,141,9)" rx="2" ry="2" />
<text  x="567.95" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1093" width="18.3" height="15.0" fill="rgb(236,145,43)" rx="2" ry="2" />
<text  x="113.16" y="1103.5" ></text>
</g>
<g >
<title>try_to_wake_up (83,748,776 samples, 0.09%)</title><rect x="554.3" y="885" width="1.1" height="15.0" fill="rgb(218,35,51)" rx="2" ry="2" />
<text  x="557.27" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (320,405,459 samples, 0.36%)</title><rect x="62.2" y="389" width="4.2" height="15.0" fill="rgb(224,92,37)" rx="2" ry="2" />
<text  x="65.19" y="399.5" ></text>
</g>
<g >
<title>__schedule (13,660,712 samples, 0.02%)</title><rect x="46.3" y="1589" width="0.2" height="15.0" fill="rgb(222,14,23)" rx="2" ry="2" />
<text  x="49.35" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (9,663,503 samples, 0.01%)</title><rect x="86.6" y="1429" width="0.1" height="15.0" fill="rgb(230,68,1)" rx="2" ry="2" />
<text  x="89.61" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,880,873 samples, 0.55%)</title><rect x="100.1" y="1525" width="6.5" height="15.0" fill="rgb(215,44,54)" rx="2" ry="2" />
<text  x="103.13" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_clone (10,579,320 samples, 0.01%)</title><rect x="51.3" y="1525" width="0.2" height="15.0" fill="rgb(226,104,12)" rx="2" ry="2" />
<text  x="54.34" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="693" width="0.3" height="15.0" fill="rgb(249,72,20)" rx="2" ry="2" />
<text  x="102.79" y="703.5" ></text>
</g>
<g >
<title>_raw_spin_lock (16,744,700 samples, 0.02%)</title><rect x="177.1" y="1173" width="0.2" height="15.0" fill="rgb(219,102,22)" rx="2" ry="2" />
<text  x="180.11" y="1183.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (18,085,938 samples, 0.02%)</title><rect x="132.6" y="1525" width="0.2" height="15.0" fill="rgb(205,166,14)" rx="2" ry="2" />
<text  x="135.58" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="373" width="18.3" height="15.0" fill="rgb(235,188,26)" rx="2" ry="2" />
<text  x="113.16" y="383.5" ></text>
</g>
<g >
<title>lj_alloc_realloc (12,539,726 samples, 0.01%)</title><rect x="894.2" y="1461" width="0.2" height="15.0" fill="rgb(254,220,16)" rx="2" ry="2" />
<text  x="897.24" y="1471.5" ></text>
</g>
<g >
<title>default_wake_function (44,534,166 samples, 0.05%)</title><rect x="555.9" y="917" width="0.6" height="15.0" fill="rgb(236,57,30)" rx="2" ry="2" />
<text  x="558.91" y="927.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (19,675,669 samples, 0.02%)</title><rect x="148.1" y="1285" width="0.2" height="15.0" fill="rgb(231,165,21)" rx="2" ry="2" />
<text  x="151.07" y="1295.5" ></text>
</g>
<g >
<title>napi_complete_done (603,746,282 samples, 0.68%)</title><rect x="525.2" y="1445" width="8.0" height="15.0" fill="rgb(213,194,49)" rx="2" ry="2" />
<text  x="528.20" y="1455.5" ></text>
</g>
<g >
<title>scheduler_ipi (204,246,886 samples, 0.23%)</title><rect x="639.1" y="1445" width="2.7" height="15.0" fill="rgb(209,60,3)" rx="2" ry="2" />
<text  x="642.07" y="1455.5" ></text>
</g>
<g >
<title>br_nf_pre_routing (300,934,418 samples, 0.34%)</title><rect x="732.7" y="997" width="4.0" height="15.0" fill="rgb(220,164,29)" rx="2" ry="2" />
<text  x="735.74" y="1007.5" ></text>
</g>
<g >
<title>ip_vs_conn_put (21,478,282 samples, 0.02%)</title><rect x="565.3" y="1285" width="0.3" height="15.0" fill="rgb(251,134,25)" rx="2" ry="2" />
<text  x="568.33" y="1295.5" ></text>
</g>
<g >
<title>kthread (21,664,867 samples, 0.02%)</title><rect x="46.6" y="1637" width="0.2" height="15.0" fill="rgb(254,35,43)" rx="2" ry="2" />
<text  x="49.55" y="1647.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_fn (10,833,842 samples, 0.01%)</title><rect x="549.6" y="917" width="0.1" height="15.0" fill="rgb(245,172,49)" rx="2" ry="2" />
<text  x="552.55" y="927.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (10,722,604 samples, 0.01%)</title><rect x="159.1" y="1237" width="0.2" height="15.0" fill="rgb(207,161,49)" rx="2" ry="2" />
<text  x="162.13" y="1247.5" ></text>
</g>
<g >
<title>__memchr_sse2 (32,528,400 samples, 0.04%)</title><rect x="721.8" y="1541" width="0.4" height="15.0" fill="rgb(230,171,29)" rx="2" ry="2" />
<text  x="724.82" y="1551.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (51,478,479 samples, 0.06%)</title><rect x="130.8" y="85" width="0.7" height="15.0" fill="rgb(245,131,3)" rx="2" ry="2" />
<text  x="133.80" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="773" width="18.3" height="15.0" fill="rgb(205,23,29)" rx="2" ry="2" />
<text  x="113.16" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1173" width="1.4" height="15.0" fill="rgb(245,106,34)" rx="2" ry="2" />
<text  x="100.15" y="1183.5" ></text>
</g>
<g >
<title>lj_tab_get (11,746,297 samples, 0.01%)</title><rect x="1122.4" y="1509" width="0.2" height="15.0" fill="rgb(223,74,0)" rx="2" ry="2" />
<text  x="1125.43" y="1519.5" ></text>
</g>
<g >
<title>process_one_work (8,322,098 samples, 0.01%)</title><rect x="44.8" y="1605" width="0.2" height="15.0" fill="rgb(222,127,35)" rx="2" ry="2" />
<text  x="47.84" y="1615.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (12,308,766 samples, 0.01%)</title><rect x="174.2" y="1077" width="0.1" height="15.0" fill="rgb(219,71,26)" rx="2" ry="2" />
<text  x="177.17" y="1087.5" ></text>
</g>
<g >
<title>__x64_sys_select (7,598,686 samples, 0.01%)</title><rect x="242.2" y="1525" width="0.1" height="15.0" fill="rgb(252,67,12)" rx="2" ry="2" />
<text  x="245.19" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (526,732,897 samples, 0.59%)</title><rect x="61.8" y="517" width="6.9" height="15.0" fill="rgb(224,90,53)" rx="2" ry="2" />
<text  x="64.77" y="527.5" ></text>
</g>
<g >
<title>_start (8,848,269 samples, 0.01%)</title><rect x="10.3" y="1653" width="0.1" height="15.0" fill="rgb(213,166,53)" rx="2" ry="2" />
<text  x="13.28" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1445" width="0.9" height="15.0" fill="rgb(252,81,18)" rx="2" ry="2" />
<text  x="134.54" y="1455.5" ></text>
</g>
<g >
<title>net_rx_action (9,621,183 samples, 0.01%)</title><rect x="920.3" y="1413" width="0.1" height="15.0" fill="rgb(241,73,5)" rx="2" ry="2" />
<text  x="923.26" y="1423.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/vendor/github.com/hashicorp/memberlist.(*Memberlist).readUserMsg (14,977,252 samples, 0.02%)</title><rect x="12.1" y="1605" width="0.2" height="15.0" fill="rgb(206,137,14)" rx="2" ry="2" />
<text  x="15.13" y="1615.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (59,865,321 samples, 0.07%)</title><rect x="555.8" y="1045" width="0.8" height="15.0" fill="rgb(208,166,0)" rx="2" ry="2" />
<text  x="558.76" y="1055.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_fn (20,400,698 samples, 0.02%)</title><rect x="1182.1" y="1157" width="0.2" height="15.0" fill="rgb(240,6,18)" rx="2" ry="2" />
<text  x="1185.05" y="1167.5" ></text>
</g>
<g >
<title>ip_local_deliver (779,855,732 samples, 0.87%)</title><rect x="1160.2" y="981" width="10.3" height="15.0" fill="rgb(241,24,51)" rx="2" ry="2" />
<text  x="1163.22" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1125" width="0.3" height="15.0" fill="rgb(241,207,21)" rx="2" ry="2" />
<text  x="102.79" y="1135.5" ></text>
</g>
<g >
<title>ep_poll_callback (101,225,795 samples, 0.11%)</title><rect x="554.1" y="981" width="1.4" height="15.0" fill="rgb(207,90,50)" rx="2" ry="2" />
<text  x="557.13" y="991.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (10,901,383 samples, 0.01%)</title><rect x="63.6" y="197" width="0.2" height="15.0" fill="rgb(246,38,2)" rx="2" ry="2" />
<text  x="66.61" y="207.5" ></text>
</g>
<g >
<title>ttwu_do_activate (88,669,934 samples, 0.10%)</title><rect x="247.7" y="1429" width="1.2" height="15.0" fill="rgb(225,174,50)" rx="2" ry="2" />
<text  x="250.75" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="597" width="0.4" height="15.0" fill="rgb(244,26,40)" rx="2" ry="2" />
<text  x="56.54" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1157" width="0.3" height="15.0" fill="rgb(214,108,39)" rx="2" ry="2" />
<text  x="102.79" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,190,999,557 samples, 2.46%)</title><rect x="57.8" y="1509" width="29.0" height="15.0" fill="rgb(213,14,19)" rx="2" ry="2" />
<text  x="60.78" y="1519.5" >st..</text>
</g>
<g >
<title>nf_nat_ipv4_local_fn (52,448,565 samples, 0.06%)</title><rect x="549.0" y="933" width="0.7" height="15.0" fill="rgb(250,17,31)" rx="2" ry="2" />
<text  x="552.00" y="943.5" ></text>
</g>
<g >
<title>write_cache_pages (1,788,373,897 samples, 2.01%)</title><rect x="16.6" y="1541" width="23.7" height="15.0" fill="rgb(244,144,17)" rx="2" ry="2" />
<text  x="19.59" y="1551.5" >w..</text>
</g>
<g >
<title>__libc_start_main (28,499,758 samples, 0.03%)</title><rect x="242.0" y="1637" width="0.4" height="15.0" fill="rgb(253,0,15)" rx="2" ry="2" />
<text  x="244.99" y="1647.5" ></text>
</g>
<g >
<title>__sprintf (150,797,273 samples, 0.17%)</title><rect x="681.8" y="1589" width="2.0" height="15.0" fill="rgb(214,89,40)" rx="2" ry="2" />
<text  x="684.79" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (93,688,156 samples, 0.11%)</title><rect x="100.2" y="85" width="1.2" height="15.0" fill="rgb(229,7,17)" rx="2" ry="2" />
<text  x="103.18" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="341" width="3.6" height="15.0" fill="rgb(245,59,13)" rx="2" ry="2" />
<text  x="109.59" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (11,138,968 samples, 0.01%)</title><rect x="97.2" y="165" width="0.1" height="15.0" fill="rgb(237,29,53)" rx="2" ry="2" />
<text  x="100.18" y="175.5" ></text>
</g>
<g >
<title>cpuidle_select (92,110,310 samples, 0.10%)</title><rect x="651.6" y="1525" width="1.2" height="15.0" fill="rgb(244,57,5)" rx="2" ry="2" />
<text  x="654.58" y="1535.5" ></text>
</g>
<g >
<title>br_dev_queue_push_xmit (22,445,627 samples, 0.03%)</title><rect x="41.7" y="1253" width="0.3" height="15.0" fill="rgb(242,155,26)" rx="2" ry="2" />
<text  x="44.75" y="1263.5" ></text>
</g>
<g >
<title>__schedule (334,345,716 samples, 0.37%)</title><rect x="589.6" y="1573" width="4.4" height="15.0" fill="rgb(252,127,2)" rx="2" ry="2" />
<text  x="592.61" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1605" width="3.6" height="15.0" fill="rgb(231,219,5)" rx="2" ry="2" />
<text  x="109.59" y="1615.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (36,016,546 samples, 0.04%)</title><rect x="32.8" y="1477" width="0.4" height="15.0" fill="rgb(252,1,8)" rx="2" ry="2" />
<text  x="35.76" y="1487.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (59,572,121 samples, 0.07%)</title><rect x="42.1" y="1349" width="0.8" height="15.0" fill="rgb(212,227,10)" rx="2" ry="2" />
<text  x="45.09" y="1359.5" ></text>
</g>
<g >
<title>ip_output (874,139,848 samples, 0.98%)</title><rect x="731.7" y="1221" width="11.6" height="15.0" fill="rgb(216,33,34)" rx="2" ry="2" />
<text  x="734.69" y="1231.5" ></text>
</g>
<g >
<title>writen (128,360,136 samples, 0.14%)</title><rect x="238.5" y="1557" width="1.7" height="15.0" fill="rgb(221,123,1)" rx="2" ry="2" />
<text  x="241.46" y="1567.5" ></text>
</g>
<g >
<title>__libc_start_main (7,719,600 samples, 0.01%)</title><rect x="653.9" y="1637" width="0.1" height="15.0" fill="rgb(214,100,36)" rx="2" ry="2" />
<text  x="656.90" y="1647.5" ></text>
</g>
<g >
<title>inotify_handle_event (129,419,475 samples, 0.15%)</title><rect x="145.0" y="1349" width="1.7" height="15.0" fill="rgb(209,85,37)" rx="2" ry="2" />
<text  x="147.98" y="1359.5" ></text>
</g>
<g >
<title>fib_table_lookup (51,360,897 samples, 0.06%)</title><rect x="1139.3" y="1093" width="0.7" height="15.0" fill="rgb(248,93,21)" rx="2" ry="2" />
<text  x="1142.33" y="1103.5" ></text>
</g>
<g >
<title>expand_string_assignment (9,130,931 samples, 0.01%)</title><rect x="10.8" y="1045" width="0.1" height="15.0" fill="rgb(214,156,35)" rx="2" ry="2" />
<text  x="13.80" y="1055.5" ></text>
</g>
<g >
<title>alloc_slab_page (385,061,610 samples, 0.43%)</title><rect x="22.8" y="1333" width="5.1" height="15.0" fill="rgb(210,180,18)" rx="2" ry="2" />
<text  x="25.85" y="1343.5" ></text>
</g>
<g >
<title>mongo::FTDCFileManager::writeSampleAndRotateIfNeeded (42,197,834 samples, 0.05%)</title><rect x="15.8" y="1573" width="0.6" height="15.0" fill="rgb(247,181,51)" rx="2" ry="2" />
<text  x="18.80" y="1583.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (693,023,237 samples, 0.78%)</title><rect x="732.3" y="1045" width="9.2" height="15.0" fill="rgb(231,228,20)" rx="2" ry="2" />
<text  x="735.32" y="1055.5" ></text>
</g>
<g >
<title>std::error_code::default_error_condition (279,481,343 samples, 0.31%)</title><rect x="133.7" y="1621" width="3.7" height="15.0" fill="rgb(209,220,32)" rx="2" ry="2" />
<text  x="136.66" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (424,288,411 samples, 0.48%)</title><rect x="250.6" y="1493" width="5.6" height="15.0" fill="rgb(234,106,49)" rx="2" ry="2" />
<text  x="253.62" y="1503.5" ></text>
</g>
<g >
<title>kmem_cache_free (39,390,273 samples, 0.04%)</title><rect x="186.5" y="1173" width="0.5" height="15.0" fill="rgb(206,38,15)" rx="2" ry="2" />
<text  x="189.48" y="1183.5" ></text>
</g>
<g >
<title>ksoftirqd/1 (17,732,891 samples, 0.02%)</title><rect x="40.5" y="1669" width="0.2" height="15.0" fill="rgb(235,163,29)" rx="2" ry="2" />
<text  x="43.51" y="1679.5" ></text>
</g>
<g >
<title>nf_hook_slow (8,252,788 samples, 0.01%)</title><rect x="42.9" y="1461" width="0.2" height="15.0" fill="rgb(209,28,51)" rx="2" ry="2" />
<text  x="45.94" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="997" width="3.6" height="15.0" fill="rgb(230,49,8)" rx="2" ry="2" />
<text  x="109.59" y="1007.5" ></text>
</g>
<g >
<title>__libc_start_main (25,996,559 samples, 0.03%)</title><rect x="137.8" y="1637" width="0.4" height="15.0" fill="rgb(213,162,14)" rx="2" ry="2" />
<text  x="140.81" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1381" width="1.4" height="15.0" fill="rgb(226,88,13)" rx="2" ry="2" />
<text  x="100.15" y="1391.5" ></text>
</g>
<g >
<title>__do_sys_newstat (227,232,085 samples, 0.25%)</title><rect x="88.1" y="1525" width="3.0" height="15.0" fill="rgb(229,127,22)" rx="2" ry="2" />
<text  x="91.07" y="1535.5" ></text>
</g>
<g >
<title>handle_response (9,031,514 samples, 0.01%)</title><rect x="43.3" y="1397" width="0.1" height="15.0" fill="rgb(248,65,35)" rx="2" ry="2" />
<text  x="46.26" y="1407.5" ></text>
</g>
<g >
<title>lj_lib_checknum (294,442,219 samples, 0.33%)</title><rect x="1017.3" y="1509" width="3.9" height="15.0" fill="rgb(250,71,20)" rx="2" ry="2" />
<text  x="1020.35" y="1519.5" ></text>
</g>
<g >
<title>ip_vs_out (19,804,338 samples, 0.02%)</title><rect x="739.6" y="949" width="0.2" height="15.0" fill="rgb(252,119,53)" rx="2" ry="2" />
<text  x="742.58" y="959.5" ></text>
</g>
<g >
<title>lj_vm_cpcall (78,738,297 samples, 0.09%)</title><rect x="690.9" y="1605" width="1.1" height="15.0" fill="rgb(239,118,47)" rx="2" ry="2" />
<text  x="693.91" y="1615.5" ></text>
</g>
<g >
<title>sock_poll (22,977,884 samples, 0.03%)</title><rect x="700.2" y="1445" width="0.3" height="15.0" fill="rgb(230,67,5)" rx="2" ry="2" />
<text  x="703.20" y="1455.5" ></text>
</g>
<g >
<title>nf_conntrack_in (93,034,429 samples, 0.10%)</title><rect x="559.4" y="1333" width="1.2" height="15.0" fill="rgb(212,101,24)" rx="2" ry="2" />
<text  x="562.39" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,575,428,896 samples, 1.77%)</title><rect x="59.6" y="1141" width="20.8" height="15.0" fill="rgb(238,63,39)" rx="2" ry="2" />
<text  x="62.57" y="1151.5" ></text>
</g>
<g >
<title>ip_rcv_core.isra.0 (26,614,856 samples, 0.03%)</title><rect x="1159.8" y="997" width="0.4" height="15.0" fill="rgb(225,158,48)" rx="2" ry="2" />
<text  x="1162.80" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1365" width="0.8" height="15.0" fill="rgb(242,174,36)" rx="2" ry="2" />
<text  x="101.56" y="1375.5" ></text>
</g>
<g >
<title>__kmalloc (27,365,282 samples, 0.03%)</title><rect x="521.3" y="1413" width="0.3" height="15.0" fill="rgb(231,95,38)" rx="2" ry="2" />
<text  x="524.29" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1493" width="3.0" height="15.0" fill="rgb(248,198,28)" rx="2" ry="2" />
<text  x="131.55" y="1503.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (714,186,065 samples, 0.80%)</title><rect x="1148.3" y="725" width="9.5" height="15.0" fill="rgb(207,219,28)" rx="2" ry="2" />
<text  x="1151.31" y="735.5" ></text>
</g>
<g >
<title>ip_finish_output (7,610,479 samples, 0.01%)</title><rect x="701.0" y="1317" width="0.1" height="15.0" fill="rgb(219,147,19)" rx="2" ry="2" />
<text  x="703.96" y="1327.5" ></text>
</g>
<g >
<title>lj_str_resize (7,639,518 samples, 0.01%)</title><rect x="1117.9" y="1493" width="0.1" height="15.0" fill="rgb(226,15,0)" rx="2" ry="2" />
<text  x="1120.87" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,821,443 samples, 0.01%)</title><rect x="110.0" y="197" width="0.2" height="15.0" fill="rgb(237,99,28)" rx="2" ry="2" />
<text  x="113.02" y="207.5" ></text>
</g>
<g >
<title>dev_queue_xmit (12,455,671 samples, 0.01%)</title><rect x="255.8" y="1237" width="0.2" height="15.0" fill="rgb(208,106,24)" rx="2" ry="2" />
<text  x="258.83" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="325" width="0.4" height="15.0" fill="rgb(210,127,18)" rx="2" ry="2" />
<text  x="56.54" y="335.5" ></text>
</g>
<g >
<title>xas_store (10,740,628 samples, 0.01%)</title><rect x="213.1" y="1237" width="0.1" height="15.0" fill="rgb(216,72,12)" rx="2" ry="2" />
<text  x="216.09" y="1247.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (30,240,499 samples, 0.03%)</title><rect x="591.0" y="1541" width="0.4" height="15.0" fill="rgb(244,159,22)" rx="2" ry="2" />
<text  x="594.02" y="1551.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/libnetwork/networkdb.(*NetworkDB).mRandomNodes (8,611,070 samples, 0.01%)</title><rect x="11.6" y="1573" width="0.1" height="15.0" fill="rgb(251,46,4)" rx="2" ry="2" />
<text  x="14.60" y="1583.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (201,731,135 samples, 0.23%)</title><rect x="639.1" y="1413" width="2.7" height="15.0" fill="rgb(214,136,42)" rx="2" ry="2" />
<text  x="642.09" y="1423.5" ></text>
</g>
<g >
<title>strncpy_from_user (17,974,293 samples, 0.02%)</title><rect x="90.4" y="1461" width="0.3" height="15.0" fill="rgb(240,83,32)" rx="2" ry="2" />
<text  x="93.44" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (12,621,638 samples, 0.01%)</title><rect x="240.3" y="1653" width="0.1" height="15.0" fill="rgb(242,110,10)" rx="2" ry="2" />
<text  x="243.27" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1413" width="0.3" height="15.0" fill="rgb(246,111,40)" rx="2" ry="2" />
<text  x="102.79" y="1423.5" ></text>
</g>
<g >
<title>__br_forward (8,147,498 samples, 0.01%)</title><rect x="41.4" y="1365" width="0.1" height="15.0" fill="rgb(254,109,44)" rx="2" ry="2" />
<text  x="44.38" y="1375.5" ></text>
</g>
<g >
<title>nf_nat_manip_pkt (13,297,800 samples, 0.01%)</title><rect x="1182.1" y="1109" width="0.2" height="15.0" fill="rgb(233,181,16)" rx="2" ry="2" />
<text  x="1185.10" y="1119.5" ></text>
</g>
<g >
<title>release_pages (11,397,576 samples, 0.01%)</title><rect x="16.9" y="1509" width="0.2" height="15.0" fill="rgb(205,136,19)" rx="2" ry="2" />
<text  x="19.95" y="1519.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (14,862,520 samples, 0.02%)</title><rect x="13.2" y="1525" width="0.2" height="15.0" fill="rgb(212,161,0)" rx="2" ry="2" />
<text  x="16.25" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1045" width="0.4" height="15.0" fill="rgb(242,128,21)" rx="2" ry="2" />
<text  x="56.54" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1461" width="0.8" height="15.0" fill="rgb(222,81,30)" rx="2" ry="2" />
<text  x="101.56" y="1471.5" ></text>
</g>
<g >
<title>veth_xmit (40,772,274 samples, 0.05%)</title><rect x="536.7" y="1061" width="0.6" height="15.0" fill="rgb(246,182,33)" rx="2" ry="2" />
<text  x="539.75" y="1071.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,598,686 samples, 0.01%)</title><rect x="242.2" y="1541" width="0.1" height="15.0" fill="rgb(242,221,3)" rx="2" ry="2" />
<text  x="245.19" y="1551.5" ></text>
</g>
<g >
<title>fib_table_lookup (12,628,990 samples, 0.01%)</title><rect x="730.8" y="1125" width="0.2" height="15.0" fill="rgb(214,210,43)" rx="2" ry="2" />
<text  x="733.79" y="1135.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (47,002,540 samples, 0.05%)</title><rect x="652.1" y="1493" width="0.6" height="15.0" fill="rgb(229,156,21)" rx="2" ry="2" />
<text  x="655.10" y="1503.5" ></text>
</g>
<g >
<title>fib_table_lookup (49,325,864 samples, 0.06%)</title><rect x="1138.3" y="1109" width="0.7" height="15.0" fill="rgb(245,64,35)" rx="2" ry="2" />
<text  x="1141.32" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,699,548 samples, 0.01%)</title><rect x="82.6" y="1237" width="0.1" height="15.0" fill="rgb(223,136,35)" rx="2" ry="2" />
<text  x="85.60" y="1247.5" ></text>
</g>
<g >
<title>mod_timer (27,073,247 samples, 0.03%)</title><rect x="551.3" y="1029" width="0.3" height="15.0" fill="rgb(211,182,0)" rx="2" ry="2" />
<text  x="554.29" y="1039.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (96,297,367 samples, 0.11%)</title><rect x="552.3" y="1061" width="1.3" height="15.0" fill="rgb(220,9,35)" rx="2" ry="2" />
<text  x="555.33" y="1071.5" ></text>
</g>
<g >
<title>nf_hook_slow (793,062,782 samples, 0.89%)</title><rect x="1147.4" y="805" width="10.5" height="15.0" fill="rgb(230,28,38)" rx="2" ry="2" />
<text  x="1150.43" y="815.5" ></text>
</g>
<g >
<title>get_cpu_device (7,782,357 samples, 0.01%)</title><rect x="583.3" y="1557" width="0.1" height="15.0" fill="rgb(217,182,14)" rx="2" ry="2" />
<text  x="586.35" y="1567.5" ></text>
</g>
<g >
<title>dbs_update_util_handler (7,997,793 samples, 0.01%)</title><rect x="135.2" y="1349" width="0.1" height="15.0" fill="rgb(235,204,41)" rx="2" ry="2" />
<text  x="138.24" y="1359.5" ></text>
</g>
<g >
<title>irq_work_queue (22,856,355 samples, 0.03%)</title><rect x="254.7" y="1413" width="0.3" height="15.0" fill="rgb(242,41,52)" rx="2" ry="2" />
<text  x="257.65" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1285" width="18.3" height="15.0" fill="rgb(220,187,6)" rx="2" ry="2" />
<text  x="113.16" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (49,023,832 samples, 0.05%)</title><rect x="109.4" y="149" width="0.6" height="15.0" fill="rgb(211,20,45)" rx="2" ry="2" />
<text  x="112.37" y="159.5" ></text>
</g>
<g >
<title>__alloc_skb (7,961,601 samples, 0.01%)</title><rect x="521.7" y="1397" width="0.1" height="15.0" fill="rgb(230,209,7)" rx="2" ry="2" />
<text  x="524.65" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="853" width="3.6" height="15.0" fill="rgb(215,187,44)" rx="2" ry="2" />
<text  x="109.59" y="863.5" ></text>
</g>
<g >
<title>handle_irq_event (115,717,905 samples, 0.13%)</title><rect x="639.4" y="1349" width="1.5" height="15.0" fill="rgb(241,12,6)" rx="2" ry="2" />
<text  x="642.35" y="1359.5" ></text>
</g>
<g >
<title>tcp_ack (9,679,678 samples, 0.01%)</title><rect x="42.5" y="1173" width="0.1" height="15.0" fill="rgb(238,52,46)" rx="2" ry="2" />
<text  x="45.50" y="1183.5" ></text>
</g>
<g >
<title>dev_queue_xmit (115,402,231 samples, 0.13%)</title><rect x="1177.6" y="1013" width="1.5" height="15.0" fill="rgb(254,31,36)" rx="2" ry="2" />
<text  x="1180.59" y="1023.5" ></text>
</g>
<g >
<title>__skb_ext_del (15,258,282 samples, 0.02%)</title><rect x="536.2" y="1125" width="0.2" height="15.0" fill="rgb(250,219,17)" rx="2" ry="2" />
<text  x="539.18" y="1135.5" ></text>
</g>
<g >
<title>clockevents_program_event (7,916,877 samples, 0.01%)</title><rect x="706.9" y="1381" width="0.1" height="15.0" fill="rgb(246,50,31)" rx="2" ry="2" />
<text  x="709.89" y="1391.5" ></text>
</g>
<g >
<title>__vfs_write (6,850,833,983 samples, 7.68%)</title><rect x="147.1" y="1381" width="90.6" height="15.0" fill="rgb(220,54,31)" rx="2" ry="2" />
<text  x="150.07" y="1391.5" >__vfs_write</text>
</g>
<g >
<title>ip_vs_out (12,660,264 samples, 0.01%)</title><rect x="43.3" y="1429" width="0.1" height="15.0" fill="rgb(240,59,48)" rx="2" ry="2" />
<text  x="46.25" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1445" width="1.4" height="15.0" fill="rgb(208,126,39)" rx="2" ry="2" />
<text  x="100.15" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1125" width="0.9" height="15.0" fill="rgb(234,53,35)" rx="2" ry="2" />
<text  x="134.54" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="997" width="0.9" height="15.0" fill="rgb(225,71,23)" rx="2" ry="2" />
<text  x="134.54" y="1007.5" ></text>
</g>
<g >
<title>do_IRQ (18,315,074 samples, 0.02%)</title><rect x="1064.3" y="1493" width="0.2" height="15.0" fill="rgb(242,8,42)" rx="2" ry="2" />
<text  x="1067.30" y="1503.5" ></text>
</g>
<g >
<title>ip_rcv (350,858,103 samples, 0.39%)</title><rect x="736.8" y="1029" width="4.7" height="15.0" fill="rgb(239,92,5)" rx="2" ry="2" />
<text  x="739.83" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="245" width="0.8" height="15.0" fill="rgb(244,82,45)" rx="2" ry="2" />
<text  x="101.56" y="255.5" ></text>
</g>
<g >
<title>irq_exit (10,070,344 samples, 0.01%)</title><rect x="126.6" y="69" width="0.1" height="15.0" fill="rgb(224,162,45)" rx="2" ry="2" />
<text  x="129.61" y="79.5" ></text>
</g>
<g >
<title>__schedule (84,269,999 samples, 0.09%)</title><rect x="134.7" y="1429" width="1.1" height="15.0" fill="rgb(242,225,2)" rx="2" ry="2" />
<text  x="137.72" y="1439.5" ></text>
</g>
<g >
<title>ksys_read (103,989,953 samples, 0.12%)</title><rect x="95.6" y="1541" width="1.4" height="15.0" fill="rgb(251,95,9)" rx="2" ry="2" />
<text  x="98.58" y="1551.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (9,501,702 samples, 0.01%)</title><rect x="547.7" y="1013" width="0.2" height="15.0" fill="rgb(238,193,3)" rx="2" ry="2" />
<text  x="550.74" y="1023.5" ></text>
</g>
<g >
<title>native_sched_clock (27,585,717 samples, 0.03%)</title><rect x="576.8" y="1525" width="0.4" height="15.0" fill="rgb(209,20,19)" rx="2" ry="2" />
<text  x="579.83" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="885" width="18.3" height="15.0" fill="rgb(235,34,38)" rx="2" ry="2" />
<text  x="113.16" y="895.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (23,582,948 samples, 0.03%)</title><rect x="652.3" y="1461" width="0.4" height="15.0" fill="rgb(213,154,8)" rx="2" ry="2" />
<text  x="655.34" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (437,354,885 samples, 0.49%)</title><rect x="61.8" y="485" width="5.8" height="15.0" fill="rgb(244,216,22)" rx="2" ry="2" />
<text  x="64.82" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="933" width="6.5" height="15.0" fill="rgb(209,164,12)" rx="2" ry="2" />
<text  x="103.13" y="943.5" ></text>
</g>
<g >
<title>gettimeofday (14,319,354 samples, 0.02%)</title><rect x="1188.0" y="1541" width="0.2" height="15.0" fill="rgb(242,10,12)" rx="2" ry="2" />
<text  x="1191.01" y="1551.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (14,755,839 samples, 0.02%)</title><rect x="590.5" y="1525" width="0.2" height="15.0" fill="rgb(237,77,2)" rx="2" ry="2" />
<text  x="593.47" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,880,873 samples, 0.55%)</title><rect x="100.1" y="1557" width="6.5" height="15.0" fill="rgb(208,135,10)" rx="2" ry="2" />
<text  x="103.13" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1077" width="0.8" height="15.0" fill="rgb(216,42,48)" rx="2" ry="2" />
<text  x="101.56" y="1087.5" ></text>
</g>
<g >
<title>diskstats_show (11,036,390 samples, 0.01%)</title><rect x="14.5" y="1477" width="0.2" height="15.0" fill="rgb(217,176,3)" rx="2" ry="2" />
<text  x="17.55" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (182,681,382 samples, 0.20%)</title><rect x="748.3" y="1509" width="2.4" height="15.0" fill="rgb(229,39,32)" rx="2" ry="2" />
<text  x="751.27" y="1519.5" ></text>
</g>
<g >
<title>node::Environment::RunTimers (11,734,595 samples, 0.01%)</title><rect x="138.0" y="1541" width="0.1" height="15.0" fill="rgb(205,168,21)" rx="2" ry="2" />
<text  x="140.99" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="501" width="3.6" height="15.0" fill="rgb(210,183,13)" rx="2" ry="2" />
<text  x="109.59" y="511.5" ></text>
</g>
<g >
<title>Nan::imp::FunctionCallbackWrapper (23,939,793 samples, 0.03%)</title><rect x="51.0" y="1621" width="0.3" height="15.0" fill="rgb(212,16,7)" rx="2" ry="2" />
<text  x="53.99" y="1631.5" ></text>
</g>
<g >
<title>lj_alloc_free (8,521,744 samples, 0.01%)</title><rect x="684.9" y="1525" width="0.1" height="15.0" fill="rgb(219,121,41)" rx="2" ry="2" />
<text  x="687.93" y="1535.5" ></text>
</g>
<g >
<title>run_rebalance_domains (62,347,198 samples, 0.07%)</title><rect x="640.9" y="1397" width="0.8" height="15.0" fill="rgb(241,95,36)" rx="2" ry="2" />
<text  x="643.91" y="1407.5" ></text>
</g>
<g >
<title>__blk_queue_split (23,845,329 samples, 0.03%)</title><rect x="34.3" y="1429" width="0.3" height="15.0" fill="rgb(247,5,7)" rx="2" ry="2" />
<text  x="37.33" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="901" width="0.9" height="15.0" fill="rgb(236,207,9)" rx="2" ry="2" />
<text  x="134.54" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1573" width="0.3" height="15.0" fill="rgb(247,25,37)" rx="2" ry="2" />
<text  x="102.79" y="1583.5" ></text>
</g>
<g >
<title>xas_set_mark (8,189,187 samples, 0.01%)</title><rect x="40.1" y="1525" width="0.2" height="15.0" fill="rgb(250,79,23)" rx="2" ry="2" />
<text  x="43.15" y="1535.5" ></text>
</g>
<g >
<title>gc_mark (11,531,515 samples, 0.01%)</title><rect x="817.9" y="1461" width="0.2" height="15.0" fill="rgb(234,151,36)" rx="2" ry="2" />
<text  x="820.94" y="1471.5" ></text>
</g>
<g >
<title>lj_alloc_malloc (1,058,237,587 samples, 1.19%)</title><rect x="966.8" y="1477" width="14.0" height="15.0" fill="rgb(216,171,43)" rx="2" ry="2" />
<text  x="969.82" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (89,898,010 samples, 0.10%)</title><rect x="75.7" y="933" width="1.2" height="15.0" fill="rgb(247,195,43)" rx="2" ry="2" />
<text  x="78.73" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1157" width="3.6" height="15.0" fill="rgb(217,0,34)" rx="2" ry="2" />
<text  x="109.59" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1173" width="18.3" height="15.0" fill="rgb(222,122,39)" rx="2" ry="2" />
<text  x="113.16" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="677" width="3.0" height="15.0" fill="rgb(244,56,13)" rx="2" ry="2" />
<text  x="131.55" y="687.5" ></text>
</g>
<g >
<title>veth_xmit (77,890,379 samples, 0.09%)</title><rect x="1177.8" y="965" width="1.0" height="15.0" fill="rgb(235,220,21)" rx="2" ry="2" />
<text  x="1180.81" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1525" width="0.3" height="15.0" fill="rgb(246,83,15)" rx="2" ry="2" />
<text  x="102.79" y="1535.5" ></text>
</g>
<g >
<title>execute_command (12,129,602 samples, 0.01%)</title><rect x="10.8" y="1349" width="0.1" height="15.0" fill="rgb(234,159,7)" rx="2" ry="2" />
<text  x="13.79" y="1359.5" ></text>
</g>
<g >
<title>activate_task (7,756,371 samples, 0.01%)</title><rect x="254.0" y="1253" width="0.1" height="15.0" fill="rgb(244,225,50)" rx="2" ry="2" />
<text  x="256.97" y="1263.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (15,046,164 samples, 0.02%)</title><rect x="211.4" y="1173" width="0.2" height="15.0" fill="rgb(248,157,19)" rx="2" ry="2" />
<text  x="214.44" y="1183.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (186,090,040 samples, 0.21%)</title><rect x="124.0" y="85" width="2.4" height="15.0" fill="rgb(243,51,54)" rx="2" ry="2" />
<text  x="126.97" y="95.5" ></text>
</g>
<g >
<title>hack_digit (29,502,006 samples, 0.03%)</title><rect x="683.3" y="1525" width="0.3" height="15.0" fill="rgb(208,183,20)" rx="2" ry="2" />
<text  x="686.26" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1077" width="0.3" height="15.0" fill="rgb(252,88,9)" rx="2" ry="2" />
<text  x="102.79" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,147,125,061 samples, 1.29%)</title><rect x="60.5" y="885" width="15.2" height="15.0" fill="rgb(207,43,27)" rx="2" ry="2" />
<text  x="63.53" y="895.5" ></text>
</g>
<g >
<title>net_rx_action (15,723,584 samples, 0.02%)</title><rect x="985.9" y="1429" width="0.2" height="15.0" fill="rgb(213,18,17)" rx="2" ry="2" />
<text  x="988.87" y="1439.5" ></text>
</g>
<g >
<title>ip_vs_nat_xmit (487,583,639 samples, 0.55%)</title><rect x="1162.1" y="901" width="6.4" height="15.0" fill="rgb(249,77,52)" rx="2" ry="2" />
<text  x="1165.09" y="911.5" ></text>
</g>
<g >
<title>ip_output (74,932,565 samples, 0.08%)</title><rect x="543.6" y="1013" width="0.9" height="15.0" fill="rgb(245,140,35)" rx="2" ry="2" />
<text  x="546.55" y="1023.5" ></text>
</g>
<g >
<title>ret_from_intr (23,644,359 samples, 0.03%)</title><rect x="1028.0" y="1509" width="0.3" height="15.0" fill="rgb(253,177,42)" rx="2" ry="2" />
<text  x="1031.01" y="1519.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (14,711,041 samples, 0.02%)</title><rect x="42.3" y="1093" width="0.2" height="15.0" fill="rgb(239,225,32)" rx="2" ry="2" />
<text  x="45.28" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1445" width="0.8" height="15.0" fill="rgb(210,144,1)" rx="2" ry="2" />
<text  x="101.56" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="293" width="6.5" height="15.0" fill="rgb(212,97,20)" rx="2" ry="2" />
<text  x="103.13" y="303.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1,068,040,142 samples, 1.20%)</title><rect x="729.2" y="1253" width="14.2" height="15.0" fill="rgb(247,89,4)" rx="2" ry="2" />
<text  x="732.23" y="1263.5" ></text>
</g>
<g >
<title>hrtimer_reprogram (13,206,106 samples, 0.01%)</title><rect x="706.4" y="1429" width="0.2" height="15.0" fill="rgb(243,134,41)" rx="2" ry="2" />
<text  x="709.44" y="1439.5" ></text>
</g>
<g >
<title>br_forward (26,167,109 samples, 0.03%)</title><rect x="41.7" y="1413" width="0.4" height="15.0" fill="rgb(242,154,33)" rx="2" ry="2" />
<text  x="44.71" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,549,793 samples, 0.12%)</title><rect x="97.2" y="613" width="1.4" height="15.0" fill="rgb(246,81,42)" rx="2" ry="2" />
<text  x="100.15" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (241,559,243 samples, 0.27%)</title><rect x="87.9" y="1573" width="3.2" height="15.0" fill="rgb(213,189,24)" rx="2" ry="2" />
<text  x="90.92" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="437" width="0.8" height="15.0" fill="rgb(242,187,46)" rx="2" ry="2" />
<text  x="101.56" y="447.5" ></text>
</g>
<g >
<title>rb_next (21,471,908 samples, 0.02%)</title><rect x="163.4" y="1189" width="0.3" height="15.0" fill="rgb(222,131,17)" rx="2" ry="2" />
<text  x="166.39" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="421" width="0.4" height="15.0" fill="rgb(231,113,33)" rx="2" ry="2" />
<text  x="56.88" y="431.5" ></text>
</g>
<g >
<title>[sshd] (28,499,758 samples, 0.03%)</title><rect x="242.0" y="1589" width="0.4" height="15.0" fill="rgb(214,139,16)" rx="2" ry="2" />
<text  x="244.99" y="1599.5" ></text>
</g>
<g >
<title>__check_object_size (9,319,481 samples, 0.01%)</title><rect x="1127.7" y="1317" width="0.1" height="15.0" fill="rgb(248,165,1)" rx="2" ry="2" />
<text  x="1130.73" y="1327.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (18,535,682 samples, 0.02%)</title><rect x="594.3" y="1589" width="0.2" height="15.0" fill="rgb(250,49,30)" rx="2" ry="2" />
<text  x="597.30" y="1599.5" ></text>
</g>
<g >
<title>wake_up_process (8,454,139 samples, 0.01%)</title><rect x="642.3" y="1301" width="0.2" height="15.0" fill="rgb(236,56,34)" rx="2" ry="2" />
<text  x="645.34" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,148,084,561 samples, 1.29%)</title><rect x="60.5" y="901" width="15.2" height="15.0" fill="rgb(242,221,18)" rx="2" ry="2" />
<text  x="63.52" y="911.5" ></text>
</g>
<g >
<title>clear_page_rep (323,488,554 samples, 0.36%)</title><rect x="23.1" y="1269" width="4.2" height="15.0" fill="rgb(236,86,16)" rx="2" ry="2" />
<text  x="26.05" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12,086,191 samples, 0.01%)</title><rect x="700.9" y="1525" width="0.2" height="15.0" fill="rgb(215,66,46)" rx="2" ry="2" />
<text  x="703.93" y="1535.5" ></text>
</g>
<g >
<title>fib_table_lookup (33,455,457 samples, 0.04%)</title><rect x="570.6" y="1317" width="0.5" height="15.0" fill="rgb(215,62,47)" rx="2" ry="2" />
<text  x="573.65" y="1327.5" ></text>
</g>
<g >
<title>vxlan_xmit_one (187,756,138 samples, 0.21%)</title><rect x="733.8" y="693" width="2.4" height="15.0" fill="rgb(213,21,33)" rx="2" ry="2" />
<text  x="736.75" y="703.5" ></text>
</g>
<g >
<title>br_nf_post_routing (238,781,149 samples, 0.27%)</title><rect x="733.2" y="805" width="3.2" height="15.0" fill="rgb(211,34,7)" rx="2" ry="2" />
<text  x="736.23" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1429" width="0.4" height="15.0" fill="rgb(223,14,47)" rx="2" ry="2" />
<text  x="56.54" y="1439.5" ></text>
</g>
<g >
<title>br_nf_hook_thresh (1,278,668,988 samples, 1.43%)</title><rect x="541.3" y="1349" width="16.9" height="15.0" fill="rgb(254,65,45)" rx="2" ry="2" />
<text  x="544.30" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="949" width="0.9" height="15.0" fill="rgb(248,174,38)" rx="2" ry="2" />
<text  x="134.54" y="959.5" ></text>
</g>
<g >
<title>hdr_record_value (24,018,594 samples, 0.03%)</title><rect x="723.0" y="1525" width="0.3" height="15.0" fill="rgb(242,212,29)" rx="2" ry="2" />
<text  x="726.03" y="1535.5" ></text>
</g>
<g >
<title>__skb_ext_put (18,526,971 samples, 0.02%)</title><rect x="726.8" y="1285" width="0.2" height="15.0" fill="rgb(246,187,0)" rx="2" ry="2" />
<text  x="729.76" y="1295.5" ></text>
</g>
<g >
<title>nf_hook_slow (33,450,161 samples, 0.04%)</title><rect x="543.1" y="997" width="0.4" height="15.0" fill="rgb(237,139,52)" rx="2" ry="2" />
<text  x="546.09" y="1007.5" ></text>
</g>
<g >
<title>dev_queue_xmit (56,254,793 samples, 0.06%)</title><rect x="735.0" y="565" width="0.8" height="15.0" fill="rgb(208,196,21)" rx="2" ry="2" />
<text  x="738.01" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="197" width="0.4" height="15.0" fill="rgb(243,131,53)" rx="2" ry="2" />
<text  x="56.54" y="207.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (2,404,999,623 samples, 2.70%)</title><rect x="1143.9" y="1029" width="31.8" height="15.0" fill="rgb(248,211,9)" rx="2" ry="2" />
<text  x="1146.92" y="1039.5" >__..</text>
</g>
<g >
<title>tick_broadcast_set_event (45,771,615 samples, 0.05%)</title><rect x="643.3" y="1349" width="0.6" height="15.0" fill="rgb(210,53,53)" rx="2" ry="2" />
<text  x="646.27" y="1359.5" ></text>
</g>
<g >
<title>tcp_in_window (14,094,537 samples, 0.02%)</title><rect x="1175.2" y="933" width="0.2" height="15.0" fill="rgb(231,97,3)" rx="2" ry="2" />
<text  x="1178.22" y="943.5" ></text>
</g>
<g >
<title>run_ksoftirqd (235,066,459 samples, 0.26%)</title><rect x="41.0" y="1605" width="3.1" height="15.0" fill="rgb(244,196,45)" rx="2" ry="2" />
<text  x="43.96" y="1615.5" ></text>
</g>
<g >
<title>ip_vs_out (10,346,649 samples, 0.01%)</title><rect x="569.8" y="1333" width="0.2" height="15.0" fill="rgb(249,94,35)" rx="2" ry="2" />
<text  x="572.84" y="1343.5" ></text>
</g>
<g >
<title>nf_nat_inet_fn (9,872,606 samples, 0.01%)</title><rect x="738.4" y="837" width="0.1" height="15.0" fill="rgb(225,163,37)" rx="2" ry="2" />
<text  x="741.38" y="847.5" ></text>
</g>
<g >
<title>iptable_mangle_hook (71,169,819 samples, 0.08%)</title><rect x="571.9" y="1381" width="0.9" height="15.0" fill="rgb(207,3,16)" rx="2" ry="2" />
<text  x="574.89" y="1391.5" ></text>
</g>
<g >
<title>ext4_do_update_inode (11,087,438 samples, 0.01%)</title><rect x="239.6" y="1285" width="0.1" height="15.0" fill="rgb(232,34,27)" rx="2" ry="2" />
<text  x="242.59" y="1295.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (12,569,999 samples, 0.01%)</title><rect x="728.6" y="1269" width="0.2" height="15.0" fill="rgb(252,183,1)" rx="2" ry="2" />
<text  x="731.63" y="1279.5" ></text>
</g>
<g >
<title>local.runtime.scanobject (49,903,803 samples, 0.06%)</title><rect x="13.7" y="1605" width="0.6" height="15.0" fill="rgb(212,156,3)" rx="2" ry="2" />
<text  x="16.67" y="1615.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (13,772,782 samples, 0.02%)</title><rect x="921.6" y="1461" width="0.2" height="15.0" fill="rgb(205,174,29)" rx="2" ry="2" />
<text  x="924.64" y="1471.5" ></text>
</g>
<g >
<title>enqueue_entity (53,210,238 samples, 0.06%)</title><rect x="247.9" y="1381" width="0.7" height="15.0" fill="rgb(252,144,22)" rx="2" ry="2" />
<text  x="250.88" y="1391.5" ></text>
</g>
<g >
<title>___slab_alloc (48,924,588 samples, 0.05%)</title><rect x="155.7" y="1205" width="0.6" height="15.0" fill="rgb(208,100,38)" rx="2" ry="2" />
<text  x="158.69" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1093" width="0.4" height="15.0" fill="rgb(242,223,13)" rx="2" ry="2" />
<text  x="56.88" y="1103.5" ></text>
</g>
<g >
<title>mark_page_accessed (14,437,896 samples, 0.02%)</title><rect x="176.1" y="1061" width="0.2" height="15.0" fill="rgb(224,172,29)" rx="2" ry="2" />
<text  x="179.11" y="1071.5" ></text>
</g>
<g >
<title>blk_attempt_plug_merge (80,315,802 samples, 0.09%)</title><rect x="34.8" y="1429" width="1.1" height="15.0" fill="rgb(215,52,31)" rx="2" ry="2" />
<text  x="37.82" y="1439.5" ></text>
</g>
<g >
<title>ip_finish_output (41,786,305 samples, 0.05%)</title><rect x="737.7" y="885" width="0.6" height="15.0" fill="rgb(244,105,49)" rx="2" ry="2" />
<text  x="740.73" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1157" width="0.8" height="15.0" fill="rgb(228,102,46)" rx="2" ry="2" />
<text  x="101.56" y="1167.5" ></text>
</g>
<g >
<title>__x64_sys_futex (62,826,519 samples, 0.07%)</title><rect x="136.4" y="1509" width="0.8" height="15.0" fill="rgb(214,183,14)" rx="2" ry="2" />
<text  x="139.41" y="1519.5" ></text>
</g>
<g >
<title>common_file_perm (8,128,473 samples, 0.01%)</title><rect x="1186.7" y="1397" width="0.1" height="15.0" fill="rgb(232,77,2)" rx="2" ry="2" />
<text  x="1189.68" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1509" width="3.0" height="15.0" fill="rgb(237,142,35)" rx="2" ry="2" />
<text  x="131.55" y="1519.5" ></text>
</g>
<g >
<title>ip_rcv_finish (12,965,109 samples, 0.01%)</title><rect x="251.6" y="1189" width="0.2" height="15.0" fill="rgb(242,134,54)" rx="2" ry="2" />
<text  x="254.63" y="1199.5" ></text>
</g>
<g >
<title>ext4_get_group_no_and_offset (23,011,178 samples, 0.03%)</title><rect x="178.8" y="1157" width="0.3" height="15.0" fill="rgb(213,152,34)" rx="2" ry="2" />
<text  x="181.81" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="517" width="0.3" height="15.0" fill="rgb(213,114,47)" rx="2" ry="2" />
<text  x="102.79" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1301" width="0.4" height="15.0" fill="rgb(233,183,27)" rx="2" ry="2" />
<text  x="56.54" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="565" width="0.8" height="15.0" fill="rgb(234,51,24)" rx="2" ry="2" />
<text  x="101.56" y="575.5" ></text>
</g>
<g >
<title>__inet_dev_addr_type.isra.0 (29,462,954 samples, 0.03%)</title><rect x="1166.3" y="821" width="0.4" height="15.0" fill="rgb(236,102,15)" rx="2" ry="2" />
<text  x="1169.26" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="309" width="0.9" height="15.0" fill="rgb(242,204,2)" rx="2" ry="2" />
<text  x="134.54" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1109" width="3.0" height="15.0" fill="rgb(247,194,12)" rx="2" ry="2" />
<text  x="131.55" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="437" width="0.4" height="15.0" fill="rgb(233,86,3)" rx="2" ry="2" />
<text  x="56.54" y="447.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (64,463,763 samples, 0.07%)</title><rect x="217.0" y="1237" width="0.8" height="15.0" fill="rgb(229,118,54)" rx="2" ry="2" />
<text  x="220.00" y="1247.5" ></text>
</g>
<g >
<title>cpu_startup_entry (26,688,263,589 samples, 29.93%)</title><rect x="243.1" y="1621" width="353.2" height="15.0" fill="rgb(208,24,7)" rx="2" ry="2" />
<text  x="246.15" y="1631.5" >cpu_startup_entry</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,318,551 samples, 0.04%)</title><rect x="53.9" y="853" width="0.4" height="15.0" fill="rgb(210,156,35)" rx="2" ry="2" />
<text  x="56.88" y="863.5" ></text>
</g>
<g >
<title>ip_vs_in (10,576,104 samples, 0.01%)</title><rect x="43.5" y="1429" width="0.1" height="15.0" fill="rgb(225,222,43)" rx="2" ry="2" />
<text  x="46.45" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1045" width="3.6" height="15.0" fill="rgb(239,63,9)" rx="2" ry="2" />
<text  x="109.59" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="853" width="0.8" height="15.0" fill="rgb(253,166,54)" rx="2" ry="2" />
<text  x="101.56" y="863.5" ></text>
</g>
<g >
<title>br_forward (227,256,509 samples, 0.25%)</title><rect x="542.0" y="1317" width="3.0" height="15.0" fill="rgb(223,112,25)" rx="2" ry="2" />
<text  x="544.99" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (841,783,273 samples, 0.94%)</title><rect x="61.2" y="693" width="11.1" height="15.0" fill="rgb(210,34,18)" rx="2" ry="2" />
<text  x="64.15" y="703.5" ></text>
</g>
<g >
<title>lj_mem_realloc (69,003,680 samples, 0.08%)</title><rect x="921.5" y="1493" width="0.9" height="15.0" fill="rgb(249,201,17)" rx="2" ry="2" />
<text  x="924.50" y="1503.5" ></text>
</g>
<g >
<title>proc_reg_read (27,200,197 samples, 0.03%)</title><rect x="14.5" y="1509" width="0.4" height="15.0" fill="rgb(240,91,28)" rx="2" ry="2" />
<text  x="17.53" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1141" width="3.6" height="15.0" fill="rgb(222,183,37)" rx="2" ry="2" />
<text  x="109.59" y="1151.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (18,191,985 samples, 0.02%)</title><rect x="1128.4" y="1317" width="0.3" height="15.0" fill="rgb(241,18,13)" rx="2" ry="2" />
<text  x="1131.41" y="1327.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (377,679,928 samples, 0.42%)</title><rect x="22.9" y="1301" width="5.0" height="15.0" fill="rgb(209,102,27)" rx="2" ry="2" />
<text  x="25.88" y="1311.5" ></text>
</g>
<g >
<title>psi_task_change (20,019,550 samples, 0.02%)</title><rect x="94.6" y="1413" width="0.3" height="15.0" fill="rgb(217,203,1)" rx="2" ry="2" />
<text  x="97.64" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1029" width="0.9" height="15.0" fill="rgb(210,213,17)" rx="2" ry="2" />
<text  x="134.54" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="501" width="0.3" height="15.0" fill="rgb(222,147,3)" rx="2" ry="2" />
<text  x="102.79" y="511.5" ></text>
</g>
<g >
<title>x86_pmu_disable (8,907,078 samples, 0.01%)</title><rect x="707.9" y="1365" width="0.1" height="15.0" fill="rgb(212,162,19)" rx="2" ry="2" />
<text  x="710.87" y="1375.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_manip_pkt (9,515,130 samples, 0.01%)</title><rect x="557.7" y="1061" width="0.2" height="15.0" fill="rgb(220,118,46)" rx="2" ry="2" />
<text  x="560.74" y="1071.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/libnetwork/networkdb.(*NetworkDB).bulkSyncNode (9,409,640 samples, 0.01%)</title><rect x="12.1" y="1541" width="0.2" height="15.0" fill="rgb(225,55,0)" rx="2" ry="2" />
<text  x="15.13" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="741" width="0.3" height="15.0" fill="rgb(210,192,26)" rx="2" ry="2" />
<text  x="102.79" y="751.5" ></text>
</g>
<g >
<title>cpuidle_reflect (16,607,465 samples, 0.02%)</title><rect x="243.7" y="1605" width="0.2" height="15.0" fill="rgb(235,208,36)" rx="2" ry="2" />
<text  x="246.72" y="1615.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (14,243,082 samples, 0.02%)</title><rect x="559.6" y="1317" width="0.2" height="15.0" fill="rgb(254,122,29)" rx="2" ry="2" />
<text  x="562.57" y="1327.5" ></text>
</g>
<g >
<title>veth_xmit (16,221,822 samples, 0.02%)</title><rect x="550.2" y="725" width="0.3" height="15.0" fill="rgb(236,188,46)" rx="2" ry="2" />
<text  x="553.24" y="735.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (45,652,296 samples, 0.05%)</title><rect x="729.9" y="1189" width="0.6" height="15.0" fill="rgb(216,191,16)" rx="2" ry="2" />
<text  x="732.93" y="1199.5" ></text>
</g>
<g >
<title>do_syscall_64 (237,887,543 samples, 0.27%)</title><rect x="88.0" y="1557" width="3.1" height="15.0" fill="rgb(244,226,0)" rx="2" ry="2" />
<text  x="90.97" y="1567.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (9,823,371 samples, 0.01%)</title><rect x="1164.0" y="773" width="0.1" height="15.0" fill="rgb(220,110,24)" rx="2" ry="2" />
<text  x="1166.99" y="783.5" ></text>
</g>
<g >
<title>read_tsc (11,247,931 samples, 0.01%)</title><rect x="505.9" y="1461" width="0.1" height="15.0" fill="rgb(248,144,47)" rx="2" ry="2" />
<text  x="508.87" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="645" width="0.4" height="15.0" fill="rgb(219,123,40)" rx="2" ry="2" />
<text  x="56.54" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (364,366,205 samples, 0.41%)</title><rect x="101.6" y="149" width="4.8" height="15.0" fill="rgb(215,102,35)" rx="2" ry="2" />
<text  x="104.58" y="159.5" ></text>
</g>
<g >
<title>__block_commit_write.isra.0 (353,288,613 samples, 0.40%)</title><rect x="218.9" y="1269" width="4.6" height="15.0" fill="rgb(252,207,10)" rx="2" ry="2" />
<text  x="221.85" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="645" width="0.3" height="15.0" fill="rgb(229,28,12)" rx="2" ry="2" />
<text  x="102.79" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="789" width="0.9" height="15.0" fill="rgb(222,207,41)" rx="2" ry="2" />
<text  x="134.54" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1413" width="18.3" height="15.0" fill="rgb(220,87,18)" rx="2" ry="2" />
<text  x="113.16" y="1423.5" ></text>
</g>
<g >
<title>vxlan_xmit_one (158,852,301 samples, 0.18%)</title><rect x="542.6" y="1077" width="2.1" height="15.0" fill="rgb(244,19,49)" rx="2" ry="2" />
<text  x="545.64" y="1087.5" ></text>
</g>
<g >
<title>add_transaction_credits (32,105,353 samples, 0.04%)</title><rect x="153.1" y="1237" width="0.4" height="15.0" fill="rgb(248,150,8)" rx="2" ry="2" />
<text  x="156.09" y="1247.5" ></text>
</g>
<g >
<title>__br_forward (29,933,687 samples, 0.03%)</title><rect x="550.1" y="821" width="0.4" height="15.0" fill="rgb(225,12,45)" rx="2" ry="2" />
<text  x="553.15" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1125" width="0.4" height="15.0" fill="rgb(236,148,30)" rx="2" ry="2" />
<text  x="56.54" y="1135.5" ></text>
</g>
<g >
<title>_raw_spin_lock (7,828,456 samples, 0.01%)</title><rect x="735.1" y="533" width="0.1" height="15.0" fill="rgb(250,67,43)" rx="2" ry="2" />
<text  x="738.14" y="543.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (2,680,607,427 samples, 3.01%)</title><rect x="158.0" y="1285" width="35.5" height="15.0" fill="rgb(238,205,39)" rx="2" ry="2" />
<text  x="161.01" y="1295.5" >ext..</text>
</g>
<g >
<title>__pollwait (9,803,987 samples, 0.01%)</title><rect x="140.0" y="1477" width="0.1" height="15.0" fill="rgb(207,67,39)" rx="2" ry="2" />
<text  x="142.97" y="1487.5" ></text>
</g>
<g >
<title>br_dev_xmit (43,858,577 samples, 0.05%)</title><rect x="550.0" y="853" width="0.6" height="15.0" fill="rgb(207,105,14)" rx="2" ry="2" />
<text  x="553.00" y="863.5" ></text>
</g>
<g >
<title>__br_forward (26,167,109 samples, 0.03%)</title><rect x="41.7" y="1397" width="0.4" height="15.0" fill="rgb(242,120,26)" rx="2" ry="2" />
<text  x="44.71" y="1407.5" ></text>
</g>
<g >
<title>record__pushfn (7,278,021,088 samples, 8.16%)</title><rect x="142.1" y="1557" width="96.3" height="15.0" fill="rgb(209,220,26)" rx="2" ry="2" />
<text  x="145.07" y="1567.5" >record__pus..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="917" width="3.0" height="15.0" fill="rgb(219,63,0)" rx="2" ry="2" />
<text  x="131.55" y="927.5" ></text>
</g>
<g >
<title>__schedule (10,623,465 samples, 0.01%)</title><rect x="46.7" y="1589" width="0.1" height="15.0" fill="rgb(250,149,15)" rx="2" ry="2" />
<text  x="49.68" y="1599.5" ></text>
</g>
<g >
<title>dev_queue_xmit (16,345,735 samples, 0.02%)</title><rect x="563.9" y="1269" width="0.2" height="15.0" fill="rgb(236,174,50)" rx="2" ry="2" />
<text  x="566.87" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="581" width="3.0" height="15.0" fill="rgb(236,22,25)" rx="2" ry="2" />
<text  x="131.55" y="591.5" ></text>
</g>
<g >
<title>fsnotify_destroy_event.part.0 (8,655,585 samples, 0.01%)</title><rect x="96.4" y="1461" width="0.1" height="15.0" fill="rgb(245,175,16)" rx="2" ry="2" />
<text  x="99.41" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1589" width="0.8" height="15.0" fill="rgb(223,76,48)" rx="2" ry="2" />
<text  x="101.56" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,549,793 samples, 0.12%)</title><rect x="97.2" y="421" width="1.4" height="15.0" fill="rgb(230,129,47)" rx="2" ry="2" />
<text  x="100.15" y="431.5" ></text>
</g>
<g >
<title>irq_entries_start (45,735,660 samples, 0.05%)</title><rect x="578.0" y="1557" width="0.6" height="15.0" fill="rgb(239,39,18)" rx="2" ry="2" />
<text  x="580.99" y="1567.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (10,179,029 samples, 0.01%)</title><rect x="134.8" y="1413" width="0.2" height="15.0" fill="rgb(253,127,38)" rx="2" ry="2" />
<text  x="137.83" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1333" width="0.4" height="15.0" fill="rgb(220,168,48)" rx="2" ry="2" />
<text  x="56.88" y="1343.5" ></text>
</g>
<g >
<title>ipt_do_table (17,032,894 samples, 0.02%)</title><rect x="1170.3" y="933" width="0.2" height="15.0" fill="rgb(206,189,28)" rx="2" ry="2" />
<text  x="1173.31" y="943.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (14,525,297 samples, 0.02%)</title><rect x="66.0" y="325" width="0.2" height="15.0" fill="rgb(253,170,32)" rx="2" ry="2" />
<text  x="68.97" y="335.5" ></text>
</g>
<g >
<title>prep_new_page (16,480,675 samples, 0.02%)</title><rect x="202.0" y="1189" width="0.2" height="15.0" fill="rgb(219,5,24)" rx="2" ry="2" />
<text  x="204.97" y="1199.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,710,774 samples, 0.01%)</title><rect x="138.4" y="1653" width="0.1" height="15.0" fill="rgb(238,108,46)" rx="2" ry="2" />
<text  x="141.40" y="1663.5" ></text>
</g>
<g >
<title>update_blocked_averages (12,851,424 samples, 0.01%)</title><rect x="507.6" y="1413" width="0.2" height="15.0" fill="rgb(225,206,6)" rx="2" ry="2" />
<text  x="510.61" y="1423.5" ></text>
</g>
<g >
<title>br_netif_receive_skb (60,714,789 samples, 0.07%)</title><rect x="42.1" y="1397" width="0.8" height="15.0" fill="rgb(227,11,54)" rx="2" ry="2" />
<text  x="45.08" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="997" width="3.0" height="15.0" fill="rgb(219,14,35)" rx="2" ry="2" />
<text  x="131.55" y="1007.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (33,073,794 samples, 0.04%)</title><rect x="551.2" y="1061" width="0.5" height="15.0" fill="rgb(246,171,16)" rx="2" ry="2" />
<text  x="554.22" y="1071.5" ></text>
</g>
<g >
<title>__slab_alloc (41,488,162 samples, 0.05%)</title><rect x="30.9" y="1413" width="0.5" height="15.0" fill="rgb(238,3,54)" rx="2" ry="2" />
<text  x="33.88" y="1423.5" ></text>
</g>
<g >
<title>vxlan_find_mac (8,919,602 samples, 0.01%)</title><rect x="1149.3" y="677" width="0.1" height="15.0" fill="rgb(246,165,28)" rx="2" ry="2" />
<text  x="1152.27" y="687.5" ></text>
</g>
<g >
<title>nf_hook_slow (234,371,613 samples, 0.26%)</title><rect x="564.8" y="1365" width="3.1" height="15.0" fill="rgb(218,168,32)" rx="2" ry="2" />
<text  x="567.83" y="1375.5" ></text>
</g>
<g >
<title>kthread (9,421,846 samples, 0.01%)</title><rect x="44.7" y="1637" width="0.1" height="15.0" fill="rgb(222,86,6)" rx="2" ry="2" />
<text  x="47.66" y="1647.5" ></text>
</g>
<g >
<title>common_file_perm (13,106,831 samples, 0.01%)</title><rect x="237.9" y="1333" width="0.2" height="15.0" fill="rgb(211,64,39)" rx="2" ry="2" />
<text  x="240.91" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="965" width="0.8" height="15.0" fill="rgb(238,112,6)" rx="2" ry="2" />
<text  x="101.56" y="975.5" ></text>
</g>
<g >
<title>irq_exit (22,932,819 samples, 0.03%)</title><rect x="591.9" y="1509" width="0.3" height="15.0" fill="rgb(238,22,34)" rx="2" ry="2" />
<text  x="594.86" y="1519.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (58,262,767 samples, 0.07%)</title><rect x="255.4" y="1381" width="0.7" height="15.0" fill="rgb(218,35,0)" rx="2" ry="2" />
<text  x="258.35" y="1391.5" ></text>
</g>
<g >
<title>kthread (16,584,559 samples, 0.02%)</title><rect x="241.2" y="1637" width="0.3" height="15.0" fill="rgb(243,162,28)" rx="2" ry="2" />
<text  x="244.23" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (114,605,118 samples, 0.13%)</title><rect x="62.4" y="293" width="1.5" height="15.0" fill="rgb(245,185,1)" rx="2" ry="2" />
<text  x="65.42" y="303.5" ></text>
</g>
<g >
<title>inotify_read (45,901,175 samples, 0.05%)</title><rect x="96.0" y="1493" width="0.6" height="15.0" fill="rgb(248,7,45)" rx="2" ry="2" />
<text  x="98.99" y="1503.5" ></text>
</g>
<g >
<title>workingset_update_node (16,398,045 samples, 0.02%)</title><rect x="207.8" y="1221" width="0.2" height="15.0" fill="rgb(238,218,33)" rx="2" ry="2" />
<text  x="210.80" y="1231.5" ></text>
</g>
<g >
<title>ext4_has_free_clusters (23,933,441 samples, 0.03%)</title><rect x="177.4" y="1157" width="0.4" height="15.0" fill="rgb(214,45,46)" rx="2" ry="2" />
<text  x="180.44" y="1167.5" ></text>
</g>
<g >
<title>security_file_permission (35,906,576 samples, 0.04%)</title><rect x="744.3" y="1413" width="0.5" height="15.0" fill="rgb(212,10,52)" rx="2" ry="2" />
<text  x="747.32" y="1423.5" ></text>
</g>
<g >
<title>lj_BC_JLOOP (16,539,415 samples, 0.02%)</title><rect x="1030.9" y="1541" width="0.2" height="15.0" fill="rgb(249,203,26)" rx="2" ry="2" />
<text  x="1033.88" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="581" width="0.9" height="15.0" fill="rgb(231,203,1)" rx="2" ry="2" />
<text  x="134.54" y="591.5" ></text>
</g>
<g >
<title>build_skb (35,548,960 samples, 0.04%)</title><rect x="521.8" y="1413" width="0.4" height="15.0" fill="rgb(253,90,48)" rx="2" ry="2" />
<text  x="524.78" y="1423.5" ></text>
</g>
<g >
<title>operator new (13,782,445 samples, 0.02%)</title><rect x="82.4" y="1237" width="0.2" height="15.0" fill="rgb(240,64,35)" rx="2" ry="2" />
<text  x="85.39" y="1247.5" ></text>
</g>
<g >
<title>br_dev_xmit (22,520,230 samples, 0.03%)</title><rect x="742.5" y="1093" width="0.3" height="15.0" fill="rgb(246,136,51)" rx="2" ry="2" />
<text  x="745.51" y="1103.5" ></text>
</g>
<g >
<title>ip_route_input_slow (113,219,511 samples, 0.13%)</title><rect x="1170.8" y="933" width="1.5" height="15.0" fill="rgb(207,204,49)" rx="2" ry="2" />
<text  x="1173.76" y="943.5" ></text>
</g>
<g >
<title>__vxlan_find_mac (8,919,602 samples, 0.01%)</title><rect x="1149.3" y="661" width="0.1" height="15.0" fill="rgb(248,195,16)" rx="2" ry="2" />
<text  x="1152.27" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1589" width="3.0" height="15.0" fill="rgb(207,147,27)" rx="2" ry="2" />
<text  x="131.55" y="1599.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics (32,468,768 samples, 0.04%)</title><rect x="206.1" y="1205" width="0.4" height="15.0" fill="rgb(230,61,13)" rx="2" ry="2" />
<text  x="209.10" y="1215.5" ></text>
</g>
<g >
<title>ip_finish_output (18,301,563 samples, 0.02%)</title><rect x="255.8" y="1285" width="0.2" height="15.0" fill="rgb(230,60,0)" rx="2" ry="2" />
<text  x="258.80" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="821" width="3.6" height="15.0" fill="rgb(206,137,43)" rx="2" ry="2" />
<text  x="109.59" y="831.5" ></text>
</g>
<g >
<title>reschedule_interrupt (49,019,621 samples, 0.05%)</title><rect x="507.2" y="1541" width="0.6" height="15.0" fill="rgb(250,125,49)" rx="2" ry="2" />
<text  x="510.17" y="1551.5" ></text>
</g>
<g >
<title>lj_meta_lookup (9,619,309 samples, 0.01%)</title><rect x="1120.1" y="1509" width="0.1" height="15.0" fill="rgb(206,81,29)" rx="2" ry="2" />
<text  x="1123.07" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (259,239,129 samples, 0.29%)</title><rect x="106.6" y="197" width="3.4" height="15.0" fill="rgb(249,0,0)" rx="2" ry="2" />
<text  x="109.59" y="207.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (728,619,609 samples, 0.82%)</title><rect x="731.9" y="1157" width="9.7" height="15.0" fill="rgb(217,158,29)" rx="2" ry="2" />
<text  x="734.94" y="1167.5" ></text>
</g>
<g >
<title>iov_iter_fault_in_readable (8,179,313 samples, 0.01%)</title><rect x="237.4" y="1317" width="0.1" height="15.0" fill="rgb(205,179,16)" rx="2" ry="2" />
<text  x="240.38" y="1327.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (207,619,848 samples, 0.23%)</title><rect x="247.1" y="1493" width="2.7" height="15.0" fill="rgb(215,207,28)" rx="2" ry="2" />
<text  x="250.07" y="1503.5" ></text>
</g>
<g >
<title>ext4_write_begin (19,146,491 samples, 0.02%)</title><rect x="239.1" y="1333" width="0.3" height="15.0" fill="rgb(240,65,6)" rx="2" ry="2" />
<text  x="242.15" y="1343.5" ></text>
</g>
<g >
<title>walk_component (30,899,382 samples, 0.03%)</title><rect x="89.3" y="1429" width="0.4" height="15.0" fill="rgb(229,41,37)" rx="2" ry="2" />
<text  x="92.27" y="1439.5" ></text>
</g>
<g >
<title>deflate_slow (19,265,537 samples, 0.02%)</title><rect x="16.1" y="1493" width="0.2" height="15.0" fill="rgb(225,48,11)" rx="2" ry="2" />
<text  x="19.08" y="1503.5" ></text>
</g>
<g >
<title>operator new (47,316,533 samples, 0.05%)</title><rect x="56.9" y="1541" width="0.6" height="15.0" fill="rgb(231,121,7)" rx="2" ry="2" />
<text  x="59.87" y="1551.5" ></text>
</g>
<g >
<title>do_futex (95,476,198 samples, 0.11%)</title><rect x="93.8" y="1509" width="1.3" height="15.0" fill="rgb(207,37,14)" rx="2" ry="2" />
<text  x="96.80" y="1519.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (25,086,588,894 samples, 28.13%)</title><rect x="245.7" y="1557" width="332.0" height="15.0" fill="rgb(208,194,0)" rx="2" ry="2" />
<text  x="248.72" y="1567.5" >cpuidle_enter_state</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="933" width="0.4" height="15.0" fill="rgb(235,120,23)" rx="2" ry="2" />
<text  x="56.88" y="943.5" ></text>
</g>
<g >
<title>local.runtime.usleep.abi0 (16,319,473 samples, 0.02%)</title><rect x="13.2" y="1589" width="0.2" height="15.0" fill="rgb(254,5,31)" rx="2" ry="2" />
<text  x="16.23" y="1599.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (23,967,122 samples, 0.03%)</title><rect x="222.0" y="1205" width="0.3" height="15.0" fill="rgb(212,206,4)" rx="2" ry="2" />
<text  x="224.96" y="1215.5" ></text>
</g>
<g >
<title>execute_command_internal (33,468,613 samples, 0.04%)</title><rect x="10.6" y="1525" width="0.5" height="15.0" fill="rgb(224,57,48)" rx="2" ry="2" />
<text  x="13.64" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (956,516,209 samples, 1.07%)</title><rect x="60.8" y="789" width="12.6" height="15.0" fill="rgb(212,197,34)" rx="2" ry="2" />
<text  x="63.78" y="799.5" ></text>
</g>
<g >
<title>__tick_nohz_idle_restart_tick (13,815,360 samples, 0.02%)</title><rect x="594.8" y="1573" width="0.1" height="15.0" fill="rgb(236,86,28)" rx="2" ry="2" />
<text  x="597.75" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="725" width="6.5" height="15.0" fill="rgb(246,195,35)" rx="2" ry="2" />
<text  x="103.13" y="735.5" ></text>
</g>
<g >
<title>tcp_current_mss (26,845,020 samples, 0.03%)</title><rect x="1185.4" y="1301" width="0.3" height="15.0" fill="rgb(208,116,12)" rx="2" ry="2" />
<text  x="1188.39" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="309" width="0.3" height="15.0" fill="rgb(254,55,46)" rx="2" ry="2" />
<text  x="102.79" y="319.5" ></text>
</g>
<g >
<title>schedule (22,943,047 samples, 0.03%)</title><rect x="44.1" y="1605" width="0.3" height="15.0" fill="rgb(254,187,50)" rx="2" ry="2" />
<text  x="47.07" y="1615.5" ></text>
</g>
<g >
<title>tcache_get (14,334,951 samples, 0.02%)</title><rect x="131.3" y="69" width="0.2" height="15.0" fill="rgb(248,111,33)" rx="2" ry="2" />
<text  x="134.29" y="79.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (13,331,328 samples, 0.01%)</title><rect x="195.0" y="1253" width="0.2" height="15.0" fill="rgb(218,141,51)" rx="2" ry="2" />
<text  x="197.99" y="1263.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (150,480,533 samples, 0.17%)</title><rect x="703.3" y="1477" width="2.0" height="15.0" fill="rgb(246,171,20)" rx="2" ry="2" />
<text  x="706.31" y="1487.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (90,485,554 samples, 0.10%)</title><rect x="41.7" y="1429" width="1.2" height="15.0" fill="rgb(221,59,32)" rx="2" ry="2" />
<text  x="44.69" y="1439.5" ></text>
</g>
<g >
<title>_int_free (12,270,065 samples, 0.01%)</title><rect x="53.6" y="149" width="0.2" height="15.0" fill="rgb(205,55,41)" rx="2" ry="2" />
<text  x="56.60" y="159.5" ></text>
</g>
<g >
<title>br_nf_dev_queue_xmit (125,268,191 samples, 0.14%)</title><rect x="536.1" y="1141" width="1.7" height="15.0" fill="rgb(238,130,5)" rx="2" ry="2" />
<text  x="539.13" y="1151.5" ></text>
</g>
<g >
<title>br_forward_finish (26,584,091 samples, 0.03%)</title><rect x="741.9" y="1061" width="0.3" height="15.0" fill="rgb(217,197,24)" rx="2" ry="2" />
<text  x="744.88" y="1071.5" ></text>
</g>
<g >
<title>lapic_next_event (9,736,115 samples, 0.01%)</title><rect x="506.1" y="1477" width="0.1" height="15.0" fill="rgb(226,129,3)" rx="2" ry="2" />
<text  x="509.05" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,621,857 samples, 0.55%)</title><rect x="100.1" y="1269" width="6.5" height="15.0" fill="rgb(252,117,35)" rx="2" ry="2" />
<text  x="103.13" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (740,530,055 samples, 0.83%)</title><rect x="61.3" y="629" width="9.8" height="15.0" fill="rgb(222,64,44)" rx="2" ry="2" />
<text  x="64.31" y="639.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (34,633,373 samples, 0.04%)</title><rect x="593.6" y="1557" width="0.4" height="15.0" fill="rgb(213,94,17)" rx="2" ry="2" />
<text  x="596.58" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1525" width="0.4" height="15.0" fill="rgb(252,69,52)" rx="2" ry="2" />
<text  x="56.88" y="1535.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (47,074,845 samples, 0.05%)</title><rect x="555.9" y="965" width="0.6" height="15.0" fill="rgb(243,142,2)" rx="2" ry="2" />
<text  x="558.88" y="975.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (13,032,779 samples, 0.01%)</title><rect x="587.8" y="1493" width="0.2" height="15.0" fill="rgb(227,178,11)" rx="2" ry="2" />
<text  x="590.80" y="1503.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_out (10,299,285 samples, 0.01%)</title><rect x="550.9" y="933" width="0.2" height="15.0" fill="rgb(244,14,10)" rx="2" ry="2" />
<text  x="553.93" y="943.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (2,863,550,290 samples, 3.21%)</title><rect x="54.5" y="1605" width="37.9" height="15.0" fill="rgb(237,91,37)" rx="2" ry="2" />
<text  x="57.49" y="1615.5" >Ino..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (419,508,785 samples, 0.47%)</title><rect x="62.1" y="437" width="5.5" height="15.0" fill="rgb(226,73,22)" rx="2" ry="2" />
<text  x="65.05" y="447.5" ></text>
</g>
<g >
<title>vxlan_xmit_one (18,391,262 samples, 0.02%)</title><rect x="41.8" y="1173" width="0.2" height="15.0" fill="rgb(254,98,7)" rx="2" ry="2" />
<text  x="44.78" y="1183.5" ></text>
</g>
<g >
<title>__br_forward (209,759,778 samples, 0.24%)</title><rect x="535.4" y="1269" width="2.8" height="15.0" fill="rgb(226,45,40)" rx="2" ry="2" />
<text  x="538.39" y="1279.5" ></text>
</g>
<g >
<title>__sys_connect (12,086,191 samples, 0.01%)</title><rect x="700.9" y="1477" width="0.2" height="15.0" fill="rgb(212,98,49)" rx="2" ry="2" />
<text  x="703.93" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1557" width="0.8" height="15.0" fill="rgb(249,73,31)" rx="2" ry="2" />
<text  x="101.56" y="1567.5" ></text>
</g>
<g >
<title>native_apic_mem_read (8,321,446 samples, 0.01%)</title><rect x="248.4" y="1285" width="0.2" height="15.0" fill="rgb(240,26,40)" rx="2" ry="2" />
<text  x="251.44" y="1295.5" ></text>
</g>
<g >
<title>update_process_times (44,431,567 samples, 0.05%)</title><rect x="249.2" y="1445" width="0.6" height="15.0" fill="rgb(225,149,18)" rx="2" ry="2" />
<text  x="252.21" y="1455.5" ></text>
</g>
<g >
<title>smp_reschedule_interrupt (49,019,621 samples, 0.05%)</title><rect x="507.2" y="1525" width="0.6" height="15.0" fill="rgb(246,72,9)" rx="2" ry="2" />
<text  x="510.17" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="453" width="3.6" height="15.0" fill="rgb(247,37,23)" rx="2" ry="2" />
<text  x="109.59" y="463.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (15,918,254 samples, 0.02%)</title><rect x="1185.9" y="1365" width="0.2" height="15.0" fill="rgb(252,27,17)" rx="2" ry="2" />
<text  x="1188.93" y="1375.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (9,238,879 samples, 0.01%)</title><rect x="1186.0" y="1349" width="0.1" height="15.0" fill="rgb(254,35,49)" rx="2" ry="2" />
<text  x="1189.01" y="1359.5" ></text>
</g>
<g >
<title>enqueue_entity (25,433,756 samples, 0.03%)</title><rect x="554.6" y="821" width="0.3" height="15.0" fill="rgb(236,46,40)" rx="2" ry="2" />
<text  x="557.61" y="831.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (11,138,163 samples, 0.01%)</title><rect x="522.0" y="1381" width="0.2" height="15.0" fill="rgb(218,143,22)" rx="2" ry="2" />
<text  x="525.00" y="1391.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (12,291,993 samples, 0.01%)</title><rect x="255.8" y="1221" width="0.2" height="15.0" fill="rgb(227,16,33)" rx="2" ry="2" />
<text  x="258.83" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (330,024,610 samples, 0.37%)</title><rect x="62.1" y="421" width="4.3" height="15.0" fill="rgb(241,170,3)" rx="2" ry="2" />
<text  x="65.07" y="431.5" ></text>
</g>
<g >
<title>lj_alloc_malloc (28,029,015 samples, 0.03%)</title><rect x="922.0" y="1461" width="0.4" height="15.0" fill="rgb(205,75,7)" rx="2" ry="2" />
<text  x="925.04" y="1471.5" ></text>
</g>
<g >
<title>ip_vs_conn_out_get_proto (22,165,481 samples, 0.02%)</title><rect x="567.1" y="1301" width="0.3" height="15.0" fill="rgb(205,38,21)" rx="2" ry="2" />
<text  x="570.08" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="517" width="0.4" height="15.0" fill="rgb(240,13,27)" rx="2" ry="2" />
<text  x="56.54" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,549,793 samples, 0.12%)</title><rect x="97.2" y="869" width="1.4" height="15.0" fill="rgb(229,215,27)" rx="2" ry="2" />
<text  x="100.15" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (110,568,388 samples, 0.12%)</title><rect x="110.2" y="101" width="1.4" height="15.0" fill="rgb(246,2,10)" rx="2" ry="2" />
<text  x="113.17" y="111.5" ></text>
</g>
<g >
<title>lj_BC_RET0 (39,594,943 samples, 0.04%)</title><rect x="1067.9" y="1541" width="0.5" height="15.0" fill="rgb(244,208,6)" rx="2" ry="2" />
<text  x="1070.85" y="1551.5" ></text>
</g>
<g >
<title>down_write (8,774,632 samples, 0.01%)</title><rect x="161.7" y="1221" width="0.1" height="15.0" fill="rgb(234,90,48)" rx="2" ry="2" />
<text  x="164.70" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="661" width="18.3" height="15.0" fill="rgb(238,85,15)" rx="2" ry="2" />
<text  x="113.16" y="671.5" ></text>
</g>
<g >
<title>__libc_read (139,836,345 samples, 0.16%)</title><rect x="95.2" y="1605" width="1.9" height="15.0" fill="rgb(227,97,51)" rx="2" ry="2" />
<text  x="98.22" y="1615.5" ></text>
</g>
<g >
<title>unlock_page (21,884,813 samples, 0.02%)</title><rect x="236.8" y="1301" width="0.3" height="15.0" fill="rgb(238,88,2)" rx="2" ry="2" />
<text  x="239.76" y="1311.5" ></text>
</g>
<g >
<title>br_dev_xmit (218,909,460 samples, 0.25%)</title><rect x="1176.7" y="1093" width="2.9" height="15.0" fill="rgb(217,157,28)" rx="2" ry="2" />
<text  x="1179.66" y="1103.5" ></text>
</g>
<g >
<title>call_cpuidle (4,149,906,974 samples, 4.65%)</title><rect x="596.6" y="1525" width="55.0" height="15.0" fill="rgb(210,165,25)" rx="2" ry="2" />
<text  x="599.64" y="1535.5" >call_..</text>
</g>
<g >
<title>xas_load (38,489,353 samples, 0.04%)</title><rect x="213.6" y="1237" width="0.5" height="15.0" fill="rgb(254,102,44)" rx="2" ry="2" />
<text  x="216.56" y="1247.5" ></text>
</g>
<g >
<title>__ip_finish_output (122,002,150 samples, 0.14%)</title><rect x="562.5" y="1317" width="1.6" height="15.0" fill="rgb(229,5,29)" rx="2" ry="2" />
<text  x="565.49" y="1327.5" ></text>
</g>
<g >
<title>mutex_lock (9,296,497 samples, 0.01%)</title><rect x="705.5" y="1477" width="0.2" height="15.0" fill="rgb(211,196,24)" rx="2" ry="2" />
<text  x="708.53" y="1487.5" ></text>
</g>
<g >
<title>ep_autoremove_wake_function (85,954,821 samples, 0.10%)</title><rect x="554.3" y="917" width="1.1" height="15.0" fill="rgb(251,96,26)" rx="2" ry="2" />
<text  x="557.25" y="927.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (13,377,600 samples, 0.02%)</title><rect x="40.5" y="1589" width="0.2" height="15.0" fill="rgb(253,142,41)" rx="2" ry="2" />
<text  x="43.52" y="1599.5" ></text>
</g>
<g >
<title>expand_prompt_string (8,212,682 samples, 0.01%)</title><rect x="11.0" y="1317" width="0.1" height="15.0" fill="rgb(223,12,36)" rx="2" ry="2" />
<text  x="13.95" y="1327.5" ></text>
</g>
<g >
<title>__x64_sys_read (14,703,657 samples, 0.02%)</title><rect x="240.7" y="1509" width="0.2" height="15.0" fill="rgb(222,60,28)" rx="2" ry="2" />
<text  x="243.68" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1541" width="0.3" height="15.0" fill="rgb(238,26,6)" rx="2" ry="2" />
<text  x="102.79" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,375,863,330 samples, 1.54%)</title><rect x="110.2" y="165" width="18.2" height="15.0" fill="rgb(218,123,43)" rx="2" ry="2" />
<text  x="113.16" y="175.5" ></text>
</g>
<g >
<title>do_IRQ (707,786,422 samples, 0.79%)</title><rect x="641.8" y="1461" width="9.3" height="15.0" fill="rgb(240,50,1)" rx="2" ry="2" />
<text  x="644.77" y="1471.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (8,096,132 samples, 0.01%)</title><rect x="91.3" y="1573" width="0.1" height="15.0" fill="rgb(230,171,24)" rx="2" ry="2" />
<text  x="94.28" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="917" width="0.4" height="15.0" fill="rgb(252,98,32)" rx="2" ry="2" />
<text  x="56.54" y="927.5" ></text>
</g>
<g >
<title>ip_finish_output (63,954,263 samples, 0.07%)</title><rect x="734.9" y="613" width="0.9" height="15.0" fill="rgb(250,9,41)" rx="2" ry="2" />
<text  x="737.92" y="623.5" ></text>
</g>
<g >
<title>new_slab (40,568,127 samples, 0.05%)</title><rect x="155.8" y="1189" width="0.5" height="15.0" fill="rgb(207,65,18)" rx="2" ry="2" />
<text  x="158.80" y="1199.5" ></text>
</g>
<g >
<title>ip_route_me_harder (59,815,661 samples, 0.07%)</title><rect x="730.6" y="1173" width="0.8" height="15.0" fill="rgb(235,152,7)" rx="2" ry="2" />
<text  x="733.58" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1157" width="18.3" height="15.0" fill="rgb(251,103,20)" rx="2" ry="2" />
<text  x="113.16" y="1167.5" ></text>
</g>
<g >
<title>net_rx_action (712,847,707 samples, 0.80%)</title><rect x="732.1" y="1093" width="9.4" height="15.0" fill="rgb(242,118,10)" rx="2" ry="2" />
<text  x="735.10" y="1103.5" ></text>
</g>
<g >
<title>__x64_sys_openat (8,136,312 samples, 0.01%)</title><rect x="51.1" y="1477" width="0.1" height="15.0" fill="rgb(208,213,34)" rx="2" ry="2" />
<text  x="54.12" y="1487.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (11,101,950 samples, 0.01%)</title><rect x="516.5" y="1301" width="0.1" height="15.0" fill="rgb(241,201,1)" rx="2" ry="2" />
<text  x="519.47" y="1311.5" ></text>
</g>
<g >
<title>ipv4_confirm (14,659,254 samples, 0.02%)</title><rect x="1181.7" y="1173" width="0.2" height="15.0" fill="rgb(234,109,13)" rx="2" ry="2" />
<text  x="1184.74" y="1183.5" ></text>
</g>
<g >
<title>cpuUsage.sh (60,597,193 samples, 0.07%)</title><rect x="10.6" y="1669" width="0.8" height="15.0" fill="rgb(222,53,29)" rx="2" ry="2" />
<text  x="13.60" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="741" width="3.0" height="15.0" fill="rgb(229,138,35)" rx="2" ry="2" />
<text  x="131.55" y="751.5" ></text>
</g>
<g >
<title>intel_idle (2,720,791,572 samples, 3.05%)</title><rect x="603.0" y="1477" width="36.0" height="15.0" fill="rgb(251,27,11)" rx="2" ry="2" />
<text  x="605.96" y="1487.5" >int..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1253" width="1.4" height="15.0" fill="rgb(227,177,29)" rx="2" ry="2" />
<text  x="100.15" y="1263.5" ></text>
</g>
<g >
<title>__libc_write (122,200,622 samples, 0.14%)</title><rect x="238.5" y="1509" width="1.7" height="15.0" fill="rgb(247,69,13)" rx="2" ry="2" />
<text  x="241.54" y="1519.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (11,824,158 samples, 0.01%)</title><rect x="650.3" y="1365" width="0.2" height="15.0" fill="rgb(220,142,12)" rx="2" ry="2" />
<text  x="653.33" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="645" width="18.3" height="15.0" fill="rgb(236,82,28)" rx="2" ry="2" />
<text  x="113.16" y="655.5" ></text>
</g>
<g >
<title>bio_put (151,438,813 samples, 0.17%)</title><rect x="513.0" y="1349" width="2.0" height="15.0" fill="rgb(241,152,12)" rx="2" ry="2" />
<text  x="515.98" y="1359.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (8,258,920 samples, 0.01%)</title><rect x="43.8" y="1477" width="0.1" height="15.0" fill="rgb(227,44,17)" rx="2" ry="2" />
<text  x="46.80" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1269" width="0.8" height="15.0" fill="rgb(235,90,36)" rx="2" ry="2" />
<text  x="101.56" y="1279.5" ></text>
</g>
<g >
<title>udp4_gro_receive (117,563,284 samples, 0.13%)</title><rect x="523.1" y="1365" width="1.6" height="15.0" fill="rgb(236,122,45)" rx="2" ry="2" />
<text  x="526.10" y="1375.5" ></text>
</g>
<g >
<title>__ip_vs_conn_put_timer (17,912,995 samples, 0.02%)</title><rect x="565.3" y="1269" width="0.3" height="15.0" fill="rgb(213,39,50)" rx="2" ry="2" />
<text  x="568.33" y="1279.5" ></text>
</g>
<g >
<title>ip_vs_out.part.0 (47,538,555 samples, 0.05%)</title><rect x="1169.3" y="917" width="0.6" height="15.0" fill="rgb(238,111,41)" rx="2" ry="2" />
<text  x="1172.29" y="927.5" ></text>
</g>
<g >
<title>dev_queue_xmit (20,705,677 samples, 0.02%)</title><rect x="737.9" y="837" width="0.2" height="15.0" fill="rgb(232,87,3)" rx="2" ry="2" />
<text  x="740.86" y="847.5" ></text>
</g>
<g >
<title>queue_work_on (23,084,960 samples, 0.03%)</title><rect x="591.5" y="1461" width="0.3" height="15.0" fill="rgb(250,141,23)" rx="2" ry="2" />
<text  x="594.51" y="1471.5" ></text>
</g>
<g >
<title>enqueue_task_fair (7,800,385 samples, 0.01%)</title><rect x="575.7" y="1413" width="0.1" height="15.0" fill="rgb(245,54,35)" rx="2" ry="2" />
<text  x="578.68" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (80,114,720 samples, 0.09%)</title><rect x="128.5" y="133" width="1.1" height="15.0" fill="rgb(219,157,10)" rx="2" ry="2" />
<text  x="131.55" y="143.5" ></text>
</g>
<g >
<title>tcp_rcv_established (717,490,625 samples, 0.80%)</title><rect x="547.3" y="1093" width="9.5" height="15.0" fill="rgb(232,0,3)" rx="2" ry="2" />
<text  x="550.35" y="1103.5" ></text>
</g>
<g >
<title>lj_BC_JFORL (12,169,458 samples, 0.01%)</title><rect x="1030.1" y="1541" width="0.2" height="15.0" fill="rgb(243,141,11)" rx="2" ry="2" />
<text  x="1033.11" y="1551.5" ></text>
</g>
<g >
<title>string_quote_removal (8,212,682 samples, 0.01%)</title><rect x="11.0" y="1365" width="0.1" height="15.0" fill="rgb(245,207,34)" rx="2" ry="2" />
<text  x="13.95" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,621,857 samples, 0.55%)</title><rect x="100.1" y="1413" width="6.5" height="15.0" fill="rgb(206,224,44)" rx="2" ry="2" />
<text  x="103.13" y="1423.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/libnetwork/networkdb.(*NetworkDB).triggerFunc (19,266,059 samples, 0.02%)</title><rect x="11.5" y="1621" width="0.3" height="15.0" fill="rgb(229,13,13)" rx="2" ry="2" />
<text  x="14.52" y="1631.5" ></text>
</g>
<g >
<title>kthread (29,400,553 samples, 0.03%)</title><rect x="46.9" y="1637" width="0.4" height="15.0" fill="rgb(228,151,18)" rx="2" ry="2" />
<text  x="49.89" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1141" width="1.4" height="15.0" fill="rgb(226,221,30)" rx="2" ry="2" />
<text  x="100.15" y="1151.5" ></text>
</g>
<g >
<title>gro_normal_list.part.0 (596,287,196 samples, 0.67%)</title><rect x="525.3" y="1429" width="7.9" height="15.0" fill="rgb(208,40,22)" rx="2" ry="2" />
<text  x="528.28" y="1439.5" ></text>
</g>
<g >
<title>new_sync_write (6,847,263,797 samples, 7.68%)</title><rect x="147.1" y="1365" width="90.6" height="15.0" fill="rgb(212,26,14)" rx="2" ry="2" />
<text  x="150.12" y="1375.5" >new_sync_w..</text>
</g>
<g >
<title>local.runtime.mstart.abi0 (25,960,426 samples, 0.03%)</title><rect x="13.1" y="1653" width="0.4" height="15.0" fill="rgb(228,140,14)" rx="2" ry="2" />
<text  x="16.11" y="1663.5" ></text>
</g>
<g >
<title>__switch_to (9,294,637 samples, 0.01%)</title><rect x="242.4" y="1653" width="0.1" height="15.0" fill="rgb(232,21,37)" rx="2" ry="2" />
<text  x="245.42" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="533" width="18.3" height="15.0" fill="rgb(253,144,5)" rx="2" ry="2" />
<text  x="113.16" y="543.5" ></text>
</g>
<g >
<title>update_process_times (12,414,435 samples, 0.01%)</title><rect x="639.4" y="1205" width="0.2" height="15.0" fill="rgb(231,191,12)" rx="2" ry="2" />
<text  x="642.39" y="1215.5" ></text>
</g>
<g >
<title>process_one_work (12,206,980 samples, 0.01%)</title><rect x="47.3" y="1605" width="0.1" height="15.0" fill="rgb(243,61,52)" rx="2" ry="2" />
<text  x="50.29" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1253" width="0.9" height="15.0" fill="rgb(208,116,37)" rx="2" ry="2" />
<text  x="134.54" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1333" width="3.6" height="15.0" fill="rgb(212,172,52)" rx="2" ry="2" />
<text  x="109.59" y="1343.5" ></text>
</g>
<g >
<title>__netif_receive_skb (13,603,784 samples, 0.02%)</title><rect x="251.6" y="1269" width="0.2" height="15.0" fill="rgb(243,98,11)" rx="2" ry="2" />
<text  x="254.62" y="1279.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (19,854,292 samples, 0.02%)</title><rect x="543.2" y="981" width="0.3" height="15.0" fill="rgb(207,75,1)" rx="2" ry="2" />
<text  x="546.20" y="991.5" ></text>
</g>
<g >
<title>validate_xmit_skb (13,822,497 samples, 0.02%)</title><rect x="563.6" y="1253" width="0.2" height="15.0" fill="rgb(206,124,9)" rx="2" ry="2" />
<text  x="566.59" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1605" width="18.3" height="15.0" fill="rgb(244,46,43)" rx="2" ry="2" />
<text  x="113.16" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (26,359,096 samples, 0.03%)</title><rect x="54.0" y="245" width="0.3" height="15.0" fill="rgb(234,170,0)" rx="2" ry="2" />
<text  x="56.97" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,438,308 samples, 0.07%)</title><rect x="110.8" y="85" width="0.8" height="15.0" fill="rgb(245,59,28)" rx="2" ry="2" />
<text  x="113.82" y="95.5" ></text>
</g>
<g >
<title>tick_broadcast_set_event (41,065,670 samples, 0.05%)</title><rect x="505.1" y="1493" width="0.5" height="15.0" fill="rgb(246,47,7)" rx="2" ry="2" />
<text  x="508.08" y="1503.5" ></text>
</g>
<g >
<title>skb_free_head (21,054,665 samples, 0.02%)</title><rect x="520.2" y="1365" width="0.3" height="15.0" fill="rgb(213,139,5)" rx="2" ry="2" />
<text  x="523.19" y="1375.5" ></text>
</g>
<g >
<title>__x64_sys_nanosleep (15,518,767 samples, 0.02%)</title><rect x="13.2" y="1541" width="0.2" height="15.0" fill="rgb(254,175,52)" rx="2" ry="2" />
<text  x="16.24" y="1551.5" ></text>
</g>
<g >
<title>nf_nat_manip_pkt (7,642,580 samples, 0.01%)</title><rect x="549.6" y="869" width="0.1" height="15.0" fill="rgb(235,182,13)" rx="2" ry="2" />
<text  x="552.59" y="879.5" ></text>
</g>
<g >
<title>ip_finish_output (82,558,848 samples, 0.09%)</title><rect x="549.7" y="949" width="1.1" height="15.0" fill="rgb(228,84,41)" rx="2" ry="2" />
<text  x="552.74" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1349" width="0.3" height="15.0" fill="rgb(219,227,35)" rx="2" ry="2" />
<text  x="102.79" y="1359.5" ></text>
</g>
<g >
<title>dst_cache_per_cpu_get.isra.0 (11,556,994 samples, 0.01%)</title><rect x="1157.3" y="629" width="0.2" height="15.0" fill="rgb(209,208,36)" rx="2" ry="2" />
<text  x="1160.32" y="639.5" ></text>
</g>
<g >
<title>nf_hook_slow (13,126,879 samples, 0.01%)</title><rect x="252.5" y="1397" width="0.2" height="15.0" fill="rgb(247,206,0)" rx="2" ry="2" />
<text  x="255.49" y="1407.5" ></text>
</g>
<g >
<title>bio_free (149,282,639 samples, 0.17%)</title><rect x="513.0" y="1333" width="2.0" height="15.0" fill="rgb(244,186,44)" rx="2" ry="2" />
<text  x="515.98" y="1343.5" ></text>
</g>
<g >
<title>intel_pmu_disable_all (10,625,613 samples, 0.01%)</title><rect x="639.4" y="1125" width="0.1" height="15.0" fill="rgb(251,123,25)" rx="2" ry="2" />
<text  x="642.40" y="1135.5" ></text>
</g>
<g >
<title>__dev_forward_skb (21,060,799 samples, 0.02%)</title><rect x="1178.0" y="949" width="0.3" height="15.0" fill="rgb(234,133,41)" rx="2" ry="2" />
<text  x="1180.99" y="959.5" ></text>
</g>
<g >
<title>ip_local_out (49,162,045 samples, 0.06%)</title><rect x="255.4" y="1317" width="0.7" height="15.0" fill="rgb(229,220,2)" rx="2" ry="2" />
<text  x="258.45" y="1327.5" ></text>
</g>
<g >
<title>worker_thread (26,393,700 samples, 0.03%)</title><rect x="45.5" y="1621" width="0.4" height="15.0" fill="rgb(239,2,42)" rx="2" ry="2" />
<text  x="48.53" y="1631.5" ></text>
</g>
<g >
<title>do_syscall_64 (160,590,558 samples, 0.18%)</title><rect x="133.9" y="1541" width="2.1" height="15.0" fill="rgb(251,18,21)" rx="2" ry="2" />
<text  x="136.92" y="1551.5" ></text>
</g>
<g >
<title>new_slab (416,429,803 samples, 0.47%)</title><rect x="22.6" y="1365" width="5.5" height="15.0" fill="rgb(208,133,38)" rx="2" ry="2" />
<text  x="25.63" y="1375.5" ></text>
</g>
<g >
<title>__fget_light (16,267,658 samples, 0.02%)</title><rect x="724.3" y="1429" width="0.2" height="15.0" fill="rgb(224,69,40)" rx="2" ry="2" />
<text  x="727.30" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="341" width="0.3" height="15.0" fill="rgb(253,19,30)" rx="2" ry="2" />
<text  x="102.79" y="351.5" ></text>
</g>
<g >
<title>std::condition_variable::notify_all (112,103,118 samples, 0.13%)</title><rect x="93.6" y="1605" width="1.5" height="15.0" fill="rgb(220,160,21)" rx="2" ry="2" />
<text  x="96.62" y="1615.5" ></text>
</g>
<g >
<title>lj_ff_string_sub (8,820,258 samples, 0.01%)</title><rect x="1103.7" y="1541" width="0.1" height="15.0" fill="rgb(245,139,40)" rx="2" ry="2" />
<text  x="1106.67" y="1551.5" ></text>
</g>
<g >
<title>update_load_avg (12,569,153 samples, 0.01%)</title><rect x="554.8" y="805" width="0.1" height="15.0" fill="rgb(226,191,38)" rx="2" ry="2" />
<text  x="557.78" y="815.5" ></text>
</g>
<g >
<title>handle_edge_irq (7,860,016 samples, 0.01%)</title><rect x="893.7" y="1429" width="0.1" height="15.0" fill="rgb(238,35,17)" rx="2" ry="2" />
<text  x="896.74" y="1439.5" ></text>
</g>
<g >
<title>find_get_pages_range_tag (22,591,532 samples, 0.03%)</title><rect x="39.7" y="1509" width="0.3" height="15.0" fill="rgb(234,194,28)" rx="2" ry="2" />
<text  x="42.72" y="1519.5" ></text>
</g>
<g >
<title>ip_rcv_finish (42,816,985 samples, 0.05%)</title><rect x="251.9" y="1397" width="0.6" height="15.0" fill="rgb(254,154,47)" rx="2" ry="2" />
<text  x="254.91" y="1407.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (35,549,638 samples, 0.04%)</title><rect x="1163.2" y="789" width="0.5" height="15.0" fill="rgb(244,152,6)" rx="2" ry="2" />
<text  x="1166.22" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,880,873 samples, 0.55%)</title><rect x="100.1" y="1509" width="6.5" height="15.0" fill="rgb(210,120,1)" rx="2" ry="2" />
<text  x="103.13" y="1519.5" ></text>
</g>
<g >
<title>ip_finish_output2 (27,137,546 samples, 0.03%)</title><rect x="568.5" y="1237" width="0.4" height="15.0" fill="rgb(231,127,10)" rx="2" ry="2" />
<text  x="571.50" y="1247.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (9,326,679 samples, 0.01%)</title><rect x="743.7" y="1317" width="0.1" height="15.0" fill="rgb(226,71,54)" rx="2" ry="2" />
<text  x="746.67" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1173" width="3.0" height="15.0" fill="rgb(207,135,16)" rx="2" ry="2" />
<text  x="131.55" y="1183.5" ></text>
</g>
<g >
<title>br_nf_dev_queue_xmit (22,692,764 samples, 0.03%)</title><rect x="41.7" y="1269" width="0.3" height="15.0" fill="rgb(211,200,5)" rx="2" ry="2" />
<text  x="44.74" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1509" width="0.4" height="15.0" fill="rgb(251,162,50)" rx="2" ry="2" />
<text  x="56.88" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="709" width="1.4" height="15.0" fill="rgb(224,30,33)" rx="2" ry="2" />
<text  x="100.15" y="719.5" ></text>
</g>
<g >
<title>__schedule (55,217,849 samples, 0.06%)</title><rect x="140.2" y="1429" width="0.7" height="15.0" fill="rgb(232,30,32)" rx="2" ry="2" />
<text  x="143.21" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="773" width="0.4" height="15.0" fill="rgb(221,138,13)" rx="2" ry="2" />
<text  x="56.54" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (83,286,891 samples, 0.09%)</title><rect x="79.3" y="1125" width="1.1" height="15.0" fill="rgb(209,75,32)" rx="2" ry="2" />
<text  x="82.31" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="869" width="0.8" height="15.0" fill="rgb(242,81,29)" rx="2" ry="2" />
<text  x="101.56" y="879.5" ></text>
</g>
<g >
<title>ksys_write (111,521,533 samples, 0.13%)</title><rect x="238.6" y="1445" width="1.5" height="15.0" fill="rgb(208,52,16)" rx="2" ry="2" />
<text  x="241.62" y="1455.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_out (39,427,645 samples, 0.04%)</title><rect x="1182.0" y="1173" width="0.5" height="15.0" fill="rgb(243,82,35)" rx="2" ry="2" />
<text  x="1184.98" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="677" width="0.9" height="15.0" fill="rgb(227,89,13)" rx="2" ry="2" />
<text  x="134.54" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="341" width="0.9" height="15.0" fill="rgb(252,174,43)" rx="2" ry="2" />
<text  x="134.54" y="351.5" ></text>
</g>
<g >
<title>menu_select (620,209,642 samples, 0.70%)</title><rect x="580.2" y="1573" width="8.2" height="15.0" fill="rgb(236,76,23)" rx="2" ry="2" />
<text  x="583.20" y="1583.5" ></text>
</g>
<g >
<title>execute_shell_function (11,234,725 samples, 0.01%)</title><rect x="10.8" y="1189" width="0.1" height="15.0" fill="rgb(250,52,18)" rx="2" ry="2" />
<text  x="13.80" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,307,376 samples, 0.01%)</title><rect x="130.3" y="101" width="0.2" height="15.0" fill="rgb(214,137,28)" rx="2" ry="2" />
<text  x="133.29" y="111.5" ></text>
</g>
<g >
<title>__pthread_cond_wait (8,602,580 samples, 0.01%)</title><rect x="137.6" y="1589" width="0.1" height="15.0" fill="rgb(212,106,38)" rx="2" ry="2" />
<text  x="140.59" y="1599.5" ></text>
</g>
<g >
<title>br_dev_queue_push_xmit (22,119,474 samples, 0.02%)</title><rect x="1180.8" y="1013" width="0.2" height="15.0" fill="rgb(250,12,51)" rx="2" ry="2" />
<text  x="1183.75" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1045" width="18.3" height="15.0" fill="rgb(250,48,0)" rx="2" ry="2" />
<text  x="113.16" y="1055.5" ></text>
</g>
<g >
<title>ip_rcv (66,016,310 samples, 0.07%)</title><rect x="43.1" y="1509" width="0.9" height="15.0" fill="rgb(237,30,40)" rx="2" ry="2" />
<text  x="46.08" y="1519.5" ></text>
</g>
<g >
<title>udp_tunnel_xmit_skb (505,533,290 samples, 0.57%)</title><rect x="1150.4" y="661" width="6.7" height="15.0" fill="rgb(221,227,51)" rx="2" ry="2" />
<text  x="1153.39" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,364,564,041 samples, 1.53%)</title><rect x="60.0" y="1013" width="18.1" height="15.0" fill="rgb(206,168,38)" rx="2" ry="2" />
<text  x="63.03" y="1023.5" ></text>
</g>
<g >
<title>iptable_mangle_hook (9,608,754 samples, 0.01%)</title><rect x="1156.4" y="581" width="0.2" height="15.0" fill="rgb(247,58,17)" rx="2" ry="2" />
<text  x="1159.43" y="591.5" ></text>
</g>
<g >
<title>expand_string_to_string (8,212,682 samples, 0.01%)</title><rect x="11.0" y="1301" width="0.1" height="15.0" fill="rgb(253,221,36)" rx="2" ry="2" />
<text  x="13.95" y="1311.5" ></text>
</g>
<g >
<title>kern_select (7,598,686 samples, 0.01%)</title><rect x="242.2" y="1509" width="0.1" height="15.0" fill="rgb(240,229,47)" rx="2" ry="2" />
<text  x="245.19" y="1519.5" ></text>
</g>
<g >
<title>lua_pushlstring (74,307,011 samples, 0.08%)</title><rect x="684.7" y="1589" width="1.0" height="15.0" fill="rgb(232,26,29)" rx="2" ry="2" />
<text  x="687.67" y="1599.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_manip_pkt (12,273,626 samples, 0.01%)</title><rect x="1182.1" y="1093" width="0.2" height="15.0" fill="rgb(250,54,12)" rx="2" ry="2" />
<text  x="1185.12" y="1103.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (2,695,347,320 samples, 3.02%)</title><rect x="539.9" y="1429" width="35.6" height="15.0" fill="rgb(226,26,30)" rx="2" ry="2" />
<text  x="542.87" y="1439.5" >__n..</text>
</g>
<g >
<title>schedule (57,511,509 samples, 0.06%)</title><rect x="140.2" y="1445" width="0.8" height="15.0" fill="rgb(249,202,4)" rx="2" ry="2" />
<text  x="143.20" y="1455.5" ></text>
</g>
<g >
<title>lookup_fast (26,167,189 samples, 0.03%)</title><rect x="89.3" y="1413" width="0.4" height="15.0" fill="rgb(226,102,16)" rx="2" ry="2" />
<text  x="92.33" y="1423.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (11,923,190 samples, 0.01%)</title><rect x="82.4" y="1221" width="0.2" height="15.0" fill="rgb(209,7,5)" rx="2" ry="2" />
<text  x="85.42" y="1231.5" ></text>
</g>
<g >
<title>cpuidle_reflect (18,647,064 samples, 0.02%)</title><rect x="579.9" y="1589" width="0.2" height="15.0" fill="rgb(220,106,11)" rx="2" ry="2" />
<text  x="582.87" y="1599.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (235,975,548 samples, 0.26%)</title><rect x="548.0" y="1029" width="3.2" height="15.0" fill="rgb(244,101,26)" rx="2" ry="2" />
<text  x="551.03" y="1039.5" ></text>
</g>
<g >
<title>sk_reset_timer (34,090,435 samples, 0.04%)</title><rect x="1184.2" y="1237" width="0.4" height="15.0" fill="rgb(254,177,52)" rx="2" ry="2" />
<text  x="1187.19" y="1247.5" ></text>
</g>
<g >
<title>rmqueue (21,670,997 samples, 0.02%)</title><rect x="27.6" y="1269" width="0.3" height="15.0" fill="rgb(216,67,51)" rx="2" ry="2" />
<text  x="30.58" y="1279.5" ></text>
</g>
<g >
<title>_cond_resched (8,983,871 samples, 0.01%)</title><rect x="154.9" y="1237" width="0.1" height="15.0" fill="rgb(246,78,0)" rx="2" ry="2" />
<text  x="157.89" y="1247.5" ></text>
</g>
<g >
<title>nf_hook_slow (17,295,655 samples, 0.02%)</title><rect x="43.7" y="1493" width="0.3" height="15.0" fill="rgb(247,221,46)" rx="2" ry="2" />
<text  x="46.72" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs@plt (9,197,249 samples, 0.01%)</title><rect x="130.5" y="101" width="0.1" height="15.0" fill="rgb(237,73,1)" rx="2" ry="2" />
<text  x="133.47" y="111.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,576,651,666 samples, 1.77%)</title><rect x="724.0" y="1493" width="20.9" height="15.0" fill="rgb(211,40,25)" rx="2" ry="2" />
<text  x="727.04" y="1503.5" ></text>
</g>
<g >
<title>blk_done_softirq (503,337,580 samples, 0.56%)</title><rect x="511.4" y="1477" width="6.6" height="15.0" fill="rgb(212,126,27)" rx="2" ry="2" />
<text  x="514.38" y="1487.5" ></text>
</g>
<g >
<title>iptable_filter_hook (7,950,287 samples, 0.01%)</title><rect x="729.7" y="1189" width="0.1" height="15.0" fill="rgb(243,229,47)" rx="2" ry="2" />
<text  x="732.70" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="389" width="18.3" height="15.0" fill="rgb(212,168,51)" rx="2" ry="2" />
<text  x="113.16" y="399.5" ></text>
</g>
<g >
<title>mutex_lock (12,206,509 samples, 0.01%)</title><rect x="750.4" y="1477" width="0.1" height="15.0" fill="rgb(236,146,31)" rx="2" ry="2" />
<text  x="753.39" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1109" width="0.4" height="15.0" fill="rgb(230,151,49)" rx="2" ry="2" />
<text  x="56.54" y="1119.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (12,022,200 samples, 0.01%)</title><rect x="714.0" y="1557" width="0.1" height="15.0" fill="rgb(243,172,47)" rx="2" ry="2" />
<text  x="716.99" y="1567.5" ></text>
</g>
<g >
<title>xas_find_conflict (34,074,638 samples, 0.04%)</title><rect x="208.6" y="1221" width="0.5" height="15.0" fill="rgb(236,197,44)" rx="2" ry="2" />
<text  x="211.61" y="1231.5" ></text>
</g>
<g >
<title>skb_ext_add (12,721,322 samples, 0.01%)</title><rect x="538.6" y="1333" width="0.1" height="15.0" fill="rgb(254,157,25)" rx="2" ry="2" />
<text  x="541.55" y="1343.5" ></text>
</g>
<g >
<title>irq_exit (7,845,842 samples, 0.01%)</title><rect x="1017.2" y="1477" width="0.1" height="15.0" fill="rgb(215,203,49)" rx="2" ry="2" />
<text  x="1020.24" y="1487.5" ></text>
</g>
<g >
<title>execute_command_internal (8,487,866 samples, 0.01%)</title><rect x="11.1" y="1541" width="0.1" height="15.0" fill="rgb(225,27,27)" rx="2" ry="2" />
<text  x="14.08" y="1551.5" ></text>
</g>
<g >
<title>mod_timer (22,205,695 samples, 0.02%)</title><rect x="1161.7" y="869" width="0.3" height="15.0" fill="rgb(210,189,34)" rx="2" ry="2" />
<text  x="1164.72" y="879.5" ></text>
</g>
<g >
<title>bvec_free (84,307,871 samples, 0.09%)</title><rect x="513.3" y="1317" width="1.1" height="15.0" fill="rgb(212,176,32)" rx="2" ry="2" />
<text  x="516.30" y="1327.5" ></text>
</g>
<g >
<title>lj_mem_realloc (13,114,053 samples, 0.01%)</title><rect x="687.0" y="1557" width="0.2" height="15.0" fill="rgb(228,55,4)" rx="2" ry="2" />
<text  x="690.00" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="709" width="0.9" height="15.0" fill="rgb(224,110,32)" rx="2" ry="2" />
<text  x="134.54" y="719.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (18,377,784 samples, 0.02%)</title><rect x="571.4" y="1365" width="0.2" height="15.0" fill="rgb(217,2,0)" rx="2" ry="2" />
<text  x="574.37" y="1375.5" ></text>
</g>
<g >
<title>__free_slab (18,478,927 samples, 0.02%)</title><rect x="514.1" y="1189" width="0.3" height="15.0" fill="rgb(214,177,32)" rx="2" ry="2" />
<text  x="517.12" y="1199.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::shared_ptr&lt;InotifySubscription&gt;, std::shared_ptr&lt;InotifySubscription&gt;, std::allocator&lt;std::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__detail::_Identity, std::equal_to&lt;std::shared_ptr&lt;InotifySubscription&gt; &gt;, std::hash&lt;std::shared_ptr&lt;InotifySubscription&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (21,760,709 samples, 0.02%)</title><rect x="93.2" y="1605" width="0.3" height="15.0" fill="rgb(215,203,53)" rx="2" ry="2" />
<text  x="96.18" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="501" width="18.3" height="15.0" fill="rgb(225,31,29)" rx="2" ry="2" />
<text  x="113.16" y="511.5" ></text>
</g>
<g >
<title>luaL_pushresult (86,909,602 samples, 0.10%)</title><rect x="684.6" y="1621" width="1.1" height="15.0" fill="rgb(217,88,50)" rx="2" ry="2" />
<text  x="687.59" y="1631.5" ></text>
</g>
<g >
<title>[systemd-networkd] (7,719,600 samples, 0.01%)</title><rect x="653.9" y="1653" width="0.1" height="15.0" fill="rgb(213,123,6)" rx="2" ry="2" />
<text  x="656.90" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="437" width="0.4" height="15.0" fill="rgb(245,32,11)" rx="2" ry="2" />
<text  x="56.88" y="447.5" ></text>
</g>
<g >
<title>_int_free (12,274,057 samples, 0.01%)</title><rect x="751.8" y="1509" width="0.2" height="15.0" fill="rgb(242,91,16)" rx="2" ry="2" />
<text  x="754.85" y="1519.5" ></text>
</g>
<g >
<title>do_IRQ (33,097,914 samples, 0.04%)</title><rect x="893.7" y="1445" width="0.5" height="15.0" fill="rgb(213,122,13)" rx="2" ry="2" />
<text  x="896.74" y="1455.5" ></text>
</g>
<g >
<title>nf_hook_slow (208,529,543 samples, 0.23%)</title><rect x="1172.8" y="997" width="2.8" height="15.0" fill="rgb(205,152,32)" rx="2" ry="2" />
<text  x="1175.85" y="1007.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (58,698,554 samples, 0.07%)</title><rect x="555.8" y="1029" width="0.8" height="15.0" fill="rgb(231,60,1)" rx="2" ry="2" />
<text  x="558.78" y="1039.5" ></text>
</g>
<g >
<title>__schedule (11,202,052 samples, 0.01%)</title><rect x="45.0" y="1589" width="0.1" height="15.0" fill="rgb(208,12,7)" rx="2" ry="2" />
<text  x="47.96" y="1599.5" ></text>
</g>
<g >
<title>__br_forward (30,602,494 samples, 0.03%)</title><rect x="741.9" y="1077" width="0.4" height="15.0" fill="rgb(219,56,34)" rx="2" ry="2" />
<text  x="744.86" y="1087.5" ></text>
</g>
<g >
<title>inc_zone_page_state (12,501,934 samples, 0.01%)</title><rect x="20.4" y="1461" width="0.1" height="15.0" fill="rgb(209,201,17)" rx="2" ry="2" />
<text  x="23.37" y="1471.5" ></text>
</g>
<g >
<title>lj_BC_CALLM (64,668,812 samples, 0.07%)</title><rect x="754.3" y="1541" width="0.9" height="15.0" fill="rgb(239,148,30)" rx="2" ry="2" />
<text  x="757.34" y="1551.5" ></text>
</g>
<g >
<title>blk_mq_make_request (210,271,319 samples, 0.24%)</title><rect x="34.1" y="1445" width="2.8" height="15.0" fill="rgb(206,213,3)" rx="2" ry="2" />
<text  x="37.12" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1253" width="0.3" height="15.0" fill="rgb(219,128,10)" rx="2" ry="2" />
<text  x="102.79" y="1263.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (209,372,849 samples, 0.23%)</title><rect x="733.5" y="725" width="2.8" height="15.0" fill="rgb(216,146,44)" rx="2" ry="2" />
<text  x="736.50" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="965" width="0.3" height="15.0" fill="rgb(229,26,1)" rx="2" ry="2" />
<text  x="102.79" y="975.5" ></text>
</g>
<g >
<title>br_dev_queue_push_xmit (120,626,539 samples, 0.14%)</title><rect x="1177.5" y="1029" width="1.6" height="15.0" fill="rgb(254,150,50)" rx="2" ry="2" />
<text  x="1180.55" y="1039.5" ></text>
</g>
<g >
<title>kthread (260,328,569 samples, 0.29%)</title><rect x="40.9" y="1637" width="3.5" height="15.0" fill="rgb(231,204,41)" rx="2" ry="2" />
<text  x="43.93" y="1647.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (16,770,497 samples, 0.02%)</title><rect x="678.6" y="1589" width="0.2" height="15.0" fill="rgb(240,25,0)" rx="2" ry="2" />
<text  x="681.58" y="1599.5" ></text>
</g>
<g >
<title>__GI__IO_default_xsputn (42,658,676 samples, 0.05%)</title><rect x="679.7" y="1573" width="0.5" height="15.0" fill="rgb(218,54,22)" rx="2" ry="2" />
<text  x="682.65" y="1583.5" ></text>
</g>
<g >
<title>hash_conntrack_raw (8,497,187 samples, 0.01%)</title><rect x="573.4" y="1349" width="0.1" height="15.0" fill="rgb(233,77,19)" rx="2" ry="2" />
<text  x="576.41" y="1359.5" ></text>
</g>
<g >
<title>rb_next (19,457,119 samples, 0.02%)</title><rect x="164.5" y="1205" width="0.2" height="15.0" fill="rgb(224,170,40)" rx="2" ry="2" />
<text  x="167.46" y="1215.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (89,575,983 samples, 0.10%)</title><rect x="536.5" y="1093" width="1.2" height="15.0" fill="rgb(236,153,19)" rx="2" ry="2" />
<text  x="539.48" y="1103.5" ></text>
</g>
<g >
<title>jbd2_journal_submit_inode_data_buffers (1,794,954,312 samples, 2.01%)</title><rect x="16.5" y="1573" width="23.8" height="15.0" fill="rgb(231,219,6)" rx="2" ry="2" />
<text  x="19.50" y="1583.5" >j..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1557" width="3.6" height="15.0" fill="rgb(206,40,34)" rx="2" ry="2" />
<text  x="109.59" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,821,443 samples, 0.01%)</title><rect x="110.0" y="165" width="0.2" height="15.0" fill="rgb(235,188,51)" rx="2" ry="2" />
<text  x="113.02" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,448,485 samples, 0.55%)</title><rect x="100.1" y="821" width="6.5" height="15.0" fill="rgb(207,97,3)" rx="2" ry="2" />
<text  x="103.13" y="831.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (957,668,727 samples, 1.07%)</title><rect x="545.4" y="1253" width="12.6" height="15.0" fill="rgb(210,186,43)" rx="2" ry="2" />
<text  x="548.36" y="1263.5" ></text>
</g>
<g >
<title>tcp_data_ready (62,081,775 samples, 0.07%)</title><rect x="555.7" y="1077" width="0.9" height="15.0" fill="rgb(213,5,27)" rx="2" ry="2" />
<text  x="558.73" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="581" width="1.4" height="15.0" fill="rgb(209,93,6)" rx="2" ry="2" />
<text  x="100.15" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (21,030,666 samples, 0.02%)</title><rect x="53.6" y="165" width="0.3" height="15.0" fill="rgb(225,172,42)" rx="2" ry="2" />
<text  x="56.60" y="175.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (247,596,648 samples, 0.28%)</title><rect x="247.0" y="1509" width="3.3" height="15.0" fill="rgb(226,84,7)" rx="2" ry="2" />
<text  x="250.00" y="1519.5" ></text>
</g>
<g >
<title>node::InternalMakeCallback (8,096,151 samples, 0.01%)</title><rect x="133.2" y="1541" width="0.1" height="15.0" fill="rgb(229,85,10)" rx="2" ry="2" />
<text  x="136.15" y="1551.5" ></text>
</g>
<g >
<title>ip_rcv_finish (57,858,845 samples, 0.06%)</title><rect x="42.1" y="1285" width="0.8" height="15.0" fill="rgb(250,0,15)" rx="2" ry="2" />
<text  x="45.11" y="1295.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (10,761,620 samples, 0.01%)</title><rect x="742.6" y="997" width="0.1" height="15.0" fill="rgb(254,133,45)" rx="2" ry="2" />
<text  x="745.59" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (83,828,189 samples, 0.09%)</title><rect x="73.4" y="805" width="1.1" height="15.0" fill="rgb(233,113,12)" rx="2" ry="2" />
<text  x="76.44" y="815.5" ></text>
</g>
<g >
<title>arch_irq_work_raise (12,461,742 samples, 0.01%)</title><rect x="709.7" y="1301" width="0.2" height="15.0" fill="rgb(225,35,29)" rx="2" ry="2" />
<text  x="712.69" y="1311.5" ></text>
</g>
<g >
<title>br_forward (8,836,650 samples, 0.01%)</title><rect x="41.4" y="1381" width="0.1" height="15.0" fill="rgb(211,39,40)" rx="2" ry="2" />
<text  x="44.38" y="1391.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (13,997,812 samples, 0.02%)</title><rect x="71.8" y="645" width="0.2" height="15.0" fill="rgb(216,26,52)" rx="2" ry="2" />
<text  x="74.83" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,173,115,331 samples, 2.44%)</title><rect x="99.8" y="1637" width="28.7" height="15.0" fill="rgb(217,57,26)" rx="2" ry="2" />
<text  x="102.79" y="1647.5" >st..</text>
</g>
<g >
<title>kjournald2 (1,800,516,281 samples, 2.02%)</title><rect x="16.5" y="1621" width="23.8" height="15.0" fill="rgb(207,95,53)" rx="2" ry="2" />
<text  x="19.45" y="1631.5" >k..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1605" width="3.0" height="15.0" fill="rgb(211,165,50)" rx="2" ry="2" />
<text  x="131.55" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1557" width="18.3" height="15.0" fill="rgb(231,100,15)" rx="2" ry="2" />
<text  x="113.16" y="1567.5" ></text>
</g>
<g >
<title>__block_commit_write.isra.0 (9,188,951 samples, 0.01%)</title><rect x="215.8" y="1285" width="0.1" height="15.0" fill="rgb(222,228,41)" rx="2" ry="2" />
<text  x="218.82" y="1295.5" ></text>
</g>
<g >
<title>__wt_evict_thread_run (9,585,215 samples, 0.01%)</title><rect x="47.7" y="1605" width="0.2" height="15.0" fill="rgb(228,87,48)" rx="2" ry="2" />
<text  x="50.74" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,318,551 samples, 0.04%)</title><rect x="53.9" y="405" width="0.4" height="15.0" fill="rgb(227,160,48)" rx="2" ry="2" />
<text  x="56.88" y="415.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (53,327,238 samples, 0.06%)</title><rect x="727.6" y="1301" width="0.7" height="15.0" fill="rgb(246,57,31)" rx="2" ry="2" />
<text  x="730.61" y="1311.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (563,727,871 samples, 0.63%)</title><rect x="525.6" y="1397" width="7.4" height="15.0" fill="rgb(205,152,3)" rx="2" ry="2" />
<text  x="528.56" y="1407.5" ></text>
</g>
<g >
<title>ipt_do_table (69,902,836 samples, 0.08%)</title><rect x="1173.0" y="965" width="0.9" height="15.0" fill="rgb(233,222,32)" rx="2" ry="2" />
<text  x="1176.01" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,795,906,165 samples, 2.01%)</title><rect x="59.0" y="1285" width="23.8" height="15.0" fill="rgb(245,70,23)" rx="2" ry="2" />
<text  x="62.04" y="1295.5" >s..</text>
</g>
<g >
<title>__perf_mmap__read_init (10,785,311 samples, 0.01%)</title><rect x="141.9" y="1541" width="0.2" height="15.0" fill="rgb(227,110,38)" rx="2" ry="2" />
<text  x="144.92" y="1551.5" ></text>
</g>
<g >
<title>ret_from_fork (17,308,974 samples, 0.02%)</title><rect x="40.5" y="1653" width="0.2" height="15.0" fill="rgb(243,157,38)" rx="2" ry="2" />
<text  x="43.52" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="837" width="0.8" height="15.0" fill="rgb(235,97,20)" rx="2" ry="2" />
<text  x="101.56" y="847.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (21,764,683 samples, 0.02%)</title><rect x="239.6" y="1317" width="0.3" height="15.0" fill="rgb(247,112,16)" rx="2" ry="2" />
<text  x="242.57" y="1327.5" ></text>
</g>
<g >
<title>jbd2__journal_start (201,186,665 samples, 0.23%)</title><rect x="150.9" y="1269" width="2.6" height="15.0" fill="rgb(239,130,13)" rx="2" ry="2" />
<text  x="153.88" y="1279.5" ></text>
</g>
<g >
<title>__wake_up (73,991,793 samples, 0.08%)</title><rect x="216.9" y="1253" width="1.0" height="15.0" fill="rgb(232,79,36)" rx="2" ry="2" />
<text  x="219.90" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1205" width="0.9" height="15.0" fill="rgb(212,212,35)" rx="2" ry="2" />
<text  x="134.54" y="1215.5" ></text>
</g>
<g >
<title>__netif_receive_skb (179,247,832 samples, 0.20%)</title><rect x="41.6" y="1541" width="2.4" height="15.0" fill="rgb(225,203,6)" rx="2" ry="2" />
<text  x="44.59" y="1551.5" ></text>
</g>
<g >
<title>netif_skb_features (8,257,351 samples, 0.01%)</title><rect x="537.4" y="1061" width="0.1" height="15.0" fill="rgb(249,168,54)" rx="2" ry="2" />
<text  x="540.43" y="1071.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (303,344,026 samples, 0.34%)</title><rect x="547.6" y="1077" width="4.1" height="15.0" fill="rgb(207,17,18)" rx="2" ry="2" />
<text  x="550.64" y="1087.5" ></text>
</g>
<g >
<title>lj_str_resize (249,143,572 samples, 0.28%)</title><rect x="894.4" y="1477" width="3.3" height="15.0" fill="rgb(206,177,25)" rx="2" ry="2" />
<text  x="897.41" y="1487.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (3,820,230,231 samples, 4.28%)</title><rect x="1132.3" y="1237" width="50.6" height="15.0" fill="rgb(205,215,36)" rx="2" ry="2" />
<text  x="1135.34" y="1247.5" >__ip_..</text>
</g>
<g >
<title>_int_free (7,605,799 samples, 0.01%)</title><rect x="663.4" y="1637" width="0.1" height="15.0" fill="rgb(248,75,45)" rx="2" ry="2" />
<text  x="666.37" y="1647.5" ></text>
</g>
<g >
<title>xas_load (26,248,305 samples, 0.03%)</title><rect x="208.1" y="1205" width="0.3" height="15.0" fill="rgb(221,132,39)" rx="2" ry="2" />
<text  x="211.10" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::_M_default_append (10,592,036 samples, 0.01%)</title><rect x="86.8" y="1541" width="0.1" height="15.0" fill="rgb(232,142,3)" rx="2" ry="2" />
<text  x="89.80" y="1551.5" ></text>
</g>
<g >
<title>__udp4_lib_rcv (127,163,560 samples, 0.14%)</title><rect x="528.0" y="1269" width="1.7" height="15.0" fill="rgb(228,118,41)" rx="2" ry="2" />
<text  x="530.98" y="1279.5" ></text>
</g>
<g >
<title>sock_write_iter (4,574,411,330 samples, 5.13%)</title><rect x="1125.6" y="1397" width="60.5" height="15.0" fill="rgb(205,39,4)" rx="2" ry="2" />
<text  x="1128.61" y="1407.5" >sock_w..</text>
</g>
<g >
<title>mempool_free_slab (76,145,677 samples, 0.09%)</title><rect x="513.4" y="1285" width="1.0" height="15.0" fill="rgb(237,37,19)" rx="2" ry="2" />
<text  x="516.36" y="1295.5" ></text>
</g>
<g >
<title>_int_malloc (12,768,786 samples, 0.01%)</title><rect x="99.6" y="1637" width="0.1" height="15.0" fill="rgb(212,14,5)" rx="2" ry="2" />
<text  x="102.57" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1141" width="0.9" height="15.0" fill="rgb(216,90,41)" rx="2" ry="2" />
<text  x="134.54" y="1151.5" ></text>
</g>
<g >
<title>string_quote_removal (9,130,931 samples, 0.01%)</title><rect x="10.8" y="1077" width="0.1" height="15.0" fill="rgb(228,60,6)" rx="2" ry="2" />
<text  x="13.80" y="1087.5" ></text>
</g>
<g >
<title>br_forward_finish (203,033,601 samples, 0.23%)</title><rect x="542.2" y="1221" width="2.7" height="15.0" fill="rgb(214,202,19)" rx="2" ry="2" />
<text  x="545.17" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,318,551 samples, 0.04%)</title><rect x="53.9" y="469" width="0.4" height="15.0" fill="rgb(220,187,44)" rx="2" ry="2" />
<text  x="56.88" y="479.5" ></text>
</g>
<g >
<title>dev_queue_xmit (240,596,529 samples, 0.27%)</title><rect x="1153.1" y="549" width="3.2" height="15.0" fill="rgb(244,1,38)" rx="2" ry="2" />
<text  x="1156.14" y="559.5" ></text>
</g>
<g >
<title>nf_nat_packet (9,526,955 samples, 0.01%)</title><rect x="738.4" y="821" width="0.1" height="15.0" fill="rgb(249,199,41)" rx="2" ry="2" />
<text  x="741.38" y="831.5" ></text>
</g>
<g >
<title>ip_output (45,925,125 samples, 0.05%)</title><rect x="568.5" y="1285" width="0.6" height="15.0" fill="rgb(217,59,29)" rx="2" ry="2" />
<text  x="571.46" y="1295.5" ></text>
</g>
<g >
<title>jbd2_journal_file_inode (13,759,799 samples, 0.02%)</title><rect x="192.5" y="1205" width="0.2" height="15.0" fill="rgb(233,209,20)" rx="2" ry="2" />
<text  x="195.51" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="629" width="0.8" height="15.0" fill="rgb(214,98,47)" rx="2" ry="2" />
<text  x="101.56" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (87,226,778 samples, 0.10%)</title><rect x="106.6" y="85" width="1.1" height="15.0" fill="rgb(238,227,24)" rx="2" ry="2" />
<text  x="109.59" y="95.5" ></text>
</g>
<g >
<title>__GI___printf_fp_l (542,340,699 samples, 0.61%)</title><rect x="1107.1" y="1445" width="7.1" height="15.0" fill="rgb(205,81,21)" rx="2" ry="2" />
<text  x="1110.05" y="1455.5" ></text>
</g>
<g >
<title>newidle_balance (39,851,439 samples, 0.04%)</title><rect x="711.8" y="1397" width="0.5" height="15.0" fill="rgb(237,151,11)" rx="2" ry="2" />
<text  x="714.80" y="1407.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (11,769,241 samples, 0.01%)</title><rect x="1178.5" y="917" width="0.1" height="15.0" fill="rgb(234,46,34)" rx="2" ry="2" />
<text  x="1181.48" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1333" width="1.4" height="15.0" fill="rgb(250,148,5)" rx="2" ry="2" />
<text  x="100.15" y="1343.5" ></text>
</g>
<g >
<title>vxlan_rcv (72,034,520 samples, 0.08%)</title><rect x="528.6" y="1205" width="0.9" height="15.0" fill="rgb(215,123,37)" rx="2" ry="2" />
<text  x="531.59" y="1215.5" ></text>
</g>
<g >
<title>perf_mmap__consume (7,761,820 samples, 0.01%)</title><rect x="141.6" y="1557" width="0.1" height="15.0" fill="rgb(236,107,44)" rx="2" ry="2" />
<text  x="144.61" y="1567.5" ></text>
</g>
<g >
<title>load_balance (7,680,075 samples, 0.01%)</title><rect x="650.6" y="1381" width="0.1" height="15.0" fill="rgb(253,53,29)" rx="2" ry="2" />
<text  x="653.57" y="1391.5" ></text>
</g>
<g >
<title>ksoftirqd/3 (262,759,842 samples, 0.29%)</title><rect x="40.9" y="1669" width="3.5" height="15.0" fill="rgb(238,30,54)" rx="2" ry="2" />
<text  x="43.89" y="1679.5" ></text>
</g>
<g >
<title>ktime_get (7,815,188 samples, 0.01%)</title><rect x="506.6" y="1509" width="0.1" height="15.0" fill="rgb(240,199,15)" rx="2" ry="2" />
<text  x="509.57" y="1519.5" ></text>
</g>
<g >
<title>rb_insert_color (7,819,693 samples, 0.01%)</title><rect x="1184.0" y="1253" width="0.1" height="15.0" fill="rgb(252,148,1)" rx="2" ry="2" />
<text  x="1186.98" y="1263.5" ></text>
</g>
<g >
<title>mark_tg (7,876,711 samples, 0.01%)</title><rect x="1173.9" y="965" width="0.1" height="15.0" fill="rgb(218,88,40)" rx="2" ry="2" />
<text  x="1176.93" y="975.5" ></text>
</g>
<g >
<title>__br_forward (260,104,953 samples, 0.29%)</title><rect x="733.1" y="917" width="3.4" height="15.0" fill="rgb(231,45,26)" rx="2" ry="2" />
<text  x="736.08" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="597" width="6.5" height="15.0" fill="rgb(230,65,14)" rx="2" ry="2" />
<text  x="103.13" y="607.5" ></text>
</g>
<g >
<title>bnx2_poll_msix (10,020,882 samples, 0.01%)</title><rect x="518.0" y="1477" width="0.2" height="15.0" fill="rgb(237,148,12)" rx="2" ry="2" />
<text  x="521.04" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,375,863,330 samples, 1.54%)</title><rect x="110.2" y="181" width="18.2" height="15.0" fill="rgb(242,162,54)" rx="2" ry="2" />
<text  x="113.16" y="191.5" ></text>
</g>
<g >
<title>process_backlog (10,644,494 samples, 0.01%)</title><rect x="40.3" y="1557" width="0.1" height="15.0" fill="rgb(232,162,9)" rx="2" ry="2" />
<text  x="43.29" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="821" width="0.9" height="15.0" fill="rgb(236,99,49)" rx="2" ry="2" />
<text  x="134.54" y="831.5" ></text>
</g>
<g >
<title>__mod_memcg_state (9,513,078 samples, 0.01%)</title><rect x="222.1" y="1189" width="0.1" height="15.0" fill="rgb(241,225,13)" rx="2" ry="2" />
<text  x="225.09" y="1199.5" ></text>
</g>
<g >
<title>Builtins_ObjectKeys (10,723,034 samples, 0.01%)</title><rect x="52.8" y="1637" width="0.2" height="15.0" fill="rgb(221,97,36)" rx="2" ry="2" />
<text  x="55.83" y="1647.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (16,154,179 samples, 0.02%)</title><rect x="86.1" y="1413" width="0.2" height="15.0" fill="rgb(224,15,35)" rx="2" ry="2" />
<text  x="89.11" y="1423.5" ></text>
</g>
<g >
<title>__kfree_skb (54,728,727 samples, 0.06%)</title><rect x="552.6" y="1045" width="0.8" height="15.0" fill="rgb(209,24,42)" rx="2" ry="2" />
<text  x="555.63" y="1055.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (317,376,769 samples, 0.36%)</title><rect x="1176.2" y="1125" width="4.2" height="15.0" fill="rgb(210,21,42)" rx="2" ry="2" />
<text  x="1179.16" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (957,297,474 samples, 1.07%)</title><rect x="60.8" y="805" width="12.6" height="15.0" fill="rgb(231,155,34)" rx="2" ry="2" />
<text  x="63.77" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="373" width="0.4" height="15.0" fill="rgb(227,211,18)" rx="2" ry="2" />
<text  x="56.88" y="383.5" ></text>
</g>
<g >
<title>__kfree_skb (70,203,743 samples, 0.08%)</title><rect x="726.2" y="1333" width="1.0" height="15.0" fill="rgb(238,23,35)" rx="2" ry="2" />
<text  x="729.23" y="1343.5" ></text>
</g>
<g >
<title>nf_conntrack_in (29,102,535 samples, 0.03%)</title><rect x="548.6" y="917" width="0.4" height="15.0" fill="rgb(252,7,47)" rx="2" ry="2" />
<text  x="551.59" y="927.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_page (7,666,447 samples, 0.01%)</title><rect x="157.8" y="1253" width="0.1" height="15.0" fill="rgb(254,36,26)" rx="2" ry="2" />
<text  x="160.80" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (141,790,146 samples, 0.16%)</title><rect x="129.6" y="133" width="1.9" height="15.0" fill="rgb(227,227,17)" rx="2" ry="2" />
<text  x="132.61" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,318,551 samples, 0.04%)</title><rect x="53.9" y="341" width="0.4" height="15.0" fill="rgb(242,191,24)" rx="2" ry="2" />
<text  x="56.88" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,830,167 samples, 0.12%)</title><rect x="105.0" y="133" width="1.4" height="15.0" fill="rgb(214,197,10)" rx="2" ry="2" />
<text  x="108.00" y="143.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (18,085,938 samples, 0.02%)</title><rect x="132.6" y="1509" width="0.2" height="15.0" fill="rgb(239,136,8)" rx="2" ry="2" />
<text  x="135.58" y="1519.5" ></text>
</g>
<g >
<title>[sshd] (8,740,263 samples, 0.01%)</title><rect x="242.0" y="1557" width="0.1" height="15.0" fill="rgb(235,63,19)" rx="2" ry="2" />
<text  x="245.02" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1397" width="1.4" height="15.0" fill="rgb(236,128,3)" rx="2" ry="2" />
<text  x="100.15" y="1407.5" ></text>
</g>
<g >
<title>br_nf_pre_routing_finish (283,442,477 samples, 0.32%)</title><rect x="732.8" y="981" width="3.8" height="15.0" fill="rgb(225,68,27)" rx="2" ry="2" />
<text  x="735.81" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="709" width="0.4" height="15.0" fill="rgb(236,166,19)" rx="2" ry="2" />
<text  x="56.88" y="719.5" ></text>
</g>
<g >
<title>inode_permission (22,036,518 samples, 0.02%)</title><rect x="88.9" y="1429" width="0.3" height="15.0" fill="rgb(247,117,14)" rx="2" ry="2" />
<text  x="91.91" y="1439.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/vendor/github.com/hashicorp/memberlist.(*Memberlist).handleCommand (8,519,267 samples, 0.01%)</title><rect x="12.4" y="1589" width="0.1" height="15.0" fill="rgb(254,206,53)" rx="2" ry="2" />
<text  x="15.38" y="1599.5" ></text>
</g>
<g >
<title>ip_finish_output (124,171,393 samples, 0.14%)</title><rect x="562.5" y="1333" width="1.6" height="15.0" fill="rgb(218,81,53)" rx="2" ry="2" />
<text  x="565.48" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,690,755,502 samples, 1.90%)</title><rect x="59.3" y="1221" width="22.4" height="15.0" fill="rgb(214,11,8)" rx="2" ry="2" />
<text  x="62.30" y="1231.5" >s..</text>
</g>
<g >
<title>perf_pmu_disable.part.0 (9,394,781 samples, 0.01%)</title><rect x="591.2" y="1509" width="0.1" height="15.0" fill="rgb(231,88,39)" rx="2" ry="2" />
<text  x="594.18" y="1519.5" ></text>
</g>
<g >
<title>__netif_receive_skb (10,480,295 samples, 0.01%)</title><rect x="40.3" y="1541" width="0.1" height="15.0" fill="rgb(232,76,53)" rx="2" ry="2" />
<text  x="43.29" y="1551.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (142,999,739 samples, 0.16%)</title><rect x="586.1" y="1525" width="1.9" height="15.0" fill="rgb(211,27,40)" rx="2" ry="2" />
<text  x="589.08" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_read (105,810,321 samples, 0.12%)</title><rect x="95.6" y="1557" width="1.4" height="15.0" fill="rgb(225,137,31)" rx="2" ry="2" />
<text  x="98.56" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,184,852 samples, 0.01%)</title><rect x="97.2" y="181" width="0.1" height="15.0" fill="rgb(223,179,40)" rx="2" ry="2" />
<text  x="100.15" y="191.5" ></text>
</g>
<g >
<title>ll_back_merge_fn (18,342,566 samples, 0.02%)</title><rect x="35.4" y="1397" width="0.2" height="15.0" fill="rgb(240,213,49)" rx="2" ry="2" />
<text  x="38.37" y="1407.5" ></text>
</g>
<g >
<title>[perf-11646.map] (64,345,789 samples, 0.07%)</title><rect x="50.8" y="1653" width="0.8" height="15.0" fill="rgb(213,142,1)" rx="2" ry="2" />
<text  x="53.77" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1525" width="0.8" height="15.0" fill="rgb(229,130,1)" rx="2" ry="2" />
<text  x="101.56" y="1535.5" ></text>
</g>
<g >
<title>neigh_resolve_output (19,644,207 samples, 0.02%)</title><rect x="1163.9" y="821" width="0.3" height="15.0" fill="rgb(241,90,47)" rx="2" ry="2" />
<text  x="1166.93" y="831.5" ></text>
</g>
<g >
<title>__skb_checksum (36,822,371 samples, 0.04%)</title><rect x="1155.7" y="421" width="0.5" height="15.0" fill="rgb(226,215,53)" rx="2" ry="2" />
<text  x="1158.69" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (19,285,138 samples, 0.02%)</title><rect x="99.9" y="133" width="0.2" height="15.0" fill="rgb(207,121,7)" rx="2" ry="2" />
<text  x="102.88" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (88,909,564 samples, 0.10%)</title><rect x="78.1" y="1061" width="1.2" height="15.0" fill="rgb(215,108,18)" rx="2" ry="2" />
<text  x="81.11" y="1071.5" ></text>
</g>
<g >
<title>string_quote_removal (8,748,644 samples, 0.01%)</title><rect x="10.6" y="1269" width="0.2" height="15.0" fill="rgb(213,192,35)" rx="2" ry="2" />
<text  x="13.64" y="1279.5" ></text>
</g>
<g >
<title>default_send_IPI_mask_sequence_phys (24,442,687 samples, 0.03%)</title><rect x="602.5" y="1253" width="0.4" height="15.0" fill="rgb(215,57,53)" rx="2" ry="2" />
<text  x="605.54" y="1263.5" ></text>
</g>
<g >
<title>__dev_kfree_skb_any (57,743,945 samples, 0.06%)</title><rect x="519.9" y="1429" width="0.7" height="15.0" fill="rgb(232,202,1)" rx="2" ry="2" />
<text  x="522.87" y="1439.5" ></text>
</g>
<g >
<title>__GI__IO_default_xsputn (35,954,570 samples, 0.04%)</title><rect x="679.7" y="1557" width="0.5" height="15.0" fill="rgb(221,68,33)" rx="2" ry="2" />
<text  x="682.74" y="1567.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_manip_pkt (10,359,455 samples, 0.01%)</title><rect x="731.5" y="1109" width="0.1" height="15.0" fill="rgb(244,157,50)" rx="2" ry="2" />
<text  x="734.48" y="1119.5" ></text>
</g>
<g >
<title>execute_command_internal (11,351,520 samples, 0.01%)</title><rect x="10.6" y="1397" width="0.2" height="15.0" fill="rgb(223,193,11)" rx="2" ry="2" />
<text  x="13.64" y="1407.5" ></text>
</g>
<g >
<title>br_nf_post_routing (23,997,224 samples, 0.03%)</title><rect x="41.7" y="1285" width="0.3" height="15.0" fill="rgb(244,183,48)" rx="2" ry="2" />
<text  x="44.73" y="1295.5" ></text>
</g>
<g >
<title>sock_write (4,834,488,485 samples, 5.42%)</title><rect x="1123.2" y="1557" width="63.9" height="15.0" fill="rgb(232,108,39)" rx="2" ry="2" />
<text  x="1126.15" y="1567.5" >sock_wr..</text>
</g>
<g >
<title>memset (11,647,412 samples, 0.01%)</title><rect x="522.5" y="1413" width="0.2" height="15.0" fill="rgb(236,124,54)" rx="2" ry="2" />
<text  x="525.50" y="1423.5" ></text>
</g>
<g >
<title>ip_vs_remote_request4 (660,167,254 samples, 0.74%)</title><rect x="1160.4" y="949" width="8.8" height="15.0" fill="rgb(240,117,54)" rx="2" ry="2" />
<text  x="1163.44" y="959.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (9,730,386 samples, 0.01%)</title><rect x="99.2" y="117" width="0.1" height="15.0" fill="rgb(250,49,54)" rx="2" ry="2" />
<text  x="102.21" y="127.5" ></text>
</g>
<g >
<title>ksys_read (28,048,894 samples, 0.03%)</title><rect x="14.5" y="1557" width="0.4" height="15.0" fill="rgb(252,135,27)" rx="2" ry="2" />
<text  x="17.53" y="1567.5" ></text>
</g>
<g >
<title>ip_rcv (59,165,117 samples, 0.07%)</title><rect x="251.9" y="1413" width="0.8" height="15.0" fill="rgb(232,157,28)" rx="2" ry="2" />
<text  x="254.89" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="293" width="0.4" height="15.0" fill="rgb(226,34,44)" rx="2" ry="2" />
<text  x="56.54" y="303.5" ></text>
</g>
<g >
<title>xas_load (37,531,700 samples, 0.04%)</title><rect x="220.4" y="1205" width="0.5" height="15.0" fill="rgb(231,211,43)" rx="2" ry="2" />
<text  x="223.43" y="1215.5" ></text>
</g>
<g >
<title>skb_csum_hwoffload_help (9,184,847 samples, 0.01%)</title><rect x="735.6" y="485" width="0.1" height="15.0" fill="rgb(244,129,39)" rx="2" ry="2" />
<text  x="738.60" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="325" width="3.6" height="15.0" fill="rgb(208,176,14)" rx="2" ry="2" />
<text  x="109.59" y="335.5" ></text>
</g>
<g >
<title>ep_modify (51,933,163 samples, 0.06%)</title><rect x="749.6" y="1477" width="0.7" height="15.0" fill="rgb(248,57,46)" rx="2" ry="2" />
<text  x="752.63" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="597" width="18.3" height="15.0" fill="rgb(212,146,47)" rx="2" ry="2" />
<text  x="113.16" y="607.5" ></text>
</g>
<g >
<title>dequeue_entity (112,837,507 samples, 0.13%)</title><rect x="708.4" y="1381" width="1.5" height="15.0" fill="rgb(218,164,36)" rx="2" ry="2" />
<text  x="711.44" y="1391.5" ></text>
</g>
<g >
<title>ret_from_intr (5,206,431,924 samples, 5.84%)</title><rect x="507.8" y="1541" width="68.9" height="15.0" fill="rgb(223,82,50)" rx="2" ry="2" />
<text  x="510.82" y="1551.5" >ret_fro..</text>
</g>
<g >
<title>__softirqentry_text_start (9,429,970 samples, 0.01%)</title><rect x="980.7" y="1413" width="0.1" height="15.0" fill="rgb(235,41,4)" rx="2" ry="2" />
<text  x="983.69" y="1423.5" ></text>
</g>
<g >
<title>skb_ext_add (21,990,785 samples, 0.02%)</title><rect x="1158.9" y="965" width="0.3" height="15.0" fill="rgb(207,204,23)" rx="2" ry="2" />
<text  x="1161.93" y="975.5" ></text>
</g>
<g >
<title>alloc_buffer_head (8,987,925 samples, 0.01%)</title><rect x="154.3" y="1269" width="0.1" height="15.0" fill="rgb(221,166,8)" rx="2" ry="2" />
<text  x="157.27" y="1279.5" ></text>
</g>
<g >
<title>get_page_from_freelist (9,047,664 samples, 0.01%)</title><rect x="1128.5" y="1253" width="0.1" height="15.0" fill="rgb(233,48,18)" rx="2" ry="2" />
<text  x="1131.51" y="1263.5" ></text>
</g>
<g >
<title>br_dev_xmit (45,685,696 samples, 0.05%)</title><rect x="1180.5" y="1077" width="0.6" height="15.0" fill="rgb(250,139,9)" rx="2" ry="2" />
<text  x="1183.54" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1173" width="3.6" height="15.0" fill="rgb(231,40,23)" rx="2" ry="2" />
<text  x="109.59" y="1183.5" ></text>
</g>
<g >
<title>__GI_epoll_ctl (113,815,091 samples, 0.13%)</title><rect x="699.2" y="1541" width="1.5" height="15.0" fill="rgb(247,137,18)" rx="2" ry="2" />
<text  x="702.23" y="1551.5" ></text>
</g>
<g >
<title>__xa_clear_mark (18,110,768 samples, 0.02%)</title><rect x="516.6" y="1301" width="0.3" height="15.0" fill="rgb(240,64,36)" rx="2" ry="2" />
<text  x="519.64" y="1311.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/vendor/github.com/hashicorp/memberlist.(*Memberlist).sendUserMsg (7,773,913 samples, 0.01%)</title><rect x="12.2" y="1509" width="0.1" height="15.0" fill="rgb(226,174,46)" rx="2" ry="2" />
<text  x="15.15" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1461" width="3.6" height="15.0" fill="rgb(209,149,34)" rx="2" ry="2" />
<text  x="109.59" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1333" width="0.9" height="15.0" fill="rgb(226,210,1)" rx="2" ry="2" />
<text  x="134.54" y="1343.5" ></text>
</g>
<g >
<title>__mpn_mul_1 (9,450,328 samples, 0.01%)</title><rect x="1114.1" y="1413" width="0.1" height="15.0" fill="rgb(240,101,19)" rx="2" ry="2" />
<text  x="1117.05" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,318,551 samples, 0.04%)</title><rect x="53.9" y="661" width="0.4" height="15.0" fill="rgb(224,113,36)" rx="2" ry="2" />
<text  x="56.88" y="671.5" ></text>
</g>
<g >
<title>__fdget (20,988,110 samples, 0.02%)</title><rect x="699.8" y="1477" width="0.2" height="15.0" fill="rgb(227,89,51)" rx="2" ry="2" />
<text  x="702.77" y="1487.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (75,922,975 samples, 0.09%)</title><rect x="704.1" y="1445" width="1.0" height="15.0" fill="rgb(254,199,13)" rx="2" ry="2" />
<text  x="707.09" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1189" width="0.9" height="15.0" fill="rgb(225,121,4)" rx="2" ry="2" />
<text  x="134.54" y="1199.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (47,971,924 samples, 0.05%)</title><rect x="1154.6" y="501" width="0.6" height="15.0" fill="rgb(226,39,14)" rx="2" ry="2" />
<text  x="1157.60" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1429" width="0.4" height="15.0" fill="rgb(213,168,39)" rx="2" ry="2" />
<text  x="56.88" y="1439.5" ></text>
</g>
<g >
<title>ext4_writepage (1,600,456,569 samples, 1.79%)</title><rect x="17.3" y="1509" width="21.2" height="15.0" fill="rgb(233,202,18)" rx="2" ry="2" />
<text  x="20.30" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="901" width="3.6" height="15.0" fill="rgb(219,165,27)" rx="2" ry="2" />
<text  x="109.59" y="911.5" ></text>
</g>
<g >
<title>wake_up_process (11,611,739 samples, 0.01%)</title><rect x="253.9" y="1301" width="0.2" height="15.0" fill="rgb(222,152,45)" rx="2" ry="2" />
<text  x="256.94" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="693" width="0.4" height="15.0" fill="rgb(227,109,49)" rx="2" ry="2" />
<text  x="56.54" y="703.5" ></text>
</g>
<g >
<title>lj_str_new (43,558,810 samples, 0.05%)</title><rect x="685.1" y="1573" width="0.6" height="15.0" fill="rgb(211,66,40)" rx="2" ry="2" />
<text  x="688.08" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="933" width="18.3" height="15.0" fill="rgb(241,40,54)" rx="2" ry="2" />
<text  x="113.16" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1253" width="3.6" height="15.0" fill="rgb(232,183,26)" rx="2" ry="2" />
<text  x="109.59" y="1263.5" ></text>
</g>
<g >
<title>default_send_IPI_mask_sequence_phys (449,530,514 samples, 0.50%)</title><rect x="643.9" y="1317" width="6.0" height="15.0" fill="rgb(210,7,40)" rx="2" ry="2" />
<text  x="646.92" y="1327.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (14,368,613 samples, 0.02%)</title><rect x="852.3" y="1445" width="0.2" height="15.0" fill="rgb(205,64,6)" rx="2" ry="2" />
<text  x="855.34" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,901,180,892 samples, 2.13%)</title><rect x="58.8" y="1333" width="25.2" height="15.0" fill="rgb(253,34,24)" rx="2" ry="2" />
<text  x="61.85" y="1343.5" >s..</text>
</g>
<g >
<title>execute_command (43,563,651 samples, 0.05%)</title><rect x="10.6" y="1589" width="0.6" height="15.0" fill="rgb(222,227,53)" rx="2" ry="2" />
<text  x="13.63" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="917" width="1.4" height="15.0" fill="rgb(246,117,47)" rx="2" ry="2" />
<text  x="100.15" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="725" width="0.8" height="15.0" fill="rgb(253,90,49)" rx="2" ry="2" />
<text  x="101.56" y="735.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (21,182,455 samples, 0.02%)</title><rect x="1172.4" y="965" width="0.2" height="15.0" fill="rgb(236,69,29)" rx="2" ry="2" />
<text  x="1175.35" y="975.5" ></text>
</g>
<g >
<title>__pthread_cond_timedwait (76,996,130 samples, 0.09%)</title><rect x="136.3" y="1589" width="1.0" height="15.0" fill="rgb(206,120,15)" rx="2" ry="2" />
<text  x="139.25" y="1599.5" ></text>
</g>
<g >
<title>pick_next_task_fair (8,582,178 samples, 0.01%)</title><rect x="135.7" y="1413" width="0.1" height="15.0" fill="rgb(244,181,33)" rx="2" ry="2" />
<text  x="138.65" y="1423.5" ></text>
</g>
<g >
<title>wake_up_process (107,166,109 samples, 0.12%)</title><rect x="247.5" y="1461" width="1.5" height="15.0" fill="rgb(209,6,11)" rx="2" ry="2" />
<text  x="250.54" y="1471.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (49,011,175 samples, 0.05%)</title><rect x="558.2" y="1333" width="0.7" height="15.0" fill="rgb(214,143,43)" rx="2" ry="2" />
<text  x="561.22" y="1343.5" ></text>
</g>
<g >
<title>br_forward (262,589,062 samples, 0.29%)</title><rect x="733.1" y="933" width="3.4" height="15.0" fill="rgb(232,225,4)" rx="2" ry="2" />
<text  x="736.06" y="943.5" ></text>
</g>
<g >
<title>tick_program_event (8,620,664 samples, 0.01%)</title><rect x="706.9" y="1397" width="0.1" height="15.0" fill="rgb(248,96,37)" rx="2" ry="2" />
<text  x="709.89" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (259,239,129 samples, 0.29%)</title><rect x="106.6" y="181" width="3.4" height="15.0" fill="rgb(249,206,25)" rx="2" ry="2" />
<text  x="109.59" y="191.5" ></text>
</g>
<g >
<title>schedule (13,765,180 samples, 0.02%)</title><rect x="47.1" y="1605" width="0.2" height="15.0" fill="rgb(243,211,32)" rx="2" ry="2" />
<text  x="50.10" y="1615.5" ></text>
</g>
<g >
<title>__qdisc_run (11,905,547 samples, 0.01%)</title><rect x="1153.5" y="517" width="0.2" height="15.0" fill="rgb(234,143,3)" rx="2" ry="2" />
<text  x="1156.53" y="527.5" ></text>
</g>
<g >
<title>process_one_work (8,208,509 samples, 0.01%)</title><rect x="45.2" y="1605" width="0.1" height="15.0" fill="rgb(239,131,46)" rx="2" ry="2" />
<text  x="48.17" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="533" width="0.8" height="15.0" fill="rgb(210,70,50)" rx="2" ry="2" />
<text  x="101.56" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1029" width="0.3" height="15.0" fill="rgb(206,0,10)" rx="2" ry="2" />
<text  x="102.79" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,621,857 samples, 0.55%)</title><rect x="100.1" y="1397" width="6.5" height="15.0" fill="rgb(207,34,7)" rx="2" ry="2" />
<text  x="103.13" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (75,426,672 samples, 0.08%)</title><rect x="62.9" y="229" width="1.0" height="15.0" fill="rgb(253,31,47)" rx="2" ry="2" />
<text  x="65.93" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1029" width="0.4" height="15.0" fill="rgb(246,129,2)" rx="2" ry="2" />
<text  x="56.54" y="1039.5" ></text>
</g>
<g >
<title>nf_nat_packet (8,162,750 samples, 0.01%)</title><rect x="549.6" y="885" width="0.1" height="15.0" fill="rgb(219,98,38)" rx="2" ry="2" />
<text  x="552.58" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (108,784,094 samples, 0.12%)</title><rect x="62.5" y="277" width="1.4" height="15.0" fill="rgb(224,135,24)" rx="2" ry="2" />
<text  x="65.49" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,821,443 samples, 0.01%)</title><rect x="110.0" y="133" width="0.2" height="15.0" fill="rgb(214,70,20)" rx="2" ry="2" />
<text  x="113.02" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,403,929 samples, 0.02%)</title><rect x="128.4" y="133" width="0.1" height="15.0" fill="rgb(216,50,10)" rx="2" ry="2" />
<text  x="131.37" y="143.5" ></text>
</g>
<g >
<title>net_rx_action (9,493,615 samples, 0.01%)</title><rect x="1064.4" y="1445" width="0.1" height="15.0" fill="rgb(224,186,19)" rx="2" ry="2" />
<text  x="1067.41" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1061" width="0.4" height="15.0" fill="rgb(216,78,21)" rx="2" ry="2" />
<text  x="56.88" y="1071.5" ></text>
</g>
<g >
<title>end_page_writeback (127,195,731 samples, 0.14%)</title><rect x="515.7" y="1333" width="1.7" height="15.0" fill="rgb(249,215,15)" rx="2" ry="2" />
<text  x="518.71" y="1343.5" ></text>
</g>
<g >
<title>kworker/4:1-eve (24,270,175 samples, 0.03%)</title><rect x="46.2" y="1669" width="0.3" height="15.0" fill="rgb(248,19,7)" rx="2" ry="2" />
<text  x="49.22" y="1679.5" ></text>
</g>
<g >
<title>__mpn_divrem (82,694,266 samples, 0.09%)</title><rect x="1113.0" y="1413" width="1.1" height="15.0" fill="rgb(210,87,19)" rx="2" ry="2" />
<text  x="1115.96" y="1423.5" ></text>
</g>
<g >
<title>apparmor_inode_getattr (10,276,967 samples, 0.01%)</title><rect x="90.8" y="1461" width="0.1" height="15.0" fill="rgb(224,182,43)" rx="2" ry="2" />
<text  x="93.77" y="1471.5" ></text>
</g>
<g >
<title>br_forward (897,003,649 samples, 1.01%)</title><rect x="1146.6" y="917" width="11.8" height="15.0" fill="rgb(252,108,9)" rx="2" ry="2" />
<text  x="1149.57" y="927.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (15,527,832 samples, 0.02%)</title><rect x="563.9" y="1253" width="0.2" height="15.0" fill="rgb(207,208,47)" rx="2" ry="2" />
<text  x="566.87" y="1263.5" ></text>
</g>
<g >
<title>kworker/1:1-eve (27,292,432 samples, 0.03%)</title><rect x="45.1" y="1669" width="0.4" height="15.0" fill="rgb(224,144,46)" rx="2" ry="2" />
<text  x="48.15" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (22,932,819 samples, 0.03%)</title><rect x="591.9" y="1493" width="0.3" height="15.0" fill="rgb(254,43,19)" rx="2" ry="2" />
<text  x="594.86" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="389" width="3.6" height="15.0" fill="rgb(231,30,3)" rx="2" ry="2" />
<text  x="109.59" y="399.5" ></text>
</g>
<g >
<title>generic_perform_write (64,576,122 samples, 0.07%)</title><rect x="239.1" y="1349" width="0.9" height="15.0" fill="rgb(254,183,46)" rx="2" ry="2" />
<text  x="242.11" y="1359.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (717,311,822 samples, 0.80%)</title><rect x="246.9" y="1525" width="9.5" height="15.0" fill="rgb(213,163,35)" rx="2" ry="2" />
<text  x="249.92" y="1535.5" ></text>
</g>
<g >
<title>fib_table_lookup (27,494,677 samples, 0.03%)</title><rect x="526.9" y="1285" width="0.3" height="15.0" fill="rgb(212,25,31)" rx="2" ry="2" />
<text  x="529.87" y="1295.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (12,224,696 samples, 0.01%)</title><rect x="181.0" y="1157" width="0.2" height="15.0" fill="rgb(238,35,9)" rx="2" ry="2" />
<text  x="184.03" y="1167.5" ></text>
</g>
<g >
<title>consume_skb (54,373,959 samples, 0.06%)</title><rect x="519.9" y="1413" width="0.7" height="15.0" fill="rgb(237,142,46)" rx="2" ry="2" />
<text  x="522.88" y="1423.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (59,234,591 samples, 0.07%)</title><rect x="584.5" y="1541" width="0.8" height="15.0" fill="rgb(235,16,40)" rx="2" ry="2" />
<text  x="587.47" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1461" width="0.9" height="15.0" fill="rgb(228,68,15)" rx="2" ry="2" />
<text  x="134.54" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1525" width="3.0" height="15.0" fill="rgb(226,86,17)" rx="2" ry="2" />
<text  x="131.55" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1061" width="3.6" height="15.0" fill="rgb(253,45,24)" rx="2" ry="2" />
<text  x="109.59" y="1071.5" ></text>
</g>
<g >
<title>perf_event_task_tick (11,013,610 samples, 0.01%)</title><rect x="639.4" y="1173" width="0.1" height="15.0" fill="rgb(245,149,11)" rx="2" ry="2" />
<text  x="642.40" y="1183.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/vendor/github.com/hashicorp/memberlist.(*Memberlist).handlePing (7,994,373 samples, 0.01%)</title><rect x="12.4" y="1573" width="0.1" height="15.0" fill="rgb(247,220,8)" rx="2" ry="2" />
<text  x="15.39" y="1583.5" ></text>
</g>
<g >
<title>do_IRQ (9,878,419 samples, 0.01%)</title><rect x="28.2" y="1365" width="0.1" height="15.0" fill="rgb(250,95,25)" rx="2" ry="2" />
<text  x="31.17" y="1375.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (12,943,167 samples, 0.01%)</title><rect x="91.7" y="1573" width="0.2" height="15.0" fill="rgb(240,65,26)" rx="2" ry="2" />
<text  x="94.71" y="1583.5" ></text>
</g>
<g >
<title>do_IRQ (7,672,545 samples, 0.01%)</title><rect x="1027.9" y="1477" width="0.1" height="15.0" fill="rgb(214,70,2)" rx="2" ry="2" />
<text  x="1030.91" y="1487.5" ></text>
</g>
<g >
<title>ttwu_do_activate (9,227,363 samples, 0.01%)</title><rect x="254.0" y="1269" width="0.1" height="15.0" fill="rgb(212,89,43)" rx="2" ry="2" />
<text  x="256.97" y="1279.5" ></text>
</g>
<g >
<title>command_substitute (8,435,251 samples, 0.01%)</title><rect x="10.6" y="1189" width="0.2" height="15.0" fill="rgb(214,103,48)" rx="2" ry="2" />
<text  x="13.65" y="1199.5" ></text>
</g>
<g >
<title>br_forward_finish (138,226,494 samples, 0.16%)</title><rect x="1177.5" y="1045" width="1.8" height="15.0" fill="rgb(238,129,5)" rx="2" ry="2" />
<text  x="1180.49" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1205" width="0.3" height="15.0" fill="rgb(245,165,14)" rx="2" ry="2" />
<text  x="102.79" y="1215.5" ></text>
</g>
<g >
<title>[[heap]] (18,628,722 samples, 0.02%)</title><rect x="654.1" y="1653" width="0.2" height="15.0" fill="rgb(219,5,48)" rx="2" ry="2" />
<text  x="657.07" y="1663.5" ></text>
</g>
<g >
<title>uv__io_poll (90,135,624 samples, 0.10%)</title><rect x="132.4" y="1637" width="1.2" height="15.0" fill="rgb(233,57,29)" rx="2" ry="2" />
<text  x="135.40" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1477" width="0.4" height="15.0" fill="rgb(211,200,36)" rx="2" ry="2" />
<text  x="56.54" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,052,962,440 samples, 1.18%)</title><rect x="60.6" y="853" width="14.0" height="15.0" fill="rgb(215,92,30)" rx="2" ry="2" />
<text  x="63.63" y="863.5" ></text>
</g>
<g >
<title>generic_permission (12,780,369 samples, 0.01%)</title><rect x="89.0" y="1413" width="0.2" height="15.0" fill="rgb(239,148,18)" rx="2" ry="2" />
<text  x="92.01" y="1423.5" ></text>
</g>
<g >
<title>__fsnotify_parent (202,706,227 samples, 0.23%)</title><rect x="144.3" y="1381" width="2.6" height="15.0" fill="rgb(211,200,30)" rx="2" ry="2" />
<text  x="147.25" y="1391.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (107,504,907 samples, 0.12%)</title><rect x="175.1" y="1109" width="1.4" height="15.0" fill="rgb(205,102,45)" rx="2" ry="2" />
<text  x="178.10" y="1119.5" ></text>
</g>
<g >
<title>execute_shell_function (32,949,984 samples, 0.04%)</title><rect x="10.6" y="1461" width="0.5" height="15.0" fill="rgb(221,83,7)" rx="2" ry="2" />
<text  x="13.64" y="1471.5" ></text>
</g>
<g >
<title>fib_table_lookup (11,020,188 samples, 0.01%)</title><rect x="549.3" y="853" width="0.1" height="15.0" fill="rgb(232,213,40)" rx="2" ry="2" />
<text  x="552.29" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1429" width="18.3" height="15.0" fill="rgb(208,139,33)" rx="2" ry="2" />
<text  x="113.16" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,952,172 samples, 0.01%)</title><rect x="128.4" y="117" width="0.1" height="15.0" fill="rgb(221,66,12)" rx="2" ry="2" />
<text  x="131.37" y="127.5" ></text>
</g>
<g >
<title>ip_output (291,626,887 samples, 0.33%)</title><rect x="1152.9" y="613" width="3.8" height="15.0" fill="rgb(235,9,30)" rx="2" ry="2" />
<text  x="1155.87" y="623.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (34,586,707 samples, 0.04%)</title><rect x="707.6" y="1413" width="0.5" height="15.0" fill="rgb(209,13,10)" rx="2" ry="2" />
<text  x="710.65" y="1423.5" ></text>
</g>
<g >
<title>dbs_irq_work (15,105,313 samples, 0.02%)</title><rect x="253.9" y="1365" width="0.2" height="15.0" fill="rgb(249,165,52)" rx="2" ry="2" />
<text  x="256.91" y="1375.5" ></text>
</g>
<g >
<title>ip_vs_out (66,548,164 samples, 0.07%)</title><rect x="1169.2" y="933" width="0.9" height="15.0" fill="rgb(249,60,47)" rx="2" ry="2" />
<text  x="1172.19" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="245" width="3.6" height="15.0" fill="rgb(244,186,0)" rx="2" ry="2" />
<text  x="109.59" y="255.5" ></text>
</g>
<g >
<title>mod_timer (24,969,756 samples, 0.03%)</title><rect x="1184.3" y="1221" width="0.3" height="15.0" fill="rgb(240,154,6)" rx="2" ry="2" />
<text  x="1187.30" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1525" width="18.3" height="15.0" fill="rgb(253,76,4)" rx="2" ry="2" />
<text  x="113.16" y="1535.5" ></text>
</g>
<g >
<title>__getblk_gfp (69,981,872 samples, 0.08%)</title><rect x="182.9" y="1125" width="0.9" height="15.0" fill="rgb(244,77,33)" rx="2" ry="2" />
<text  x="185.88" y="1135.5" ></text>
</g>
<g >
<title>sd_init_command (49,512,289 samples, 0.06%)</title><rect x="36.1" y="1269" width="0.7" height="15.0" fill="rgb(249,74,15)" rx="2" ry="2" />
<text  x="39.11" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1205" width="0.4" height="15.0" fill="rgb(252,15,20)" rx="2" ry="2" />
<text  x="56.88" y="1215.5" ></text>
</g>
<g >
<title>tcp_data_queue (145,784,670 samples, 0.16%)</title><rect x="553.8" y="1077" width="1.9" height="15.0" fill="rgb(218,224,23)" rx="2" ry="2" />
<text  x="556.80" y="1087.5" ></text>
</g>
<g >
<title>fsnotify_destroy_event (10,116,422 samples, 0.01%)</title><rect x="96.4" y="1477" width="0.1" height="15.0" fill="rgb(246,181,36)" rx="2" ry="2" />
<text  x="99.41" y="1487.5" ></text>
</g>
<g >
<title>__netif_receive_skb (9,089,356 samples, 0.01%)</title><rect x="986.0" y="1397" width="0.1" height="15.0" fill="rgb(230,210,23)" rx="2" ry="2" />
<text  x="988.96" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,717,295 samples, 0.01%)</title><rect x="107.5" y="69" width="0.1" height="15.0" fill="rgb(206,84,11)" rx="2" ry="2" />
<text  x="110.53" y="79.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/vendor/github.com/hashicorp/memberlist.newMemberlist.func4 (12,152,747 samples, 0.01%)</title><rect x="12.4" y="1637" width="0.1" height="15.0" fill="rgb(207,103,33)" rx="2" ry="2" />
<text  x="15.38" y="1647.5" ></text>
</g>
<g >
<title>Glob::isIgnored (2,395,619,667 samples, 2.69%)</title><rect x="55.4" y="1573" width="31.7" height="15.0" fill="rgb(234,196,48)" rx="2" ry="2" />
<text  x="58.45" y="1583.5" >Gl..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1125" width="3.6" height="15.0" fill="rgb(236,112,2)" rx="2" ry="2" />
<text  x="109.59" y="1135.5" ></text>
</g>
<g >
<title>ext4_inode_block_valid (80,989,522 samples, 0.09%)</title><rect x="181.4" y="1157" width="1.1" height="15.0" fill="rgb(206,28,0)" rx="2" ry="2" />
<text  x="184.41" y="1167.5" ></text>
</g>
<g >
<title>__xfrm_decode_session (24,830,645 samples, 0.03%)</title><rect x="1137.8" y="1141" width="0.3" height="15.0" fill="rgb(238,65,9)" rx="2" ry="2" />
<text  x="1140.79" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="629" width="0.4" height="15.0" fill="rgb(219,33,3)" rx="2" ry="2" />
<text  x="56.54" y="639.5" ></text>
</g>
<g >
<title>blk_flush_plug_list (71,930,549 samples, 0.08%)</title><rect x="35.9" y="1429" width="0.9" height="15.0" fill="rgb(219,125,23)" rx="2" ry="2" />
<text  x="38.88" y="1439.5" ></text>
</g>
<g >
<title>iptable_filter_hook (9,382,608 samples, 0.01%)</title><rect x="1151.3" y="581" width="0.1" height="15.0" fill="rgb(246,215,34)" rx="2" ry="2" />
<text  x="1154.26" y="591.5" ></text>
</g>
<g >
<title>response_complete (76,059,127 samples, 0.09%)</title><rect x="722.4" y="1541" width="1.0" height="15.0" fill="rgb(249,219,34)" rx="2" ry="2" />
<text  x="725.35" y="1551.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (812,591,792 samples, 0.91%)</title><rect x="546.2" y="1125" width="10.7" height="15.0" fill="rgb(205,68,8)" rx="2" ry="2" />
<text  x="549.19" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,576,014,917 samples, 1.77%)</title><rect x="59.6" y="1157" width="20.8" height="15.0" fill="rgb(241,154,2)" rx="2" ry="2" />
<text  x="62.56" y="1167.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (891,021,982 samples, 1.00%)</title><rect x="702.2" y="1557" width="11.7" height="15.0" fill="rgb(222,2,25)" rx="2" ry="2" />
<text  x="705.15" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,481,364,064 samples, 1.66%)</title><rect x="59.7" y="1109" width="19.6" height="15.0" fill="rgb(247,36,9)" rx="2" ry="2" />
<text  x="62.69" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1365" width="0.4" height="15.0" fill="rgb(222,133,4)" rx="2" ry="2" />
<text  x="56.88" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (259,239,129 samples, 0.29%)</title><rect x="106.6" y="213" width="3.4" height="15.0" fill="rgb(243,97,14)" rx="2" ry="2" />
<text  x="109.59" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="709" width="0.3" height="15.0" fill="rgb(218,203,33)" rx="2" ry="2" />
<text  x="102.79" y="719.5" ></text>
</g>
<g >
<title>skb_release_all (32,362,564 samples, 0.04%)</title><rect x="552.9" y="1029" width="0.4" height="15.0" fill="rgb(205,97,36)" rx="2" ry="2" />
<text  x="555.89" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="341" width="6.5" height="15.0" fill="rgb(227,163,50)" rx="2" ry="2" />
<text  x="103.13" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="277" width="0.3" height="15.0" fill="rgb(238,171,18)" rx="2" ry="2" />
<text  x="102.79" y="287.5" ></text>
</g>
<g >
<title>mongo::FTDCBSONUtil::(anonymous namespace)::extractMetricsFromDocument (9,276,509 samples, 0.01%)</title><rect x="15.8" y="1461" width="0.2" height="15.0" fill="rgb(222,154,43)" rx="2" ry="2" />
<text  x="18.84" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,647,265 samples, 0.01%)</title><rect x="65.0" y="277" width="0.1" height="15.0" fill="rgb(216,216,53)" rx="2" ry="2" />
<text  x="67.96" y="287.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (209,228,586 samples, 0.23%)</title><rect x="215.9" y="1285" width="2.8" height="15.0" fill="rgb(216,59,12)" rx="2" ry="2" />
<text  x="218.94" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="1029" width="6.5" height="15.0" fill="rgb(237,207,16)" rx="2" ry="2" />
<text  x="103.13" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="853" width="18.3" height="15.0" fill="rgb(208,45,13)" rx="2" ry="2" />
<text  x="113.16" y="863.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (30,574,915 samples, 0.03%)</title><rect x="652.3" y="1477" width="0.4" height="15.0" fill="rgb(209,204,17)" rx="2" ry="2" />
<text  x="655.29" y="1487.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (85,652,840 samples, 0.10%)</title><rect x="699.5" y="1493" width="1.1" height="15.0" fill="rgb(253,63,9)" rx="2" ry="2" />
<text  x="702.45" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1205" width="1.4" height="15.0" fill="rgb(233,119,6)" rx="2" ry="2" />
<text  x="100.15" y="1215.5" ></text>
</g>
<g >
<title>process_backlog (9,089,356 samples, 0.01%)</title><rect x="986.0" y="1413" width="0.1" height="15.0" fill="rgb(250,62,11)" rx="2" ry="2" />
<text  x="988.96" y="1423.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (13,261,757 samples, 0.01%)</title><rect x="639.4" y="1253" width="0.2" height="15.0" fill="rgb(236,49,2)" rx="2" ry="2" />
<text  x="642.38" y="1263.5" ></text>
</g>
<g >
<title>get_page_from_freelist (7,562,169 samples, 0.01%)</title><rect x="33.1" y="1349" width="0.1" height="15.0" fill="rgb(220,59,43)" rx="2" ry="2" />
<text  x="36.06" y="1359.5" ></text>
</g>
<g >
<title>__libc_start_main (7,704,311 samples, 0.01%)</title><rect x="10.2" y="1637" width="0.1" height="15.0" fill="rgb(207,91,1)" rx="2" ry="2" />
<text  x="13.16" y="1647.5" ></text>
</g>
<g >
<title>get_random_u32 (7,822,870 samples, 0.01%)</title><rect x="27.9" y="1333" width="0.1" height="15.0" fill="rgb(253,78,47)" rx="2" ry="2" />
<text  x="30.94" y="1343.5" ></text>
</g>
<g >
<title>vfs_statx (211,243,003 samples, 0.24%)</title><rect x="88.3" y="1509" width="2.8" height="15.0" fill="rgb(247,206,26)" rx="2" ry="2" />
<text  x="91.28" y="1519.5" ></text>
</g>
<g >
<title>gc_sweep (115,878,136 samples, 0.13%)</title><rect x="1116.3" y="1493" width="1.6" height="15.0" fill="rgb(246,159,32)" rx="2" ry="2" />
<text  x="1119.33" y="1503.5" ></text>
</g>
<g >
<title>bnx2_rx_int (9,646,725 samples, 0.01%)</title><rect x="41.0" y="1525" width="0.1" height="15.0" fill="rgb(231,103,21)" rx="2" ry="2" />
<text  x="44.01" y="1535.5" ></text>
</g>
<g >
<title>uv_run (25,996,559 samples, 0.03%)</title><rect x="137.8" y="1573" width="0.4" height="15.0" fill="rgb(227,208,13)" rx="2" ry="2" />
<text  x="140.81" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1093" width="1.4" height="15.0" fill="rgb(225,22,51)" rx="2" ry="2" />
<text  x="100.15" y="1103.5" ></text>
</g>
<g >
<title>ret_from_intr (27,162,230 samples, 0.03%)</title><rect x="602.5" y="1413" width="0.4" height="15.0" fill="rgb(247,1,54)" rx="2" ry="2" />
<text  x="605.51" y="1423.5" ></text>
</g>
<g >
<title>lj_BC_ISTC (8,769,693 samples, 0.01%)</title><rect x="1029.8" y="1541" width="0.1" height="15.0" fill="rgb(213,226,4)" rx="2" ry="2" />
<text  x="1032.80" y="1551.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::CompressionStream&lt;node::(anonymous namespace)::ZlibContext&gt;::AfterThreadPoolWork (10,520,476 samples, 0.01%)</title><rect x="133.1" y="1573" width="0.2" height="15.0" fill="rgb(237,27,1)" rx="2" ry="2" />
<text  x="136.13" y="1583.5" ></text>
</g>
<g >
<title>__libc_open64 (8,414,521 samples, 0.01%)</title><rect x="51.1" y="1525" width="0.1" height="15.0" fill="rgb(229,92,12)" rx="2" ry="2" />
<text  x="54.12" y="1535.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (7,911,454 samples, 0.01%)</title><rect x="238.3" y="1461" width="0.1" height="15.0" fill="rgb(220,218,45)" rx="2" ry="2" />
<text  x="241.26" y="1471.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (9,593,881 samples, 0.01%)</title><rect x="650.9" y="1397" width="0.1" height="15.0" fill="rgb(226,63,38)" rx="2" ry="2" />
<text  x="653.88" y="1407.5" ></text>
</g>
<g >
<title>ep_poll (22,541,138 samples, 0.03%)</title><rect x="132.5" y="1541" width="0.3" height="15.0" fill="rgb(205,183,24)" rx="2" ry="2" />
<text  x="135.53" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="229" width="0.3" height="15.0" fill="rgb(251,196,45)" rx="2" ry="2" />
<text  x="102.79" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (430,527,856 samples, 0.48%)</title><rect x="61.9" y="469" width="5.7" height="15.0" fill="rgb(243,146,36)" rx="2" ry="2" />
<text  x="64.91" y="479.5" ></text>
</g>
<g >
<title>execute_shell_function (33,468,613 samples, 0.04%)</title><rect x="10.6" y="1509" width="0.5" height="15.0" fill="rgb(205,99,9)" rx="2" ry="2" />
<text  x="13.64" y="1519.5" ></text>
</g>
<g >
<title>should_failslab (11,154,452 samples, 0.01%)</title><rect x="157.6" y="1237" width="0.2" height="15.0" fill="rgb(231,161,32)" rx="2" ry="2" />
<text  x="160.64" y="1247.5" ></text>
</g>
<g >
<title>uv__work_done (18,335,287 samples, 0.02%)</title><rect x="133.1" y="1605" width="0.3" height="15.0" fill="rgb(206,229,17)" rx="2" ry="2" />
<text  x="136.12" y="1615.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (259,143,796 samples, 0.29%)</title><rect x="40.9" y="1621" width="3.5" height="15.0" fill="rgb(247,55,48)" rx="2" ry="2" />
<text  x="43.94" y="1631.5" ></text>
</g>
<g >
<title>__check_object_size (9,705,740 samples, 0.01%)</title><rect x="90.5" y="1445" width="0.1" height="15.0" fill="rgb(248,150,6)" rx="2" ry="2" />
<text  x="93.52" y="1455.5" ></text>
</g>
<g >
<title>ext4_get_block (14,136,534 samples, 0.02%)</title><rect x="193.5" y="1285" width="0.2" height="15.0" fill="rgb(234,83,26)" rx="2" ry="2" />
<text  x="196.48" y="1295.5" ></text>
</g>
<g >
<title>lj_alloc_free (8,505,760 samples, 0.01%)</title><rect x="675.8" y="1637" width="0.2" height="15.0" fill="rgb(254,35,10)" rx="2" ry="2" />
<text  x="678.84" y="1647.5" ></text>
</g>
<g >
<title>ip_vs_nat_xmit (146,789,891 samples, 0.16%)</title><rect x="737.5" y="917" width="1.9" height="15.0" fill="rgb(239,200,10)" rx="2" ry="2" />
<text  x="740.49" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,596,175 samples, 0.02%)</title><rect x="106.4" y="181" width="0.2" height="15.0" fill="rgb(210,20,6)" rx="2" ry="2" />
<text  x="109.40" y="191.5" ></text>
</g>
<g >
<title>ip_vs_in (136,984,736 samples, 0.15%)</title><rect x="568.0" y="1333" width="1.8" height="15.0" fill="rgb(210,144,7)" rx="2" ry="2" />
<text  x="571.03" y="1343.5" ></text>
</g>
<g >
<title>update_load_avg (25,561,990 samples, 0.03%)</title><rect x="593.1" y="1525" width="0.3" height="15.0" fill="rgb(232,15,53)" rx="2" ry="2" />
<text  x="596.08" y="1535.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted (11,766,265 samples, 0.01%)</title><rect x="229.5" y="1221" width="0.1" height="15.0" fill="rgb(247,106,8)" rx="2" ry="2" />
<text  x="232.46" y="1231.5" ></text>
</g>
<g >
<title>epoll_wait (32,327,891 samples, 0.04%)</title><rect x="132.4" y="1621" width="0.5" height="15.0" fill="rgb(208,30,41)" rx="2" ry="2" />
<text  x="135.44" y="1631.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/libnetwork/networkdb.(*NetworkDB).gossip-fm (11,429,023 samples, 0.01%)</title><rect x="11.6" y="1605" width="0.1" height="15.0" fill="rgb(211,168,4)" rx="2" ry="2" />
<text  x="14.60" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="741" width="0.4" height="15.0" fill="rgb(211,218,11)" rx="2" ry="2" />
<text  x="56.54" y="751.5" ></text>
</g>
<g >
<title>__GI_epoll_ctl (75,277,216 samples, 0.08%)</title><rect x="746.0" y="1541" width="1.0" height="15.0" fill="rgb(225,128,8)" rx="2" ry="2" />
<text  x="749.03" y="1551.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (253,817,098 samples, 0.28%)</title><rect x="224.0" y="1269" width="3.3" height="15.0" fill="rgb(222,99,38)" rx="2" ry="2" />
<text  x="226.96" y="1279.5" ></text>
</g>
<g >
<title>lapic_timer_broadcast (450,833,220 samples, 0.51%)</title><rect x="643.9" y="1333" width="6.0" height="15.0" fill="rgb(252,183,39)" rx="2" ry="2" />
<text  x="646.90" y="1343.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (9,421,846 samples, 0.01%)</title><rect x="44.7" y="1621" width="0.1" height="15.0" fill="rgb(244,199,18)" rx="2" ry="2" />
<text  x="47.66" y="1631.5" ></text>
</g>
<g >
<title>__ip_local_out (8,146,932 samples, 0.01%)</title><rect x="42.3" y="1061" width="0.1" height="15.0" fill="rgb(214,219,10)" rx="2" ry="2" />
<text  x="45.28" y="1071.5" ></text>
</g>
<g >
<title>irq_exit (41,754,964 samples, 0.05%)</title><rect x="602.4" y="1445" width="0.6" height="15.0" fill="rgb(210,103,45)" rx="2" ry="2" />
<text  x="605.41" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="325" width="18.3" height="15.0" fill="rgb(223,61,20)" rx="2" ry="2" />
<text  x="113.16" y="335.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.0 (59,306,087 samples, 0.07%)</title><rect x="140.2" y="1493" width="0.8" height="15.0" fill="rgb(235,61,19)" rx="2" ry="2" />
<text  x="143.18" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1285" width="1.4" height="15.0" fill="rgb(248,60,28)" rx="2" ry="2" />
<text  x="100.15" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (532,321,526 samples, 0.60%)</title><rect x="61.7" y="533" width="7.0" height="15.0" fill="rgb(228,66,1)" rx="2" ry="2" />
<text  x="64.70" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,933,054 samples, 0.10%)</title><rect x="106.6" y="101" width="1.2" height="15.0" fill="rgb(228,150,34)" rx="2" ry="2" />
<text  x="109.59" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1461" width="0.4" height="15.0" fill="rgb(246,8,0)" rx="2" ry="2" />
<text  x="56.54" y="1471.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (39,549,390 samples, 0.04%)</title><rect x="749.8" y="1461" width="0.5" height="15.0" fill="rgb(248,7,15)" rx="2" ry="2" />
<text  x="752.75" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1125" width="18.3" height="15.0" fill="rgb(236,68,18)" rx="2" ry="2" />
<text  x="113.16" y="1135.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1,069,473,810 samples, 1.20%)</title><rect x="729.2" y="1269" width="14.2" height="15.0" fill="rgb(238,169,6)" rx="2" ry="2" />
<text  x="732.23" y="1279.5" ></text>
</g>
<g >
<title>rebalance_domains (52,172,421 samples, 0.06%)</title><rect x="252.9" y="1461" width="0.7" height="15.0" fill="rgb(226,35,44)" rx="2" ry="2" />
<text  x="255.86" y="1471.5" ></text>
</g>
<g >
<title>generic_make_request_checks (87,291,703 samples, 0.10%)</title><rect x="37.1" y="1445" width="1.1" height="15.0" fill="rgb(231,229,13)" rx="2" ry="2" />
<text  x="40.08" y="1455.5" ></text>
</g>
<g >
<title>ret_from_fork (1,800,516,281 samples, 2.02%)</title><rect x="16.5" y="1653" width="23.8" height="15.0" fill="rgb(229,36,5)" rx="2" ry="2" />
<text  x="19.45" y="1663.5" >r..</text>
</g>
<g >
<title>veth_xmit (30,870,951 samples, 0.03%)</title><rect x="1163.3" y="773" width="0.4" height="15.0" fill="rgb(210,167,45)" rx="2" ry="2" />
<text  x="1166.28" y="783.5" ></text>
</g>
<g >
<title>br_dev_queue_push_xmit (22,378,477 samples, 0.03%)</title><rect x="741.9" y="1045" width="0.3" height="15.0" fill="rgb(212,176,4)" rx="2" ry="2" />
<text  x="744.88" y="1055.5" ></text>
</g>
<g >
<title>ip_route_me_harder (38,542,912 samples, 0.04%)</title><rect x="549.0" y="917" width="0.5" height="15.0" fill="rgb(213,78,44)" rx="2" ry="2" />
<text  x="552.03" y="927.5" ></text>
</g>
<g >
<title>__xfrm_decode_session (14,754,113 samples, 0.02%)</title><rect x="565.8" y="1253" width="0.2" height="15.0" fill="rgb(232,63,40)" rx="2" ry="2" />
<text  x="568.84" y="1263.5" ></text>
</g>
<g >
<title>vxlan_find_mac (8,830,635 samples, 0.01%)</title><rect x="1148.6" y="693" width="0.1" height="15.0" fill="rgb(249,94,33)" rx="2" ry="2" />
<text  x="1151.62" y="703.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (30,798,981 samples, 0.03%)</title><rect x="1104.8" y="1461" width="0.4" height="15.0" fill="rgb(240,202,49)" rx="2" ry="2" />
<text  x="1107.83" y="1471.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (46,981,550 samples, 0.05%)</title><rect x="42.2" y="1205" width="0.6" height="15.0" fill="rgb(228,160,7)" rx="2" ry="2" />
<text  x="45.20" y="1215.5" ></text>
</g>
<g >
<title>ip_rcv_finish (952,694,760 samples, 1.07%)</title><rect x="1160.2" y="997" width="12.6" height="15.0" fill="rgb(231,219,36)" rx="2" ry="2" />
<text  x="1163.15" y="1007.5" ></text>
</g>
<g >
<title>blk_queue_enter (10,166,712 samples, 0.01%)</title><rect x="36.9" y="1445" width="0.2" height="15.0" fill="rgb(252,100,41)" rx="2" ry="2" />
<text  x="39.93" y="1455.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (53,380,405 samples, 0.06%)</title><rect x="156.4" y="1221" width="0.7" height="15.0" fill="rgb(248,226,38)" rx="2" ry="2" />
<text  x="159.38" y="1231.5" ></text>
</g>
<g >
<title>ret_from_intr (33,461,789 samples, 0.04%)</title><rect x="893.7" y="1461" width="0.5" height="15.0" fill="rgb(239,28,15)" rx="2" ry="2" />
<text  x="896.74" y="1471.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (62,687,617 samples, 0.07%)</title><rect x="1183.8" y="1269" width="0.8" height="15.0" fill="rgb(241,186,29)" rx="2" ry="2" />
<text  x="1186.81" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1413" width="0.4" height="15.0" fill="rgb(215,6,44)" rx="2" ry="2" />
<text  x="56.54" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1365" width="18.3" height="15.0" fill="rgb(222,216,8)" rx="2" ry="2" />
<text  x="113.16" y="1375.5" ></text>
</g>
<g >
<title>nf_hook_slow (39,444,755 samples, 0.04%)</title><rect x="569.2" y="1285" width="0.5" height="15.0" fill="rgb(254,200,7)" rx="2" ry="2" />
<text  x="572.15" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="853" width="0.4" height="15.0" fill="rgb(251,30,50)" rx="2" ry="2" />
<text  x="56.54" y="863.5" ></text>
</g>
<g >
<title>fdb_find_rcu (11,830,575 samples, 0.01%)</title><rect x="1177.1" y="1061" width="0.2" height="15.0" fill="rgb(254,199,41)" rx="2" ry="2" />
<text  x="1180.13" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="389" width="0.4" height="15.0" fill="rgb(239,215,21)" rx="2" ry="2" />
<text  x="56.88" y="399.5" ></text>
</g>
<g >
<title>lj_alloc_realloc (65,687,208 samples, 0.07%)</title><rect x="921.5" y="1477" width="0.9" height="15.0" fill="rgb(215,11,19)" rx="2" ry="2" />
<text  x="924.55" y="1487.5" ></text>
</g>
<g >
<title>node_dirty_ok (42,912,806 samples, 0.05%)</title><rect x="201.0" y="1189" width="0.6" height="15.0" fill="rgb(254,99,3)" rx="2" ry="2" />
<text  x="204.01" y="1199.5" ></text>
</g>
<g >
<title>___slab_alloc (11,812,358 samples, 0.01%)</title><rect x="521.5" y="1381" width="0.1" height="15.0" fill="rgb(242,5,19)" rx="2" ry="2" />
<text  x="524.47" y="1391.5" ></text>
</g>
<g >
<title>ip_route_output_flow (27,547,252 samples, 0.03%)</title><rect x="731.0" y="1157" width="0.3" height="15.0" fill="rgb(243,127,6)" rx="2" ry="2" />
<text  x="733.96" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1109" width="0.9" height="15.0" fill="rgb(227,143,45)" rx="2" ry="2" />
<text  x="134.54" y="1119.5" ></text>
</g>
<g >
<title>__x64_sys_read (1,558,727,178 samples, 1.75%)</title><rect x="724.2" y="1477" width="20.6" height="15.0" fill="rgb(242,187,48)" rx="2" ry="2" />
<text  x="727.19" y="1487.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_out (14,135,525 samples, 0.02%)</title><rect x="738.4" y="869" width="0.1" height="15.0" fill="rgb(238,118,1)" rx="2" ry="2" />
<text  x="741.35" y="879.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (13,724,211 samples, 0.02%)</title><rect x="545.4" y="1237" width="0.2" height="15.0" fill="rgb(218,32,12)" rx="2" ry="2" />
<text  x="548.42" y="1247.5" ></text>
</g>
<g >
<title>ip_rcv_finish (46,449,957 samples, 0.05%)</title><rect x="43.1" y="1493" width="0.6" height="15.0" fill="rgb(230,155,13)" rx="2" ry="2" />
<text  x="46.11" y="1503.5" ></text>
</g>
<g >
<title>br_nf_forward_finish (824,203,435 samples, 0.92%)</title><rect x="1147.0" y="853" width="10.9" height="15.0" fill="rgb(244,183,0)" rx="2" ry="2" />
<text  x="1150.03" y="863.5" ></text>
</g>
<g >
<title>update_sd_lb_stats (9,209,781 samples, 0.01%)</title><rect x="641.1" y="1317" width="0.1" height="15.0" fill="rgb(253,170,24)" rx="2" ry="2" />
<text  x="644.07" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1381" width="0.4" height="15.0" fill="rgb(242,67,23)" rx="2" ry="2" />
<text  x="56.54" y="1391.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2,483,073,155 samples, 2.78%)</title><rect x="1143.0" y="1093" width="32.9" height="15.0" fill="rgb(244,27,28)" rx="2" ry="2" />
<text  x="1146.01" y="1103.5" >__..</text>
</g>
<g >
<title>_start (25,996,559 samples, 0.03%)</title><rect x="137.8" y="1653" width="0.4" height="15.0" fill="rgb(238,28,48)" rx="2" ry="2" />
<text  x="140.81" y="1663.5" ></text>
</g>
<g >
<title>_IO_old_init (8,942,445 samples, 0.01%)</title><rect x="678.5" y="1573" width="0.1" height="15.0" fill="rgb(239,145,15)" rx="2" ry="2" />
<text  x="681.46" y="1583.5" ></text>
</g>
<g >
<title>std::string::reserve (9,171,823 samples, 0.01%)</title><rect x="92.2" y="1573" width="0.2" height="15.0" fill="rgb(219,51,48)" rx="2" ry="2" />
<text  x="95.24" y="1583.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (10,649,189 samples, 0.01%)</title><rect x="40.8" y="1621" width="0.1" height="15.0" fill="rgb(243,56,37)" rx="2" ry="2" />
<text  x="43.75" y="1631.5" ></text>
</g>
<g >
<title>__schedule (45,592,360 samples, 0.05%)</title><rect x="653.0" y="1509" width="0.6" height="15.0" fill="rgb(208,45,27)" rx="2" ry="2" />
<text  x="655.99" y="1519.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (12,351,909 samples, 0.01%)</title><rect x="40.3" y="1589" width="0.2" height="15.0" fill="rgb(230,84,23)" rx="2" ry="2" />
<text  x="43.29" y="1599.5" ></text>
</g>
<g >
<title>arch_call_rest_init (4,348,009,023 samples, 4.88%)</title><rect x="596.4" y="1589" width="57.5" height="15.0" fill="rgb(212,29,20)" rx="2" ry="2" />
<text  x="599.36" y="1599.5" >arch_c..</text>
</g>
<g >
<title>__netif_receive_skb_one_core (13,603,784 samples, 0.02%)</title><rect x="251.6" y="1253" width="0.2" height="15.0" fill="rgb(229,161,19)" rx="2" ry="2" />
<text  x="254.62" y="1263.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/vendor/github.com/hashicorp/memberlist.(*Memberlist).encodeAndSendMsg (7,891,275 samples, 0.01%)</title><rect x="11.8" y="1557" width="0.1" height="15.0" fill="rgb(232,129,24)" rx="2" ry="2" />
<text  x="14.78" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="773" width="0.9" height="15.0" fill="rgb(239,149,24)" rx="2" ry="2" />
<text  x="134.54" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (52,788,754 samples, 0.06%)</title><rect x="131.5" y="133" width="0.7" height="15.0" fill="rgb(211,16,12)" rx="2" ry="2" />
<text  x="134.54" y="143.5" ></text>
</g>
<g >
<title>ip_finish_output2 (36,733,657 samples, 0.04%)</title><rect x="737.8" y="853" width="0.5" height="15.0" fill="rgb(228,22,45)" rx="2" ry="2" />
<text  x="740.78" y="863.5" ></text>
</g>
<g >
<title>perf_poll (25,751,208 samples, 0.03%)</title><rect x="139.8" y="1493" width="0.3" height="15.0" fill="rgb(235,113,39)" rx="2" ry="2" />
<text  x="142.80" y="1503.5" ></text>
</g>
<g >
<title>prep_new_page (17,368,534 samples, 0.02%)</title><rect x="27.3" y="1269" width="0.3" height="15.0" fill="rgb(252,123,29)" rx="2" ry="2" />
<text  x="30.35" y="1279.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (8,642,886 samples, 0.01%)</title><rect x="852.3" y="1429" width="0.2" height="15.0" fill="rgb(235,116,14)" rx="2" ry="2" />
<text  x="855.34" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,263,811,266 samples, 1.42%)</title><rect x="111.6" y="117" width="16.8" height="15.0" fill="rgb(240,189,3)" rx="2" ry="2" />
<text  x="114.63" y="127.5" ></text>
</g>
<g >
<title>cpuidle_select (11,873,745 samples, 0.01%)</title><rect x="243.9" y="1605" width="0.2" height="15.0" fill="rgb(214,193,11)" rx="2" ry="2" />
<text  x="246.94" y="1615.5" ></text>
</g>
<g >
<title>counts_index_for (10,168,731 samples, 0.01%)</title><rect x="723.2" y="1509" width="0.1" height="15.0" fill="rgb(244,115,31)" rx="2" ry="2" />
<text  x="726.21" y="1519.5" ></text>
</g>
<g >
<title>tick_broadcast_oneshot_control (35,182,645 samples, 0.04%)</title><rect x="577.2" y="1541" width="0.5" height="15.0" fill="rgb(212,180,52)" rx="2" ry="2" />
<text  x="580.22" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="613" width="6.5" height="15.0" fill="rgb(223,222,53)" rx="2" ry="2" />
<text  x="103.13" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1141" width="0.4" height="15.0" fill="rgb(226,128,51)" rx="2" ry="2" />
<text  x="56.88" y="1151.5" ></text>
</g>
<g >
<title>__GI___strlen_sse2 (18,341,944 samples, 0.02%)</title><rect x="1110.5" y="1429" width="0.2" height="15.0" fill="rgb(205,23,12)" rx="2" ry="2" />
<text  x="1113.49" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="709" width="18.3" height="15.0" fill="rgb(232,29,49)" rx="2" ry="2" />
<text  x="113.16" y="719.5" ></text>
</g>
<g >
<title>kthread (26,393,700 samples, 0.03%)</title><rect x="45.5" y="1637" width="0.4" height="15.0" fill="rgb(252,67,12)" rx="2" ry="2" />
<text  x="48.53" y="1647.5" ></text>
</g>
<g >
<title>ip_finish_output2 (75,409,267 samples, 0.08%)</title><rect x="549.8" y="917" width="1.0" height="15.0" fill="rgb(225,7,43)" rx="2" ry="2" />
<text  x="552.81" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="853" width="0.9" height="15.0" fill="rgb(228,79,7)" rx="2" ry="2" />
<text  x="134.54" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="677" width="0.8" height="15.0" fill="rgb(236,48,30)" rx="2" ry="2" />
<text  x="101.56" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="549" width="0.8" height="15.0" fill="rgb(250,228,26)" rx="2" ry="2" />
<text  x="101.56" y="559.5" ></text>
</g>
<g >
<title>futex_wait_cancelable (7,630,853 samples, 0.01%)</title><rect x="137.6" y="1557" width="0.1" height="15.0" fill="rgb(239,95,17)" rx="2" ry="2" />
<text  x="140.61" y="1567.5" ></text>
</g>
<g >
<title>mongo::FTDCServerStatusCommandCollector::collect (45,558,988 samples, 0.05%)</title><rect x="15.2" y="1557" width="0.6" height="15.0" fill="rgb(238,124,0)" rx="2" ry="2" />
<text  x="18.18" y="1567.5" ></text>
</g>
<g >
<title>hpet_clkevt_set_next_event (41,621,861 samples, 0.05%)</title><rect x="643.3" y="1317" width="0.5" height="15.0" fill="rgb(239,205,39)" rx="2" ry="2" />
<text  x="646.28" y="1327.5" ></text>
</g>
<g >
<title>br_nf_forward_ip (864,821,666 samples, 0.97%)</title><rect x="1146.8" y="869" width="11.5" height="15.0" fill="rgb(221,103,41)" rx="2" ry="2" />
<text  x="1149.81" y="879.5" ></text>
</g>
<g >
<title>nf_hook_slow (23,007,149 samples, 0.03%)</title><rect x="1156.4" y="597" width="0.3" height="15.0" fill="rgb(214,113,54)" rx="2" ry="2" />
<text  x="1159.39" y="607.5" ></text>
</g>
<g >
<title>__GI___printf_fp_l (116,603,960 samples, 0.13%)</title><rect x="682.1" y="1541" width="1.6" height="15.0" fill="rgb(247,222,54)" rx="2" ry="2" />
<text  x="685.11" y="1551.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (333,281,628 samples, 0.37%)</title><rect x="732.4" y="1029" width="4.4" height="15.0" fill="rgb(251,101,50)" rx="2" ry="2" />
<text  x="735.38" y="1039.5" ></text>
</g>
<g >
<title>blk_mq_sched_dispatch_requests (67,559,517 samples, 0.08%)</title><rect x="35.9" y="1333" width="0.9" height="15.0" fill="rgb(244,131,5)" rx="2" ry="2" />
<text  x="38.91" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15,210,041 samples, 0.02%)</title><rect x="240.7" y="1541" width="0.2" height="15.0" fill="rgb(208,118,6)" rx="2" ry="2" />
<text  x="243.68" y="1551.5" ></text>
</g>
<g >
<title>br_pass_frame_up (986,577,419 samples, 1.11%)</title><rect x="545.1" y="1317" width="13.0" height="15.0" fill="rgb(213,157,9)" rx="2" ry="2" />
<text  x="548.07" y="1327.5" ></text>
</g>
<g >
<title>update_load_avg (11,555,671 samples, 0.01%)</title><rect x="94.5" y="1381" width="0.1" height="15.0" fill="rgb(244,0,31)" rx="2" ry="2" />
<text  x="97.47" y="1391.5" ></text>
</g>
<g >
<title>index2adr (10,332,695 samples, 0.01%)</title><rect x="1122.2" y="1525" width="0.2" height="15.0" fill="rgb(254,114,2)" rx="2" ry="2" />
<text  x="1125.23" y="1535.5" ></text>
</g>
<g >
<title>tcp_in_window (8,858,095 samples, 0.01%)</title><rect x="730.3" y="1141" width="0.1" height="15.0" fill="rgb(209,97,16)" rx="2" ry="2" />
<text  x="733.32" y="1151.5" ></text>
</g>
<g >
<title>try_charge (29,655,184 samples, 0.03%)</title><rect x="207.3" y="1205" width="0.4" height="15.0" fill="rgb(231,167,44)" rx="2" ry="2" />
<text  x="210.29" y="1215.5" ></text>
</g>
<g >
<title>gc_onestep (7,859,876,302 samples, 8.81%)</title><rect x="795.2" y="1493" width="104.0" height="15.0" fill="rgb(217,55,15)" rx="2" ry="2" />
<text  x="798.23" y="1503.5" >gc_onestep</text>
</g>
<g >
<title>__GI___libc_malloc (11,436,743 samples, 0.01%)</title><rect x="76.5" y="901" width="0.2" height="15.0" fill="rgb(248,207,22)" rx="2" ry="2" />
<text  x="79.53" y="911.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (13,104,892 samples, 0.01%)</title><rect x="743.9" y="1365" width="0.2" height="15.0" fill="rgb(233,94,18)" rx="2" ry="2" />
<text  x="746.93" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1557" width="0.4" height="15.0" fill="rgb(225,16,45)" rx="2" ry="2" />
<text  x="56.88" y="1567.5" ></text>
</g>
<g >
<title>execute_command_internal (43,563,651 samples, 0.05%)</title><rect x="10.6" y="1573" width="0.6" height="15.0" fill="rgb(253,88,3)" rx="2" ry="2" />
<text  x="13.63" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (103,848,373 samples, 0.12%)</title><rect x="62.6" y="261" width="1.3" height="15.0" fill="rgb(237,107,1)" rx="2" ry="2" />
<text  x="65.56" y="271.5" ></text>
</g>
<g >
<title>__schedule (415,516,803 samples, 0.47%)</title><rect x="707.3" y="1429" width="5.5" height="15.0" fill="rgb(228,78,11)" rx="2" ry="2" />
<text  x="710.30" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="437" width="0.3" height="15.0" fill="rgb(227,79,23)" rx="2" ry="2" />
<text  x="102.79" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,790,149 samples, 0.01%)</title><rect x="81.4" y="1173" width="0.1" height="15.0" fill="rgb(230,112,28)" rx="2" ry="2" />
<text  x="84.39" y="1183.5" ></text>
</g>
<g >
<title>tcache_put (9,813,263 samples, 0.01%)</title><rect x="104.9" y="117" width="0.1" height="15.0" fill="rgb(241,136,27)" rx="2" ry="2" />
<text  x="107.87" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,394,974 samples, 0.01%)</title><rect x="66.2" y="341" width="0.1" height="15.0" fill="rgb(241,94,21)" rx="2" ry="2" />
<text  x="69.17" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="645" width="0.4" height="15.0" fill="rgb(234,64,6)" rx="2" ry="2" />
<text  x="56.88" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,403,929 samples, 0.02%)</title><rect x="128.4" y="149" width="0.1" height="15.0" fill="rgb(210,145,26)" rx="2" ry="2" />
<text  x="131.37" y="159.5" ></text>
</g>
<g >
<title>hpet_clkevt_set_next_event (8,312,858 samples, 0.01%)</title><rect x="638.7" y="1397" width="0.1" height="15.0" fill="rgb(249,4,13)" rx="2" ry="2" />
<text  x="641.74" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (81,408,917 samples, 0.09%)</title><rect x="70.0" y="613" width="1.1" height="15.0" fill="rgb(236,55,22)" rx="2" ry="2" />
<text  x="73.03" y="623.5" ></text>
</g>
<g >
<title>nf_conntrack_in (80,934,956 samples, 0.09%)</title><rect x="531.4" y="1317" width="1.1" height="15.0" fill="rgb(237,202,23)" rx="2" ry="2" />
<text  x="534.42" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,767,621 samples, 0.01%)</title><rect x="131.5" y="117" width="0.2" height="15.0" fill="rgb(251,187,23)" rx="2" ry="2" />
<text  x="134.54" y="127.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (827,383,053 samples, 0.93%)</title><rect x="546.0" y="1141" width="10.9" height="15.0" fill="rgb(219,110,29)" rx="2" ry="2" />
<text  x="548.99" y="1151.5" ></text>
</g>
<g >
<title>__GI___libc_free (59,151,270 samples, 0.07%)</title><rect x="122.2" y="101" width="0.7" height="15.0" fill="rgb(227,138,9)" rx="2" ry="2" />
<text  x="125.15" y="111.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/vendor/github.com/hashicorp/memberlist.(*Memberlist).handleConn (25,652,766 samples, 0.03%)</title><rect x="12.0" y="1621" width="0.3" height="15.0" fill="rgb(237,159,21)" rx="2" ry="2" />
<text  x="14.99" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1541" width="0.4" height="15.0" fill="rgb(225,48,12)" rx="2" ry="2" />
<text  x="56.88" y="1551.5" ></text>
</g>
<g >
<title>rw_verify_area (26,183,872 samples, 0.03%)</title><rect x="237.8" y="1381" width="0.3" height="15.0" fill="rgb(232,206,47)" rx="2" ry="2" />
<text  x="240.80" y="1391.5" ></text>
</g>
<g >
<title>_IO_new_file_fopen (8,725,765 samples, 0.01%)</title><rect x="51.1" y="1557" width="0.1" height="15.0" fill="rgb(237,108,8)" rx="2" ry="2" />
<text  x="54.12" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,549,793 samples, 0.12%)</title><rect x="97.2" y="741" width="1.4" height="15.0" fill="rgb(250,166,54)" rx="2" ry="2" />
<text  x="100.15" y="751.5" ></text>
</g>
<g >
<title>ext4_get_group_desc (13,374,804 samples, 0.01%)</title><rect x="229.0" y="1237" width="0.1" height="15.0" fill="rgb(211,227,15)" rx="2" ry="2" />
<text  x="231.96" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (49,023,832 samples, 0.05%)</title><rect x="109.4" y="117" width="0.6" height="15.0" fill="rgb(235,160,42)" rx="2" ry="2" />
<text  x="112.37" y="127.5" ></text>
</g>
<g >
<title>__libc_write (4,809,647,183 samples, 5.39%)</title><rect x="1123.5" y="1525" width="63.6" height="15.0" fill="rgb(251,172,25)" rx="2" ry="2" />
<text  x="1126.47" y="1535.5" >__libc..</text>
</g>
<g >
<title>_raw_spin_lock (12,913,288 samples, 0.01%)</title><rect x="172.2" y="1109" width="0.2" height="15.0" fill="rgb(224,1,53)" rx="2" ry="2" />
<text  x="175.24" y="1119.5" ></text>
</g>
<g >
<title>lapic_timer_shutdown.part.0 (10,413,482 samples, 0.01%)</title><rect x="503.9" y="1477" width="0.1" height="15.0" fill="rgb(242,24,0)" rx="2" ry="2" />
<text  x="506.88" y="1487.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (92,411,677 samples, 0.10%)</title><rect x="531.3" y="1333" width="1.3" height="15.0" fill="rgb(254,135,38)" rx="2" ry="2" />
<text  x="534.35" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1413" width="3.6" height="15.0" fill="rgb(206,180,35)" rx="2" ry="2" />
<text  x="109.59" y="1423.5" ></text>
</g>
<g >
<title>scsi_init_io (48,437,207 samples, 0.05%)</title><rect x="36.1" y="1237" width="0.7" height="15.0" fill="rgb(219,214,9)" rx="2" ry="2" />
<text  x="39.12" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="469" width="0.4" height="15.0" fill="rgb(215,67,27)" rx="2" ry="2" />
<text  x="56.54" y="479.5" ></text>
</g>
<g >
<title>main (8,270,606 samples, 0.01%)</title><rect x="1188.5" y="1621" width="0.1" height="15.0" fill="rgb(249,203,2)" rx="2" ry="2" />
<text  x="1191.51" y="1631.5" ></text>
</g>
<g >
<title>ip_finish_output2 (62,220,140 samples, 0.07%)</title><rect x="543.6" y="965" width="0.8" height="15.0" fill="rgb(223,85,16)" rx="2" ry="2" />
<text  x="546.61" y="975.5" ></text>
</g>
<g >
<title>__irq_work_queue_local (8,284,188 samples, 0.01%)</title><rect x="254.3" y="1413" width="0.1" height="15.0" fill="rgb(206,139,10)" rx="2" ry="2" />
<text  x="257.27" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="837" width="0.4" height="15.0" fill="rgb(219,60,52)" rx="2" ry="2" />
<text  x="56.54" y="847.5" ></text>
</g>
<g >
<title>ip_vs_nat_xmit (107,268,597 samples, 0.12%)</title><rect x="568.3" y="1301" width="1.4" height="15.0" fill="rgb(220,142,13)" rx="2" ry="2" />
<text  x="571.31" y="1311.5" ></text>
</g>
<g >
<title>lj_meta_cat (37,336,142 samples, 0.04%)</title><rect x="689.2" y="1637" width="0.5" height="15.0" fill="rgb(222,71,12)" rx="2" ry="2" />
<text  x="692.22" y="1647.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1621" width="1.4" height="15.0" fill="rgb(237,87,4)" rx="2" ry="2" />
<text  x="100.15" y="1631.5" ></text>
</g>
<g >
<title>finish_task_switch (96,911,676 samples, 0.11%)</title><rect x="590.9" y="1557" width="1.3" height="15.0" fill="rgb(235,210,8)" rx="2" ry="2" />
<text  x="593.89" y="1567.5" ></text>
</g>
<g >
<title>__ip_finish_output (17,287,734 samples, 0.02%)</title><rect x="255.8" y="1269" width="0.2" height="15.0" fill="rgb(218,113,21)" rx="2" ry="2" />
<text  x="258.81" y="1279.5" ></text>
</g>
<g >
<title>iptable_filter_hook (12,084,241 samples, 0.01%)</title><rect x="530.3" y="1301" width="0.2" height="15.0" fill="rgb(223,107,17)" rx="2" ry="2" />
<text  x="533.30" y="1311.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (40,442,284 samples, 0.05%)</title><rect x="170.9" y="1141" width="0.5" height="15.0" fill="rgb(215,100,46)" rx="2" ry="2" />
<text  x="173.89" y="1151.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/vendor/github.com/hashicorp/memberlist.(*Memberlist).ingestPacket (11,109,688 samples, 0.01%)</title><rect x="12.4" y="1605" width="0.1" height="15.0" fill="rgb(211,187,47)" rx="2" ry="2" />
<text  x="15.38" y="1615.5" ></text>
</g>
<g >
<title>ext4_finish_bio (180,894,176 samples, 0.20%)</title><rect x="515.0" y="1349" width="2.4" height="15.0" fill="rgb(216,202,25)" rx="2" ry="2" />
<text  x="518.01" y="1359.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (10,858,975 samples, 0.01%)</title><rect x="148.2" y="1253" width="0.1" height="15.0" fill="rgb(223,92,32)" rx="2" ry="2" />
<text  x="151.18" y="1263.5" ></text>
</g>
<g >
<title>ext4_write_begin (4,943,039,073 samples, 5.54%)</title><rect x="149.7" y="1301" width="65.4" height="15.0" fill="rgb(250,124,34)" rx="2" ry="2" />
<text  x="152.72" y="1311.5" >ext4_wr..</text>
</g>
<g >
<title>iptunnel_xmit (481,968,071 samples, 0.54%)</title><rect x="1150.5" y="645" width="6.4" height="15.0" fill="rgb(254,95,0)" rx="2" ry="2" />
<text  x="1153.51" y="655.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (10,496,476 samples, 0.01%)</title><rect x="1128.5" y="1269" width="0.1" height="15.0" fill="rgb(215,73,36)" rx="2" ry="2" />
<text  x="1131.49" y="1279.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (8,862,432 samples, 0.01%)</title><rect x="1159.0" y="949" width="0.1" height="15.0" fill="rgb(224,205,28)" rx="2" ry="2" />
<text  x="1162.01" y="959.5" ></text>
</g>
<g >
<title>br_nf_pre_routing_finish (51,490,072 samples, 0.06%)</title><rect x="251.1" y="1365" width="0.7" height="15.0" fill="rgb(247,92,51)" rx="2" ry="2" />
<text  x="254.13" y="1375.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (30,001,600 samples, 0.03%)</title><rect x="226.2" y="1237" width="0.4" height="15.0" fill="rgb(225,183,1)" rx="2" ry="2" />
<text  x="229.19" y="1247.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_fn (12,150,588 samples, 0.01%)</title><rect x="532.7" y="1317" width="0.1" height="15.0" fill="rgb(236,89,45)" rx="2" ry="2" />
<text  x="535.68" y="1327.5" ></text>
</g>
<g >
<title>operator new (16,075,002 samples, 0.02%)</title><rect x="67.2" y="405" width="0.2" height="15.0" fill="rgb(225,162,9)" rx="2" ry="2" />
<text  x="70.17" y="415.5" ></text>
</g>
<g >
<title>br_handle_frame (1,103,186,056 samples, 1.24%)</title><rect x="1144.8" y="997" width="14.6" height="15.0" fill="rgb(249,107,44)" rx="2" ry="2" />
<text  x="1147.81" y="1007.5" ></text>
</g>
<g >
<title>sd_event_run (7,719,600 samples, 0.01%)</title><rect x="653.9" y="1589" width="0.1" height="15.0" fill="rgb(254,152,30)" rx="2" ry="2" />
<text  x="656.90" y="1599.5" ></text>
</g>
<g >
<title>__pthread_cond_broadcast (108,633,463 samples, 0.12%)</title><rect x="93.7" y="1589" width="1.4" height="15.0" fill="rgb(238,89,34)" rx="2" ry="2" />
<text  x="96.66" y="1599.5" ></text>
</g>
<g >
<title>bnx2_poll_msix (13,242,314 samples, 0.01%)</title><rect x="250.8" y="1461" width="0.2" height="15.0" fill="rgb(229,154,28)" rx="2" ry="2" />
<text  x="253.78" y="1471.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (232,723,923 samples, 0.26%)</title><rect x="1153.1" y="533" width="3.1" height="15.0" fill="rgb(252,165,53)" rx="2" ry="2" />
<text  x="1156.14" y="543.5" ></text>
</g>
<g >
<title>ip_vs_out.part.0 (8,717,006 samples, 0.01%)</title><rect x="569.9" y="1317" width="0.1" height="15.0" fill="rgb(253,58,20)" rx="2" ry="2" />
<text  x="572.85" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="613" width="0.3" height="15.0" fill="rgb(211,5,48)" rx="2" ry="2" />
<text  x="102.79" y="623.5" ></text>
</g>
<g >
<title>handle_response (152,014,998 samples, 0.17%)</title><rect x="565.0" y="1301" width="2.0" height="15.0" fill="rgb(240,200,5)" rx="2" ry="2" />
<text  x="568.01" y="1311.5" ></text>
</g>
<g >
<title>nf_nat_manip_pkt (12,607,744 samples, 0.01%)</title><rect x="731.5" y="1125" width="0.1" height="15.0" fill="rgb(214,118,23)" rx="2" ry="2" />
<text  x="734.46" y="1135.5" ></text>
</g>
<g >
<title>dev_queue_xmit (29,412,625 samples, 0.03%)</title><rect x="742.5" y="1141" width="0.3" height="15.0" fill="rgb(245,19,42)" rx="2" ry="2" />
<text  x="745.45" y="1151.5" ></text>
</g>
<g >
<title>do_syscall_64 (16,004,099 samples, 0.02%)</title><rect x="13.2" y="1557" width="0.2" height="15.0" fill="rgb(228,4,27)" rx="2" ry="2" />
<text  x="16.23" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1365" width="0.9" height="15.0" fill="rgb(205,210,1)" rx="2" ry="2" />
<text  x="134.54" y="1375.5" ></text>
</g>
<g >
<title>pollwake (57,964,216 samples, 0.07%)</title><rect x="145.6" y="1269" width="0.7" height="15.0" fill="rgb(250,140,48)" rx="2" ry="2" />
<text  x="148.58" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1013" width="0.3" height="15.0" fill="rgb(244,114,2)" rx="2" ry="2" />
<text  x="102.79" y="1023.5" ></text>
</g>
<g >
<title>nf_hook_slow (201,182,293 samples, 0.23%)</title><rect x="542.2" y="1205" width="2.7" height="15.0" fill="rgb(210,0,23)" rx="2" ry="2" />
<text  x="545.20" y="1215.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (19,756,468 samples, 0.02%)</title><rect x="221.2" y="1221" width="0.2" height="15.0" fill="rgb(246,128,34)" rx="2" ry="2" />
<text  x="224.15" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,011,352,025 samples, 2.26%)</title><rect x="58.6" y="1429" width="26.6" height="15.0" fill="rgb(249,203,34)" rx="2" ry="2" />
<text  x="61.59" y="1439.5" >s..</text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (31,238,858 samples, 0.04%)</title><rect x="173.9" y="1093" width="0.5" height="15.0" fill="rgb(252,168,39)" rx="2" ry="2" />
<text  x="176.94" y="1103.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (50,195,310 samples, 0.06%)</title><rect x="251.1" y="1333" width="0.7" height="15.0" fill="rgb(247,178,48)" rx="2" ry="2" />
<text  x="254.14" y="1343.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (4,133,911,047 samples, 4.64%)</title><rect x="1130.5" y="1301" width="54.7" height="15.0" fill="rgb(226,48,12)" rx="2" ry="2" />
<text  x="1133.55" y="1311.5" >__tcp..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1173" width="0.9" height="15.0" fill="rgb(211,173,30)" rx="2" ry="2" />
<text  x="134.54" y="1183.5" ></text>
</g>
<g >
<title>ext4_mb_new_blocks (1,368,959,726 samples, 1.54%)</title><rect x="169.3" y="1189" width="18.1" height="15.0" fill="rgb(217,44,44)" rx="2" ry="2" />
<text  x="172.27" y="1199.5" ></text>
</g>
<g >
<title>mptscsih_qcmd (8,990,090 samples, 0.01%)</title><rect x="36.0" y="1253" width="0.1" height="15.0" fill="rgb(209,50,44)" rx="2" ry="2" />
<text  x="38.99" y="1263.5" ></text>
</g>
<g >
<title>tcp_mt (14,528,646 samples, 0.02%)</title><rect x="572.5" y="1349" width="0.2" height="15.0" fill="rgb(217,138,21)" rx="2" ry="2" />
<text  x="575.48" y="1359.5" ></text>
</g>
<g >
<title>mongo::FTDCCompressor::getCompressedSamples (28,695,852 samples, 0.03%)</title><rect x="16.0" y="1541" width="0.3" height="15.0" fill="rgb(236,160,22)" rx="2" ry="2" />
<text  x="18.97" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1573" width="3.0" height="15.0" fill="rgb(217,167,16)" rx="2" ry="2" />
<text  x="131.55" y="1583.5" ></text>
</g>
<g >
<title>mongo::FTDCCollectorCollection::collect (9,540,750 samples, 0.01%)</title><rect x="14.9" y="1637" width="0.1" height="15.0" fill="rgb(224,14,48)" rx="2" ry="2" />
<text  x="17.92" y="1647.5" ></text>
</g>
<g >
<title>lj_cf_table_concat (119,774,667 samples, 0.13%)</title><rect x="685.8" y="1637" width="1.6" height="15.0" fill="rgb(249,177,23)" rx="2" ry="2" />
<text  x="688.83" y="1647.5" ></text>
</g>
<g >
<title>propagatemark (25,928,072 samples, 0.03%)</title><rect x="692.1" y="1637" width="0.4" height="15.0" fill="rgb(243,165,18)" rx="2" ry="2" />
<text  x="695.11" y="1647.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (16,869,556 samples, 0.02%)</title><rect x="89.4" y="1397" width="0.2" height="15.0" fill="rgb(232,35,41)" rx="2" ry="2" />
<text  x="92.41" y="1407.5" ></text>
</g>
<g >
<title>cat (25,561,012 samples, 0.03%)</title><rect x="10.1" y="1669" width="0.4" height="15.0" fill="rgb(252,224,48)" rx="2" ry="2" />
<text  x="13.14" y="1679.5" ></text>
</g>
<g >
<title>finish_task_switch (38,417,173 samples, 0.04%)</title><rect x="711.2" y="1413" width="0.5" height="15.0" fill="rgb(252,59,11)" rx="2" ry="2" />
<text  x="714.18" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="837" width="6.5" height="15.0" fill="rgb(218,112,28)" rx="2" ry="2" />
<text  x="103.13" y="847.5" ></text>
</g>
<g >
<title>dec_zone_page_state (8,168,849 samples, 0.01%)</title><rect x="39.2" y="1509" width="0.1" height="15.0" fill="rgb(226,150,53)" rx="2" ry="2" />
<text  x="42.21" y="1519.5" ></text>
</g>
<g >
<title>dev_queue_xmit (11,159,775 samples, 0.01%)</title><rect x="742.6" y="1013" width="0.1" height="15.0" fill="rgb(244,45,7)" rx="2" ry="2" />
<text  x="745.59" y="1023.5" ></text>
</g>
<g >
<title>pick_next_task_fair (45,111,517 samples, 0.05%)</title><rect x="711.7" y="1413" width="0.6" height="15.0" fill="rgb(253,149,15)" rx="2" ry="2" />
<text  x="714.73" y="1423.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (17,833,877 samples, 0.02%)</title><rect x="84.7" y="1349" width="0.2" height="15.0" fill="rgb(227,49,15)" rx="2" ry="2" />
<text  x="87.70" y="1359.5" ></text>
</g>
<g >
<title>set_next_entity (47,129,110 samples, 0.05%)</title><rect x="592.8" y="1541" width="0.6" height="15.0" fill="rgb(239,226,32)" rx="2" ry="2" />
<text  x="595.79" y="1551.5" ></text>
</g>
<g >
<title>aeCreateFileEvent (88,171,382 samples, 0.10%)</title><rect x="745.9" y="1557" width="1.1" height="15.0" fill="rgb(215,6,19)" rx="2" ry="2" />
<text  x="748.86" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1093" width="0.8" height="15.0" fill="rgb(240,114,4)" rx="2" ry="2" />
<text  x="101.56" y="1103.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (2,450,103,661 samples, 2.75%)</title><rect x="55.2" y="1589" width="32.4" height="15.0" fill="rgb(245,93,20)" rx="2" ry="2" />
<text  x="58.19" y="1599.5" >Wa..</text>
</g>
<g >
<title>netif_receive_skb_list_internal (17,126,651 samples, 0.02%)</title><rect x="41.3" y="1509" width="0.2" height="15.0" fill="rgb(226,205,39)" rx="2" ry="2" />
<text  x="44.30" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (49,130,080 samples, 0.06%)</title><rect x="110.2" y="85" width="0.6" height="15.0" fill="rgb(240,197,52)" rx="2" ry="2" />
<text  x="113.17" y="95.5" ></text>
</g>
<g >
<title>update_blocked_averages (25,736,083 samples, 0.03%)</title><rect x="641.4" y="1349" width="0.3" height="15.0" fill="rgb(252,180,20)" rx="2" ry="2" />
<text  x="644.36" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1493" width="3.6" height="15.0" fill="rgb(251,106,16)" rx="2" ry="2" />
<text  x="109.59" y="1503.5" ></text>
</g>
<g >
<title>__strchr_sse2 (39,398,917 samples, 0.04%)</title><rect x="680.7" y="1621" width="0.6" height="15.0" fill="rgb(225,108,39)" rx="2" ry="2" />
<text  x="683.74" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1557" width="0.4" height="15.0" fill="rgb(220,162,28)" rx="2" ry="2" />
<text  x="56.54" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1445" width="3.6" height="15.0" fill="rgb(242,127,31)" rx="2" ry="2" />
<text  x="109.59" y="1455.5" ></text>
</g>
<g >
<title>native_write_msr (10,466,052 samples, 0.01%)</title><rect x="639.4" y="1109" width="0.1" height="15.0" fill="rgb(253,39,49)" rx="2" ry="2" />
<text  x="642.41" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="469" width="1.4" height="15.0" fill="rgb(247,116,22)" rx="2" ry="2" />
<text  x="100.15" y="479.5" ></text>
</g>
<g >
<title>ret_from_intr (21,627,222 samples, 0.02%)</title><rect x="898.9" y="1477" width="0.3" height="15.0" fill="rgb(253,83,40)" rx="2" ry="2" />
<text  x="901.94" y="1487.5" ></text>
</g>
<g >
<title>update_blocked_averages (15,067,390 samples, 0.02%)</title><rect x="650.7" y="1397" width="0.2" height="15.0" fill="rgb(242,117,31)" rx="2" ry="2" />
<text  x="653.68" y="1407.5" ></text>
</g>
<g >
<title>copy_user_generic_string (23,632,133 samples, 0.03%)</title><rect x="727.9" y="1269" width="0.4" height="15.0" fill="rgb(218,97,45)" rx="2" ry="2" />
<text  x="730.95" y="1279.5" ></text>
</g>
<g >
<title>_IO_old_init (13,108,821 samples, 0.01%)</title><rect x="1104.7" y="1445" width="0.1" height="15.0" fill="rgb(221,64,35)" rx="2" ry="2" />
<text  x="1107.65" y="1455.5" ></text>
</g>
<g >
<title>cpuidle_select (647,117,463 samples, 0.73%)</title><rect x="580.1" y="1589" width="8.6" height="15.0" fill="rgb(241,73,34)" rx="2" ry="2" />
<text  x="583.12" y="1599.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/vendor/github.com/hashicorp/memberlist.(*Memberlist).SendReliable (7,773,913 samples, 0.01%)</title><rect x="12.2" y="1525" width="0.1" height="15.0" fill="rgb(224,161,40)" rx="2" ry="2" />
<text  x="15.15" y="1535.5" ></text>
</g>
<g >
<title>__getblk_gfp (55,622,269 samples, 0.06%)</title><rect x="175.6" y="1093" width="0.7" height="15.0" fill="rgb(227,12,24)" rx="2" ry="2" />
<text  x="178.59" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,318,551 samples, 0.04%)</title><rect x="53.9" y="597" width="0.4" height="15.0" fill="rgb(220,4,7)" rx="2" ry="2" />
<text  x="56.88" y="607.5" ></text>
</g>
<g >
<title>pagecache_get_page (1,479,874,420 samples, 1.66%)</title><rect x="194.7" y="1269" width="19.6" height="15.0" fill="rgb(236,43,43)" rx="2" ry="2" />
<text  x="197.75" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,272,575,094 samples, 1.43%)</title><rect x="60.1" y="997" width="16.8" height="15.0" fill="rgb(246,142,8)" rx="2" ry="2" />
<text  x="63.08" y="1007.5" ></text>
</g>
<g >
<title>gettimeofday (14,712,706 samples, 0.02%)</title><rect x="654.8" y="1637" width="0.2" height="15.0" fill="rgb(205,136,42)" rx="2" ry="2" />
<text  x="657.80" y="1647.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (111,281,882 samples, 0.12%)</title><rect x="41.6" y="1509" width="1.5" height="15.0" fill="rgb(240,163,1)" rx="2" ry="2" />
<text  x="44.60" y="1519.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (37,539,178 samples, 0.04%)</title><rect x="151.4" y="1253" width="0.5" height="15.0" fill="rgb(241,2,45)" rx="2" ry="2" />
<text  x="154.40" y="1263.5" ></text>
</g>
<g >
<title>cpuidle_enter (4,147,562,446 samples, 4.65%)</title><rect x="596.7" y="1509" width="54.8" height="15.0" fill="rgb(219,118,19)" rx="2" ry="2" />
<text  x="599.65" y="1519.5" >cpuid..</text>
</g>
<g >
<title>lj_str_fromnum (167,710,093 samples, 0.19%)</title><rect x="681.7" y="1621" width="2.2" height="15.0" fill="rgb(245,107,21)" rx="2" ry="2" />
<text  x="684.72" y="1631.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.isra.0 (85,741,704 samples, 0.10%)</title><rect x="526.5" y="1349" width="1.1" height="15.0" fill="rgb(227,113,47)" rx="2" ry="2" />
<text  x="529.49" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="453" width="3.0" height="15.0" fill="rgb(243,14,19)" rx="2" ry="2" />
<text  x="131.55" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock (8,942,720 samples, 0.01%)</title><rect x="543.8" y="917" width="0.1" height="15.0" fill="rgb(217,201,51)" rx="2" ry="2" />
<text  x="546.81" y="927.5" ></text>
</g>
<g >
<title>vfs_write (7,654,256 samples, 0.01%)</title><rect x="242.0" y="1461" width="0.1" height="15.0" fill="rgb(210,81,6)" rx="2" ry="2" />
<text  x="245.03" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="741" width="6.5" height="15.0" fill="rgb(221,83,27)" rx="2" ry="2" />
<text  x="103.13" y="751.5" ></text>
</g>
<g >
<title>netif_rx (10,263,607 samples, 0.01%)</title><rect x="1180.9" y="933" width="0.1" height="15.0" fill="rgb(216,9,28)" rx="2" ry="2" />
<text  x="1183.88" y="943.5" ></text>
</g>
<g >
<title>_start (50,904,594 samples, 0.06%)</title><rect x="10.6" y="1653" width="0.7" height="15.0" fill="rgb(247,131,1)" rx="2" ry="2" />
<text  x="13.62" y="1663.5" ></text>
</g>
<g >
<title>vxlan_xmit (200,442,109 samples, 0.22%)</title><rect x="733.6" y="709" width="2.6" height="15.0" fill="rgb(242,166,22)" rx="2" ry="2" />
<text  x="736.59" y="719.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_fn (10,652,842 samples, 0.01%)</title><rect x="738.4" y="853" width="0.1" height="15.0" fill="rgb(223,129,21)" rx="2" ry="2" />
<text  x="741.38" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="469" width="18.3" height="15.0" fill="rgb(252,19,1)" rx="2" ry="2" />
<text  x="113.16" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="1221" width="6.5" height="15.0" fill="rgb(244,49,18)" rx="2" ry="2" />
<text  x="103.13" y="1231.5" ></text>
</g>
<g >
<title>read_tsc (11,963,926 samples, 0.01%)</title><rect x="504.9" y="1493" width="0.2" height="15.0" fill="rgb(249,111,29)" rx="2" ry="2" />
<text  x="507.92" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="581" width="3.6" height="15.0" fill="rgb(248,41,14)" rx="2" ry="2" />
<text  x="109.59" y="591.5" ></text>
</g>
<g >
<title>udp_tunnel_xmit_skb (19,044,160 samples, 0.02%)</title><rect x="251.3" y="1061" width="0.3" height="15.0" fill="rgb(230,104,32)" rx="2" ry="2" />
<text  x="254.31" y="1071.5" ></text>
</g>
<g >
<title>usec_to_next_send (13,471,597 samples, 0.02%)</title><rect x="700.7" y="1557" width="0.2" height="15.0" fill="rgb(205,158,37)" rx="2" ry="2" />
<text  x="703.74" y="1567.5" ></text>
</g>
<g >
<title>__libc_start_main (8,270,606 samples, 0.01%)</title><rect x="1188.5" y="1637" width="0.1" height="15.0" fill="rgb(237,135,53)" rx="2" ry="2" />
<text  x="1191.51" y="1647.5" ></text>
</g>
<g >
<title>psi_task_change (10,666,154 samples, 0.01%)</title><rect x="140.6" y="1397" width="0.1" height="15.0" fill="rgb(246,107,18)" rx="2" ry="2" />
<text  x="143.61" y="1407.5" ></text>
</g>
<g >
<title>node::ThreadPoolWork::ScheduleWork (10,987,472 samples, 0.01%)</title><rect x="133.1" y="1589" width="0.2" height="15.0" fill="rgb(249,83,19)" rx="2" ry="2" />
<text  x="136.12" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="917" width="0.9" height="15.0" fill="rgb(214,151,9)" rx="2" ry="2" />
<text  x="134.54" y="927.5" ></text>
</g>
<g >
<title>net_rx_action (8,108,786 samples, 0.01%)</title><rect x="1090.5" y="1461" width="0.1" height="15.0" fill="rgb(212,61,41)" rx="2" ry="2" />
<text  x="1093.46" y="1471.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (11,060,532 samples, 0.01%)</title><rect x="889.4" y="1445" width="0.2" height="15.0" fill="rgb(254,198,22)" rx="2" ry="2" />
<text  x="892.42" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="1157" width="6.5" height="15.0" fill="rgb(247,46,13)" rx="2" ry="2" />
<text  x="103.13" y="1167.5" ></text>
</g>
<g >
<title>std::string::_M_mutate (16,207,107 samples, 0.02%)</title><rect x="91.9" y="1573" width="0.3" height="15.0" fill="rgb(208,133,21)" rx="2" ry="2" />
<text  x="94.94" y="1583.5" ></text>
</g>
<g >
<title>netif_receive_skb (60,247,907 samples, 0.07%)</title><rect x="42.1" y="1381" width="0.8" height="15.0" fill="rgb(211,173,30)" rx="2" ry="2" />
<text  x="45.08" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="389" width="0.3" height="15.0" fill="rgb(251,212,16)" rx="2" ry="2" />
<text  x="102.79" y="399.5" ></text>
</g>
<g >
<title>read_int (11,525,097 samples, 0.01%)</title><rect x="1114.8" y="1445" width="0.2" height="15.0" fill="rgb(237,8,42)" rx="2" ry="2" />
<text  x="1117.82" y="1455.5" ></text>
</g>
<g >
<title>ipt_do_table (38,940,492 samples, 0.04%)</title><rect x="1134.3" y="1157" width="0.5" height="15.0" fill="rgb(217,62,38)" rx="2" ry="2" />
<text  x="1137.28" y="1167.5" ></text>
</g>
<g >
<title>__lock_text_start (8,628,745 samples, 0.01%)</title><rect x="217.2" y="1221" width="0.1" height="15.0" fill="rgb(214,51,43)" rx="2" ry="2" />
<text  x="220.21" y="1231.5" ></text>
</g>
<g >
<title>nf_nat_manip_pkt (10,910,365 samples, 0.01%)</title><rect x="557.7" y="1077" width="0.2" height="15.0" fill="rgb(250,190,42)" rx="2" ry="2" />
<text  x="560.72" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1461" width="1.4" height="15.0" fill="rgb(249,208,12)" rx="2" ry="2" />
<text  x="100.15" y="1471.5" ></text>
</g>
<g >
<title>ext4_es_can_be_merged (27,430,855 samples, 0.03%)</title><rect x="162.9" y="1189" width="0.4" height="15.0" fill="rgb(250,162,43)" rx="2" ry="2" />
<text  x="165.92" y="1199.5" ></text>
</g>
<g >
<title>br_dev_xmit (8,834,610 samples, 0.01%)</title><rect x="255.9" y="1189" width="0.1" height="15.0" fill="rgb(209,49,8)" rx="2" ry="2" />
<text  x="258.85" y="1199.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (30,919,579 samples, 0.03%)</title><rect x="548.6" y="933" width="0.4" height="15.0" fill="rgb(237,99,25)" rx="2" ry="2" />
<text  x="551.58" y="943.5" ></text>
</g>
<g >
<title>native_write_msr (43,763,448 samples, 0.05%)</title><rect x="642.6" y="1189" width="0.5" height="15.0" fill="rgb(230,169,3)" rx="2" ry="2" />
<text  x="645.57" y="1199.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (51,665,068 samples, 0.06%)</title><rect x="255.4" y="1365" width="0.7" height="15.0" fill="rgb(213,31,46)" rx="2" ry="2" />
<text  x="258.43" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="533" width="0.9" height="15.0" fill="rgb(230,162,47)" rx="2" ry="2" />
<text  x="134.54" y="543.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (11,548,513 samples, 0.01%)</title><rect x="83.6" y="1285" width="0.2" height="15.0" fill="rgb(237,139,52)" rx="2" ry="2" />
<text  x="86.61" y="1295.5" ></text>
</g>
<g >
<title>aeDeleteFileEvent (255,488,380 samples, 0.29%)</title><rect x="747.5" y="1557" width="3.3" height="15.0" fill="rgb(217,168,18)" rx="2" ry="2" />
<text  x="750.45" y="1567.5" ></text>
</g>
<g >
<title>bnx2_rx_int (307,631,184 samples, 0.34%)</title><rect x="520.7" y="1429" width="4.0" height="15.0" fill="rgb(222,229,30)" rx="2" ry="2" />
<text  x="523.67" y="1439.5" ></text>
</g>
<g >
<title>dev_queue_xmit (186,826,464 samples, 0.21%)</title><rect x="542.4" y="1141" width="2.4" height="15.0" fill="rgb(208,177,52)" rx="2" ry="2" />
<text  x="545.36" y="1151.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (13,762,935 samples, 0.02%)</title><rect x="176.6" y="1093" width="0.2" height="15.0" fill="rgb(212,196,10)" rx="2" ry="2" />
<text  x="179.57" y="1103.5" ></text>
</g>
<g >
<title>start_secondary (26,691,603,129 samples, 29.93%)</title><rect x="243.1" y="1637" width="353.3" height="15.0" fill="rgb(235,43,50)" rx="2" ry="2" />
<text  x="246.15" y="1647.5" >start_secondary</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,375,863,330 samples, 1.54%)</title><rect x="110.2" y="149" width="18.2" height="15.0" fill="rgb(239,136,39)" rx="2" ry="2" />
<text  x="113.16" y="159.5" ></text>
</g>
<g >
<title>ip_sabotage_in (58,552,339 samples, 0.07%)</title><rect x="42.1" y="1301" width="0.8" height="15.0" fill="rgb(244,12,32)" rx="2" ry="2" />
<text  x="45.11" y="1311.5" ></text>
</g>
<g >
<title>rcu_idle_exit (14,687,790 samples, 0.02%)</title><rect x="589.2" y="1589" width="0.2" height="15.0" fill="rgb(224,100,14)" rx="2" ry="2" />
<text  x="592.23" y="1599.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (108,134,268 samples, 0.12%)</title><rect x="134.4" y="1477" width="1.5" height="15.0" fill="rgb(226,47,7)" rx="2" ry="2" />
<text  x="137.43" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1029" width="0.4" height="15.0" fill="rgb(215,193,1)" rx="2" ry="2" />
<text  x="56.88" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="869" width="0.3" height="15.0" fill="rgb(230,75,14)" rx="2" ry="2" />
<text  x="102.79" y="879.5" ></text>
</g>
<g >
<title>rcu_sched (16,952,965 samples, 0.02%)</title><rect x="241.2" y="1669" width="0.3" height="15.0" fill="rgb(207,75,9)" rx="2" ry="2" />
<text  x="244.23" y="1679.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (8,039,356 samples, 0.01%)</title><rect x="713.5" y="1493" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="716.47" y="1503.5" ></text>
</g>
<g >
<title>irq_entries_start (9,964,843 samples, 0.01%)</title><rect x="651.3" y="1493" width="0.1" height="15.0" fill="rgb(249,149,8)" rx="2" ry="2" />
<text  x="654.32" y="1503.5" ></text>
</g>
<g >
<title>alloc_slab_page (25,283,182 samples, 0.03%)</title><rect x="31.1" y="1349" width="0.3" height="15.0" fill="rgb(242,210,36)" rx="2" ry="2" />
<text  x="34.06" y="1359.5" ></text>
</g>
<g >
<title>lj_str_needbuf (147,782,556 samples, 0.17%)</title><rect x="920.5" y="1509" width="1.9" height="15.0" fill="rgb(209,188,2)" rx="2" ry="2" />
<text  x="923.47" y="1519.5" ></text>
</g>
<g >
<title>operator new (15,466,955 samples, 0.02%)</title><rect x="77.6" y="981" width="0.2" height="15.0" fill="rgb(222,44,10)" rx="2" ry="2" />
<text  x="80.62" y="991.5" ></text>
</g>
<g >
<title>do_syscall_64 (15,210,041 samples, 0.02%)</title><rect x="240.7" y="1525" width="0.2" height="15.0" fill="rgb(231,129,40)" rx="2" ry="2" />
<text  x="243.68" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,173,936,837 samples, 2.44%)</title><rect x="58.0" y="1493" width="28.8" height="15.0" fill="rgb(221,134,10)" rx="2" ry="2" />
<text  x="61.00" y="1503.5" >st..</text>
</g>
<g >
<title>perf_mmap__read_init (10,785,311 samples, 0.01%)</title><rect x="141.9" y="1557" width="0.2" height="15.0" fill="rgb(231,56,16)" rx="2" ry="2" />
<text  x="144.92" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="565" width="0.4" height="15.0" fill="rgb(210,141,2)" rx="2" ry="2" />
<text  x="56.88" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,801,346,742 samples, 2.02%)</title><rect x="59.0" y="1301" width="23.8" height="15.0" fill="rgb(232,138,15)" rx="2" ry="2" />
<text  x="61.97" y="1311.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="533" width="0.3" height="15.0" fill="rgb(205,74,33)" rx="2" ry="2" />
<text  x="102.79" y="543.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (17,352,265 samples, 0.02%)</title><rect x="711.3" y="1397" width="0.2" height="15.0" fill="rgb(245,33,52)" rx="2" ry="2" />
<text  x="714.30" y="1407.5" ></text>
</g>
<g >
<title>try_to_wake_up (57,002,890 samples, 0.06%)</title><rect x="145.6" y="1237" width="0.7" height="15.0" fill="rgb(208,212,35)" rx="2" ry="2" />
<text  x="148.59" y="1247.5" ></text>
</g>
<g >
<title>_int_free (18,654,730 samples, 0.02%)</title><rect x="56.6" y="1541" width="0.2" height="15.0" fill="rgb(245,86,2)" rx="2" ry="2" />
<text  x="59.58" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,375,863,330 samples, 1.54%)</title><rect x="110.2" y="133" width="18.2" height="15.0" fill="rgb(222,214,42)" rx="2" ry="2" />
<text  x="113.16" y="143.5" ></text>
</g>
<g >
<title>rehashtab (79,788,395 samples, 0.09%)</title><rect x="1120.8" y="1493" width="1.0" height="15.0" fill="rgb(222,149,0)" rx="2" ry="2" />
<text  x="1123.76" y="1503.5" ></text>
</g>
<g >
<title>get_page_from_freelist (11,683,550 samples, 0.01%)</title><rect x="156.1" y="1109" width="0.2" height="15.0" fill="rgb(232,94,36)" rx="2" ry="2" />
<text  x="159.12" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="277" width="3.0" height="15.0" fill="rgb(220,104,45)" rx="2" ry="2" />
<text  x="131.55" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (115,630,943 samples, 0.13%)</title><rect x="85.2" y="1445" width="1.5" height="15.0" fill="rgb(243,215,8)" rx="2" ry="2" />
<text  x="88.21" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="309" width="3.0" height="15.0" fill="rgb(222,226,35)" rx="2" ry="2" />
<text  x="131.55" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="901" width="3.0" height="15.0" fill="rgb(231,97,26)" rx="2" ry="2" />
<text  x="131.55" y="911.5" ></text>
</g>
<g >
<title>__GI___libc_write (7,654,256 samples, 0.01%)</title><rect x="242.0" y="1541" width="0.1" height="15.0" fill="rgb(209,111,4)" rx="2" ry="2" />
<text  x="245.03" y="1551.5" ></text>
</g>
<g >
<title>bnx2_poll_msix (1,066,447,991 samples, 1.20%)</title><rect x="519.1" y="1461" width="14.1" height="15.0" fill="rgb(232,208,52)" rx="2" ry="2" />
<text  x="522.08" y="1471.5" ></text>
</g>
<g >
<title>kfree (14,363,342 samples, 0.02%)</title><rect x="553.1" y="981" width="0.2" height="15.0" fill="rgb(219,127,2)" rx="2" ry="2" />
<text  x="556.10" y="991.5" ></text>
</g>
<g >
<title>__build_skb_around (13,400,003 samples, 0.02%)</title><rect x="521.8" y="1381" width="0.2" height="15.0" fill="rgb(249,182,5)" rx="2" ry="2" />
<text  x="524.82" y="1391.5" ></text>
</g>
<g >
<title>ip_route_input_slow (61,671,802 samples, 0.07%)</title><rect x="526.6" y="1301" width="0.9" height="15.0" fill="rgb(217,208,38)" rx="2" ry="2" />
<text  x="529.64" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="325" width="0.3" height="15.0" fill="rgb(250,76,38)" rx="2" ry="2" />
<text  x="102.79" y="335.5" ></text>
</g>
<g >
<title>operator new (16,025,743 samples, 0.02%)</title><rect x="65.9" y="341" width="0.3" height="15.0" fill="rgb(214,71,4)" rx="2" ry="2" />
<text  x="68.95" y="351.5" ></text>
</g>
<g >
<title>gro_cells_receive (10,335,941 samples, 0.01%)</title><rect x="529.1" y="1189" width="0.1" height="15.0" fill="rgb(229,125,16)" rx="2" ry="2" />
<text  x="532.11" y="1199.5" ></text>
</g>
<g >
<title>__getblk_gfp (70,009,017 samples, 0.08%)</title><rect x="228.0" y="1237" width="1.0" height="15.0" fill="rgb(248,156,5)" rx="2" ry="2" />
<text  x="231.02" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="757" width="18.3" height="15.0" fill="rgb(250,117,37)" rx="2" ry="2" />
<text  x="113.16" y="767.5" ></text>
</g>
<g >
<title>uv__async_io (37,782,839 samples, 0.04%)</title><rect x="132.9" y="1621" width="0.5" height="15.0" fill="rgb(205,172,44)" rx="2" ry="2" />
<text  x="135.86" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="885" width="3.6" height="15.0" fill="rgb(231,187,35)" rx="2" ry="2" />
<text  x="109.59" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="773" width="0.8" height="15.0" fill="rgb(229,35,53)" rx="2" ry="2" />
<text  x="101.56" y="783.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (36,304,311 samples, 0.04%)</title><rect x="741.0" y="997" width="0.4" height="15.0" fill="rgb(218,196,41)" rx="2" ry="2" />
<text  x="743.96" y="1007.5" ></text>
</g>
<g >
<title>Glob::isIgnored (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1621" width="0.8" height="15.0" fill="rgb(225,0,16)" rx="2" ry="2" />
<text  x="101.56" y="1631.5" ></text>
</g>
<g >
<title>nf_hook_slow (157,573,134 samples, 0.18%)</title><rect x="729.6" y="1205" width="2.0" height="15.0" fill="rgb(220,142,3)" rx="2" ry="2" />
<text  x="732.56" y="1215.5" ></text>
</g>
<g >
<title>perf_pmu_sched_task (8,724,818 samples, 0.01%)</title><rect x="134.9" y="1397" width="0.1" height="15.0" fill="rgb(226,109,39)" rx="2" ry="2" />
<text  x="137.85" y="1407.5" ></text>
</g>
<g >
<title>local.runtime.findRunnable (28,449,784 samples, 0.03%)</title><rect x="12.7" y="1605" width="0.3" height="15.0" fill="rgb(226,202,51)" rx="2" ry="2" />
<text  x="15.66" y="1615.5" ></text>
</g>
<g >
<title>ip_vs_in.part.0 (133,096,106 samples, 0.15%)</title><rect x="568.0" y="1317" width="1.8" height="15.0" fill="rgb(213,51,29)" rx="2" ry="2" />
<text  x="571.05" y="1327.5" ></text>
</g>
<g >
<title>vxlan_xmit_one (21,850,110 samples, 0.02%)</title><rect x="251.3" y="1077" width="0.3" height="15.0" fill="rgb(228,187,45)" rx="2" ry="2" />
<text  x="254.29" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1013" width="0.8" height="15.0" fill="rgb(243,169,6)" rx="2" ry="2" />
<text  x="101.56" y="1023.5" ></text>
</g>
<g >
<title>command_substitute (8,212,682 samples, 0.01%)</title><rect x="11.0" y="1285" width="0.1" height="15.0" fill="rgb(238,157,23)" rx="2" ry="2" />
<text  x="13.95" y="1295.5" ></text>
</g>
<g >
<title>_int_free (9,070,721 samples, 0.01%)</title><rect x="71.7" y="661" width="0.1" height="15.0" fill="rgb(241,214,14)" rx="2" ry="2" />
<text  x="74.67" y="671.5" ></text>
</g>
<g >
<title>futex_wake (90,205,499 samples, 0.10%)</title><rect x="93.8" y="1493" width="1.2" height="15.0" fill="rgb(208,132,50)" rx="2" ry="2" />
<text  x="96.83" y="1503.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (7,920,031 samples, 0.01%)</title><rect x="703.6" y="1461" width="0.1" height="15.0" fill="rgb(206,93,47)" rx="2" ry="2" />
<text  x="706.61" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,271,264 samples, 0.55%)</title><rect x="100.1" y="373" width="6.5" height="15.0" fill="rgb(249,110,49)" rx="2" ry="2" />
<text  x="103.13" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="261" width="18.3" height="15.0" fill="rgb(248,189,17)" rx="2" ry="2" />
<text  x="113.16" y="271.5" ></text>
</g>
<g >
<title>rebalance_domains (8,970,442 samples, 0.01%)</title><rect x="650.6" y="1397" width="0.1" height="15.0" fill="rgb(247,26,5)" rx="2" ry="2" />
<text  x="653.56" y="1407.5" ></text>
</g>
<g >
<title>__ksize (10,610,709 samples, 0.01%)</title><rect x="1129.9" y="1269" width="0.1" height="15.0" fill="rgb(247,57,14)" rx="2" ry="2" />
<text  x="1132.88" y="1279.5" ></text>
</g>
<g >
<title>nf_hook_slow (52,120,829 samples, 0.06%)</title><rect x="557.2" y="1157" width="0.7" height="15.0" fill="rgb(223,228,53)" rx="2" ry="2" />
<text  x="560.20" y="1167.5" ></text>
</g>
<g >
<title>node::LibuvStreamWrap::OnUvRead (7,960,953 samples, 0.01%)</title><rect x="133.4" y="1589" width="0.1" height="15.0" fill="rgb(244,124,5)" rx="2" ry="2" />
<text  x="136.40" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1189" width="0.4" height="15.0" fill="rgb(232,107,54)" rx="2" ry="2" />
<text  x="56.88" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (80,114,720 samples, 0.09%)</title><rect x="128.5" y="117" width="1.1" height="15.0" fill="rgb(213,164,30)" rx="2" ry="2" />
<text  x="131.55" y="127.5" ></text>
</g>
<g >
<title>inet_sendmsg (4,520,967,675 samples, 5.07%)</title><rect x="1126.1" y="1365" width="59.8" height="15.0" fill="rgb(252,185,9)" rx="2" ry="2" />
<text  x="1129.10" y="1375.5" >inet_s..</text>
</g>
<g >
<title>update_nohz_stats (26,798,634 samples, 0.03%)</title><rect x="641.3" y="1365" width="0.4" height="15.0" fill="rgb(218,188,39)" rx="2" ry="2" />
<text  x="644.35" y="1375.5" ></text>
</g>
<g >
<title>dev_queue_xmit (64,513,566 samples, 0.07%)</title><rect x="741.6" y="1157" width="0.8" height="15.0" fill="rgb(212,22,4)" rx="2" ry="2" />
<text  x="744.58" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="213" width="3.0" height="15.0" fill="rgb(211,128,29)" rx="2" ry="2" />
<text  x="131.55" y="223.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (184,114,071 samples, 0.21%)</title><rect x="1134.8" y="1173" width="2.5" height="15.0" fill="rgb(209,17,19)" rx="2" ry="2" />
<text  x="1137.85" y="1183.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (16,400,807 samples, 0.02%)</title><rect x="245.5" y="1557" width="0.2" height="15.0" fill="rgb(235,44,4)" rx="2" ry="2" />
<text  x="248.46" y="1567.5" ></text>
</g>
<g >
<title>br_nf_hook_thresh (152,512,543 samples, 0.17%)</title><rect x="535.8" y="1205" width="2.0" height="15.0" fill="rgb(225,97,39)" rx="2" ry="2" />
<text  x="538.80" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="485" width="0.3" height="15.0" fill="rgb(215,57,54)" rx="2" ry="2" />
<text  x="102.79" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1509" width="18.3" height="15.0" fill="rgb(226,12,22)" rx="2" ry="2" />
<text  x="113.16" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (109,308,884 samples, 0.12%)</title><rect x="100.1" y="149" width="1.5" height="15.0" fill="rgb(217,213,20)" rx="2" ry="2" />
<text  x="103.13" y="159.5" ></text>
</g>
<g >
<title>dequeue_entity (24,352,842 samples, 0.03%)</title><rect x="135.0" y="1381" width="0.4" height="15.0" fill="rgb(224,63,39)" rx="2" ry="2" />
<text  x="138.04" y="1391.5" ></text>
</g>
<g >
<title>__ip_local_out (153,205,929 samples, 0.17%)</title><rect x="1150.8" y="613" width="2.1" height="15.0" fill="rgb(222,157,53)" rx="2" ry="2" />
<text  x="1153.84" y="623.5" ></text>
</g>
<g >
<title>execute_native_thread_routine (92,280,596 samples, 0.10%)</title><rect x="15.1" y="1621" width="1.3" height="15.0" fill="rgb(240,12,17)" rx="2" ry="2" />
<text  x="18.14" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="901" width="18.3" height="15.0" fill="rgb(218,150,23)" rx="2" ry="2" />
<text  x="113.16" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1477" width="0.9" height="15.0" fill="rgb(228,54,50)" rx="2" ry="2" />
<text  x="134.54" y="1487.5" ></text>
</g>
<g >
<title>udp_tunnel_xmit_skb (133,108,392 samples, 0.15%)</title><rect x="542.9" y="1061" width="1.7" height="15.0" fill="rgb(229,194,33)" rx="2" ry="2" />
<text  x="545.87" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,821,443 samples, 0.01%)</title><rect x="110.0" y="149" width="0.2" height="15.0" fill="rgb(235,132,24)" rx="2" ry="2" />
<text  x="113.02" y="159.5" ></text>
</g>
<g >
<title>kmem_cache_free (50,710,671 samples, 0.06%)</title><rect x="218.0" y="1253" width="0.6" height="15.0" fill="rgb(217,190,3)" rx="2" ry="2" />
<text  x="220.97" y="1263.5" ></text>
</g>
<g >
<title>validate_xmit_skb (10,437,589 samples, 0.01%)</title><rect x="1178.9" y="981" width="0.1" height="15.0" fill="rgb(209,106,26)" rx="2" ry="2" />
<text  x="1181.87" y="991.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (8,488,097 samples, 0.01%)</title><rect x="137.6" y="1573" width="0.1" height="15.0" fill="rgb(237,73,25)" rx="2" ry="2" />
<text  x="140.60" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (221,904,866 samples, 0.25%)</title><rect x="128.5" y="165" width="3.0" height="15.0" fill="rgb(229,138,53)" rx="2" ry="2" />
<text  x="131.55" y="175.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_out (40,252,282 samples, 0.05%)</title><rect x="1164.5" y="853" width="0.5" height="15.0" fill="rgb(212,180,5)" rx="2" ry="2" />
<text  x="1167.49" y="863.5" ></text>
</g>
<g >
<title>call_timer_fn (77,296,271 samples, 0.09%)</title><rect x="255.1" y="1445" width="1.1" height="15.0" fill="rgb(214,11,15)" rx="2" ry="2" />
<text  x="258.13" y="1455.5" ></text>
</g>
<g >
<title>gro_normal_list.part.0 (11,968,398 samples, 0.01%)</title><rect x="41.1" y="1525" width="0.2" height="15.0" fill="rgb(217,12,16)" rx="2" ry="2" />
<text  x="44.14" y="1535.5" ></text>
</g>
<g >
<title>find_busiest_group (11,613,066 samples, 0.01%)</title><rect x="641.0" y="1333" width="0.2" height="15.0" fill="rgb(240,51,42)" rx="2" ry="2" />
<text  x="644.04" y="1343.5" ></text>
</g>
<g >
<title>skb_release_head_state (8,369,436 samples, 0.01%)</title><rect x="520.5" y="1381" width="0.1" height="15.0" fill="rgb(226,134,27)" rx="2" ry="2" />
<text  x="523.47" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (118,083,721 samples, 0.13%)</title><rect x="139.4" y="1557" width="1.6" height="15.0" fill="rgb(217,86,38)" rx="2" ry="2" />
<text  x="142.43" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (159,523,467 samples, 0.18%)</title><rect x="748.4" y="1493" width="2.1" height="15.0" fill="rgb(240,98,31)" rx="2" ry="2" />
<text  x="751.44" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="277" width="0.9" height="15.0" fill="rgb(240,107,50)" rx="2" ry="2" />
<text  x="134.54" y="287.5" ></text>
</g>
<g >
<title>lj_cf_math_random (2,925,536,058 samples, 3.28%)</title><rect x="989.6" y="1525" width="38.7" height="15.0" fill="rgb(219,22,42)" rx="2" ry="2" />
<text  x="992.62" y="1535.5" >lj_..</text>
</g>
<g >
<title>local.runtime.schedule (34,133,082 samples, 0.04%)</title><rect x="12.7" y="1621" width="0.4" height="15.0" fill="rgb(225,17,3)" rx="2" ry="2" />
<text  x="15.65" y="1631.5" ></text>
</g>
<g >
<title>__x64_sys_write (7,654,256 samples, 0.01%)</title><rect x="242.0" y="1493" width="0.1" height="15.0" fill="rgb(231,107,31)" rx="2" ry="2" />
<text  x="245.03" y="1503.5" ></text>
</g>
<g >
<title>_raw_spin_lock (20,488,859 samples, 0.02%)</title><rect x="638.2" y="1429" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="641.17" y="1439.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (9,341,582 samples, 0.01%)</title><rect x="33.0" y="1365" width="0.2" height="15.0" fill="rgb(246,57,31)" rx="2" ry="2" />
<text  x="36.05" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1109" width="3.6" height="15.0" fill="rgb(211,219,40)" rx="2" ry="2" />
<text  x="109.59" y="1119.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (15,728,118 samples, 0.02%)</title><rect x="490.5" y="1493" width="0.2" height="15.0" fill="rgb(214,227,46)" rx="2" ry="2" />
<text  x="493.50" y="1503.5" ></text>
</g>
<g >
<title>nf_conntrack_in (8,170,950 samples, 0.01%)</title><rect x="255.5" y="1253" width="0.1" height="15.0" fill="rgb(247,10,20)" rx="2" ry="2" />
<text  x="258.53" y="1263.5" ></text>
</g>
<g >
<title>nf_hook_slow (196,748,180 samples, 0.22%)</title><rect x="535.6" y="1253" width="2.6" height="15.0" fill="rgb(206,15,45)" rx="2" ry="2" />
<text  x="538.56" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="805" width="18.3" height="15.0" fill="rgb(244,159,11)" rx="2" ry="2" />
<text  x="113.16" y="815.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (70,570,152 samples, 0.08%)</title><rect x="210.9" y="1189" width="0.9" height="15.0" fill="rgb(228,80,34)" rx="2" ry="2" />
<text  x="213.87" y="1199.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (49,779,919 samples, 0.06%)</title><rect x="255.4" y="1333" width="0.7" height="15.0" fill="rgb(206,191,41)" rx="2" ry="2" />
<text  x="258.44" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="341" width="3.0" height="15.0" fill="rgb(225,174,3)" rx="2" ry="2" />
<text  x="131.55" y="351.5" ></text>
</g>
<g >
<title>memset (10,668,852 samples, 0.01%)</title><rect x="33.2" y="1477" width="0.2" height="15.0" fill="rgb(236,198,34)" rx="2" ry="2" />
<text  x="36.24" y="1487.5" ></text>
</g>
<g >
<title>ret_from_fork (22,981,556 samples, 0.03%)</title><rect x="46.2" y="1653" width="0.3" height="15.0" fill="rgb(240,114,5)" rx="2" ry="2" />
<text  x="49.23" y="1663.5" ></text>
</g>
<g >
<title>__fget_light (7,740,195 samples, 0.01%)</title><rect x="139.6" y="1477" width="0.1" height="15.0" fill="rgb(226,108,51)" rx="2" ry="2" />
<text  x="142.58" y="1487.5" ></text>
</g>
<g >
<title>apparmor_file_permission (16,581,347 samples, 0.02%)</title><rect x="744.4" y="1397" width="0.2" height="15.0" fill="rgb(227,206,33)" rx="2" ry="2" />
<text  x="747.41" y="1407.5" ></text>
</g>
<g >
<title>memcpy@plt (76,235,789 samples, 0.09%)</title><rect x="986.1" y="1509" width="1.0" height="15.0" fill="rgb(247,189,20)" rx="2" ry="2" />
<text  x="989.10" y="1519.5" ></text>
</g>
<g >
<title>ip_vs_out.part.0 (15,518,450 samples, 0.02%)</title><rect x="739.6" y="933" width="0.2" height="15.0" fill="rgb(244,172,50)" rx="2" ry="2" />
<text  x="742.61" y="943.5" ></text>
</g>
<g >
<title>test_clear_page_writeback (111,548,601 samples, 0.13%)</title><rect x="515.8" y="1317" width="1.5" height="15.0" fill="rgb(243,209,17)" rx="2" ry="2" />
<text  x="518.84" y="1327.5" ></text>
</g>
<g >
<title>resizestack (10,807,774 samples, 0.01%)</title><rect x="920.1" y="1477" width="0.1" height="15.0" fill="rgb(224,115,35)" rx="2" ry="2" />
<text  x="923.05" y="1487.5" ></text>
</g>
<g >
<title>memcpy@plt (36,003,681 samples, 0.04%)</title><rect x="985.3" y="1493" width="0.5" height="15.0" fill="rgb(217,178,50)" rx="2" ry="2" />
<text  x="988.29" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="789" width="0.8" height="15.0" fill="rgb(232,92,36)" rx="2" ry="2" />
<text  x="101.56" y="799.5" ></text>
</g>
<g >
<title>scsi_finish_command (501,174,503 samples, 0.56%)</title><rect x="511.4" y="1445" width="6.6" height="15.0" fill="rgb(245,153,4)" rx="2" ry="2" />
<text  x="514.40" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1077" width="3.0" height="15.0" fill="rgb(229,70,31)" rx="2" ry="2" />
<text  x="131.55" y="1087.5" ></text>
</g>
<g >
<title>main (48,265,666 samples, 0.05%)</title><rect x="10.6" y="1621" width="0.7" height="15.0" fill="rgb(212,54,35)" rx="2" ry="2" />
<text  x="13.62" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="1093" width="6.5" height="15.0" fill="rgb(205,116,19)" rx="2" ry="2" />
<text  x="103.13" y="1103.5" ></text>
</g>
<g >
<title>__getblk_gfp (12,336,071 samples, 0.01%)</title><rect x="168.2" y="1205" width="0.2" height="15.0" fill="rgb(250,205,46)" rx="2" ry="2" />
<text  x="171.23" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="453" width="6.5" height="15.0" fill="rgb(217,70,17)" rx="2" ry="2" />
<text  x="103.13" y="463.5" ></text>
</g>
<g >
<title>mongo::FTDCFileWriter::writeSample (41,802,676 samples, 0.05%)</title><rect x="15.8" y="1557" width="0.6" height="15.0" fill="rgb(209,141,52)" rx="2" ry="2" />
<text  x="18.81" y="1567.5" ></text>
</g>
<g >
<title>perf_event_task_tick (10,177,832 samples, 0.01%)</title><rect x="249.6" y="1413" width="0.1" height="15.0" fill="rgb(251,217,23)" rx="2" ry="2" />
<text  x="252.59" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1237" width="0.8" height="15.0" fill="rgb(215,156,11)" rx="2" ry="2" />
<text  x="101.56" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,318,551 samples, 0.04%)</title><rect x="53.9" y="917" width="0.4" height="15.0" fill="rgb(232,21,1)" rx="2" ry="2" />
<text  x="56.88" y="927.5" ></text>
</g>
<g >
<title>ip_finish_output (843,269,777 samples, 0.95%)</title><rect x="731.7" y="1205" width="11.2" height="15.0" fill="rgb(209,20,30)" rx="2" ry="2" />
<text  x="734.74" y="1215.5" ></text>
</g>
<g >
<title>__fget_light (8,689,840 samples, 0.01%)</title><rect x="134.1" y="1477" width="0.1" height="15.0" fill="rgb(244,14,32)" rx="2" ry="2" />
<text  x="137.10" y="1487.5" ></text>
</g>
<g >
<title>arch_fork (10,579,320 samples, 0.01%)</title><rect x="51.3" y="1573" width="0.2" height="15.0" fill="rgb(248,204,3)" rx="2" ry="2" />
<text  x="54.34" y="1583.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (107,840,957 samples, 0.12%)</title><rect x="210.7" y="1205" width="1.4" height="15.0" fill="rgb(221,48,7)" rx="2" ry="2" />
<text  x="213.69" y="1215.5" ></text>
</g>
<g >
<title>lj_str_resize (333,143,088 samples, 0.37%)</title><rect x="980.9" y="1493" width="4.4" height="15.0" fill="rgb(252,19,28)" rx="2" ry="2" />
<text  x="983.88" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,365,783,016 samples, 1.53%)</title><rect x="60.0" y="1029" width="18.1" height="15.0" fill="rgb(226,147,14)" rx="2" ry="2" />
<text  x="63.02" y="1039.5" ></text>
</g>
<g >
<title>__netif_receive_skb (695,157,814 samples, 0.78%)</title><rect x="732.3" y="1061" width="9.2" height="15.0" fill="rgb(240,121,40)" rx="2" ry="2" />
<text  x="735.30" y="1071.5" ></text>
</g>
<g >
<title>vfs_read (1,522,483,040 samples, 1.71%)</title><rect x="724.7" y="1445" width="20.1" height="15.0" fill="rgb(225,102,10)" rx="2" ry="2" />
<text  x="727.66" y="1455.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist (7,491,932,735 samples, 8.40%)</title><rect x="141.0" y="1589" width="99.2" height="15.0" fill="rgb(238,220,8)" rx="2" ry="2" />
<text  x="144.03" y="1599.5" >record__mmap..</text>
</g>
<g >
<title>execute_command (12,129,602 samples, 0.01%)</title><rect x="10.8" y="1301" width="0.1" height="15.0" fill="rgb(241,32,17)" rx="2" ry="2" />
<text  x="13.79" y="1311.5" ></text>
</g>
<g >
<title>iptable_filter_hook (9,990,292 samples, 0.01%)</title><rect x="567.7" y="1349" width="0.1" height="15.0" fill="rgb(250,144,24)" rx="2" ry="2" />
<text  x="570.69" y="1359.5" ></text>
</g>
<g >
<title>__lru_cache_add (117,704,681 samples, 0.13%)</title><rect x="210.6" y="1221" width="1.5" height="15.0" fill="rgb(213,35,12)" rx="2" ry="2" />
<text  x="213.57" y="1231.5" ></text>
</g>
<g >
<title>nf_hook_slow (7,924,548 samples, 0.01%)</title><rect x="42.3" y="1045" width="0.1" height="15.0" fill="rgb(248,120,13)" rx="2" ry="2" />
<text  x="45.29" y="1055.5" ></text>
</g>
<g >
<title>do_futex (59,032,110 samples, 0.07%)</title><rect x="136.4" y="1493" width="0.8" height="15.0" fill="rgb(249,158,5)" rx="2" ry="2" />
<text  x="139.43" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1333" width="0.3" height="15.0" fill="rgb(223,24,11)" rx="2" ry="2" />
<text  x="102.79" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="357" width="18.3" height="15.0" fill="rgb(248,174,17)" rx="2" ry="2" />
<text  x="113.16" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="693" width="0.8" height="15.0" fill="rgb(252,110,14)" rx="2" ry="2" />
<text  x="101.56" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="805" width="3.6" height="15.0" fill="rgb(221,183,12)" rx="2" ry="2" />
<text  x="109.59" y="815.5" ></text>
</g>
<g >
<title>operator new (15,752,744 samples, 0.02%)</title><rect x="98.1" y="181" width="0.2" height="15.0" fill="rgb(236,71,30)" rx="2" ry="2" />
<text  x="101.08" y="191.5" ></text>
</g>
<g >
<title>do_sys_poll (147,270,225 samples, 0.17%)</title><rect x="134.0" y="1509" width="1.9" height="15.0" fill="rgb(214,212,23)" rx="2" ry="2" />
<text  x="136.96" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="197" width="0.8" height="15.0" fill="rgb(214,161,39)" rx="2" ry="2" />
<text  x="101.56" y="207.5" ></text>
</g>
<g >
<title>do_nanosleep (14,603,130 samples, 0.02%)</title><rect x="13.2" y="1509" width="0.2" height="15.0" fill="rgb(216,79,30)" rx="2" ry="2" />
<text  x="16.25" y="1519.5" ></text>
</g>
<g >
<title>__page_cache_alloc (674,894,623 samples, 0.76%)</title><rect x="195.2" y="1253" width="8.9" height="15.0" fill="rgb(208,82,28)" rx="2" ry="2" />
<text  x="198.17" y="1263.5" ></text>
</g>
<g >
<title>operator new (213,581,288 samples, 0.24%)</title><rect x="123.6" y="101" width="2.8" height="15.0" fill="rgb(239,47,52)" rx="2" ry="2" />
<text  x="126.61" y="111.5" ></text>
</g>
<g >
<title>rw_verify_area (42,222,823 samples, 0.05%)</title><rect x="744.2" y="1429" width="0.6" height="15.0" fill="rgb(252,181,39)" rx="2" ry="2" />
<text  x="747.24" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="293" width="0.4" height="15.0" fill="rgb(247,102,40)" rx="2" ry="2" />
<text  x="56.88" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="853" width="3.0" height="15.0" fill="rgb(208,222,51)" rx="2" ry="2" />
<text  x="131.55" y="863.5" ></text>
</g>
<g >
<title>kmem_cache_free (32,742,877 samples, 0.04%)</title><rect x="514.5" y="1285" width="0.4" height="15.0" fill="rgb(216,182,29)" rx="2" ry="2" />
<text  x="517.47" y="1295.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (13,780,832 samples, 0.02%)</title><rect x="594.5" y="1589" width="0.2" height="15.0" fill="rgb(225,188,5)" rx="2" ry="2" />
<text  x="597.55" y="1599.5" ></text>
</g>
<g >
<title>__fget_light (11,127,922 samples, 0.01%)</title><rect x="95.6" y="1509" width="0.2" height="15.0" fill="rgb(220,68,20)" rx="2" ry="2" />
<text  x="98.61" y="1519.5" ></text>
</g>
<g >
<title>ip_vs_proto_data_get (11,341,837 samples, 0.01%)</title><rect x="1169.9" y="917" width="0.2" height="15.0" fill="rgb(206,3,54)" rx="2" ry="2" />
<text  x="1172.92" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="981" width="1.4" height="15.0" fill="rgb(233,153,12)" rx="2" ry="2" />
<text  x="100.15" y="991.5" ></text>
</g>
<g >
<title>ip_vs_reply4 (7,558,864 samples, 0.01%)</title><rect x="529.8" y="1317" width="0.1" height="15.0" fill="rgb(252,35,25)" rx="2" ry="2" />
<text  x="532.81" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1141" width="0.4" height="15.0" fill="rgb(222,174,30)" rx="2" ry="2" />
<text  x="56.54" y="1151.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (613,538,000 samples, 0.69%)</title><rect x="641.9" y="1413" width="8.1" height="15.0" fill="rgb(233,93,44)" rx="2" ry="2" />
<text  x="644.90" y="1423.5" ></text>
</g>
<g >
<title>menu_reflect (8,179,746 samples, 0.01%)</title><rect x="588.8" y="1589" width="0.1" height="15.0" fill="rgb(244,202,23)" rx="2" ry="2" />
<text  x="591.80" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1557" width="0.3" height="15.0" fill="rgb(252,201,28)" rx="2" ry="2" />
<text  x="102.79" y="1567.5" ></text>
</g>
<g >
<title>_int_free (14,089,099 samples, 0.02%)</title><rect x="65.8" y="341" width="0.1" height="15.0" fill="rgb(214,174,34)" rx="2" ry="2" />
<text  x="68.76" y="351.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (20,862,532 samples, 0.02%)</title><rect x="585.3" y="1541" width="0.2" height="15.0" fill="rgb(213,100,25)" rx="2" ry="2" />
<text  x="588.26" y="1551.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_fn (41,685,191 samples, 0.05%)</title><rect x="574.9" y="1365" width="0.5" height="15.0" fill="rgb(234,109,23)" rx="2" ry="2" />
<text  x="577.86" y="1375.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (46,018,153 samples, 0.05%)</title><rect x="602.4" y="1461" width="0.6" height="15.0" fill="rgb(205,59,30)" rx="2" ry="2" />
<text  x="605.35" y="1471.5" ></text>
</g>
<g >
<title>dbs_work_handler (7,940,672 samples, 0.01%)</title><rect x="45.5" y="1589" width="0.2" height="15.0" fill="rgb(229,126,4)" rx="2" ry="2" />
<text  x="48.55" y="1599.5" ></text>
</g>
<g >
<title>operator new (10,900,891 samples, 0.01%)</title><rect x="75.3" y="853" width="0.2" height="15.0" fill="rgb(209,78,16)" rx="2" ry="2" />
<text  x="78.34" y="863.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (18,272,925 samples, 0.02%)</title><rect x="1163.9" y="789" width="0.3" height="15.0" fill="rgb(230,215,29)" rx="2" ry="2" />
<text  x="1166.93" y="799.5" ></text>
</g>
<g >
<title>lj_tab_newkey (86,523,686 samples, 0.10%)</title><rect x="1120.7" y="1509" width="1.1" height="15.0" fill="rgb(220,95,49)" rx="2" ry="2" />
<text  x="1123.67" y="1519.5" ></text>
</g>
<g >
<title>irq_exit (60,108,550 samples, 0.07%)</title><rect x="650.3" y="1445" width="0.8" height="15.0" fill="rgb(233,226,42)" rx="2" ry="2" />
<text  x="653.30" y="1455.5" ></text>
</g>
<g >
<title>lj_BC_LEN (2,353,190,470 samples, 2.64%)</title><rect x="1033.5" y="1541" width="31.1" height="15.0" fill="rgb(230,223,30)" rx="2" ry="2" />
<text  x="1036.49" y="1551.5" >lj..</text>
</g>
<g >
<title>tcp_delack_timer_handler (7,562,575 samples, 0.01%)</title><rect x="650.9" y="1349" width="0.1" height="15.0" fill="rgb(239,54,11)" rx="2" ry="2" />
<text  x="653.91" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,587,269,319 samples, 1.78%)</title><rect x="59.4" y="1189" width="21.0" height="15.0" fill="rgb(209,25,51)" rx="2" ry="2" />
<text  x="62.41" y="1199.5" ></text>
</g>
<g >
<title>blk_update_request (479,074,539 samples, 0.54%)</title><rect x="511.6" y="1397" width="6.4" height="15.0" fill="rgb(211,180,7)" rx="2" ry="2" />
<text  x="514.64" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,271,264 samples, 0.55%)</title><rect x="100.1" y="757" width="6.5" height="15.0" fill="rgb(252,211,38)" rx="2" ry="2" />
<text  x="103.13" y="767.5" ></text>
</g>
<g >
<title>tcp_mt (10,583,201 samples, 0.01%)</title><rect x="572.7" y="1365" width="0.1" height="15.0" fill="rgb(214,55,53)" rx="2" ry="2" />
<text  x="575.69" y="1375.5" ></text>
</g>
<g >
<title>dbs_update_util_handler (14,126,597 samples, 0.02%)</title><rect x="248.4" y="1349" width="0.2" height="15.0" fill="rgb(218,143,36)" rx="2" ry="2" />
<text  x="251.40" y="1359.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (55,585,099 samples, 0.06%)</title><rect x="543.7" y="933" width="0.7" height="15.0" fill="rgb(233,87,3)" rx="2" ry="2" />
<text  x="546.68" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1013" width="0.4" height="15.0" fill="rgb(220,12,50)" rx="2" ry="2" />
<text  x="56.54" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="245" width="0.4" height="15.0" fill="rgb(246,64,45)" rx="2" ry="2" />
<text  x="56.54" y="255.5" ></text>
</g>
<g >
<title>iptable_mangle_hook (8,199,125 samples, 0.01%)</title><rect x="557.5" y="1141" width="0.1" height="15.0" fill="rgb(209,180,10)" rx="2" ry="2" />
<text  x="560.48" y="1151.5" ></text>
</g>
<g >
<title>lj_mem_realloc (19,697,739 samples, 0.02%)</title><rect x="1121.5" y="1461" width="0.3" height="15.0" fill="rgb(211,33,16)" rx="2" ry="2" />
<text  x="1124.54" y="1471.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (15,846,606 samples, 0.02%)</title><rect x="167.6" y="1205" width="0.2" height="15.0" fill="rgb(237,27,49)" rx="2" ry="2" />
<text  x="170.60" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,448,485 samples, 0.55%)</title><rect x="100.1" y="1205" width="6.5" height="15.0" fill="rgb(242,67,51)" rx="2" ry="2" />
<text  x="103.13" y="1215.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (9,994,874 samples, 0.01%)</title><rect x="1167.8" y="853" width="0.1" height="15.0" fill="rgb(224,215,48)" rx="2" ry="2" />
<text  x="1170.76" y="863.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (14,956,324 samples, 0.02%)</title><rect x="705.3" y="1477" width="0.2" height="15.0" fill="rgb(217,116,7)" rx="2" ry="2" />
<text  x="708.33" y="1487.5" ></text>
</g>
<g >
<title>nf_hook_slow (256,980,246 samples, 0.29%)</title><rect x="733.1" y="901" width="3.4" height="15.0" fill="rgb(229,221,22)" rx="2" ry="2" />
<text  x="736.12" y="911.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (89,950,007 samples, 0.10%)</title><rect x="164.7" y="1221" width="1.2" height="15.0" fill="rgb(243,137,52)" rx="2" ry="2" />
<text  x="167.72" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (69,561,894 samples, 0.08%)</title><rect x="129.7" y="117" width="0.9" height="15.0" fill="rgb(214,204,6)" rx="2" ry="2" />
<text  x="132.67" y="127.5" ></text>
</g>
<g >
<title>ipt_do_table (8,669,948 samples, 0.01%)</title><rect x="559.2" y="1333" width="0.1" height="15.0" fill="rgb(228,119,38)" rx="2" ry="2" />
<text  x="562.20" y="1343.5" ></text>
</g>
<g >
<title>skb_release_head_state (26,919,054 samples, 0.03%)</title><rect x="726.7" y="1301" width="0.4" height="15.0" fill="rgb(227,184,22)" rx="2" ry="2" />
<text  x="729.72" y="1311.5" ></text>
</g>
<g >
<title>skb_checksum (38,932,129 samples, 0.04%)</title><rect x="1155.7" y="437" width="0.5" height="15.0" fill="rgb(241,127,53)" rx="2" ry="2" />
<text  x="1158.68" y="447.5" ></text>
</g>
<g >
<title>nf_conntrack_in (42,766,083 samples, 0.05%)</title><rect x="729.9" y="1173" width="0.6" height="15.0" fill="rgb(210,88,16)" rx="2" ry="2" />
<text  x="732.95" y="1183.5" ></text>
</g>
<g >
<title>ipt_do_table (8,913,950 samples, 0.01%)</title><rect x="1156.4" y="565" width="0.2" height="15.0" fill="rgb(221,120,27)" rx="2" ry="2" />
<text  x="1159.44" y="575.5" ></text>
</g>
<g >
<title>lj_str_bufnum (154,725,734 samples, 0.17%)</title><rect x="681.7" y="1605" width="2.1" height="15.0" fill="rgb(215,120,10)" rx="2" ry="2" />
<text  x="684.75" y="1615.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (10,704,040 samples, 0.01%)</title><rect x="889.4" y="1429" width="0.2" height="15.0" fill="rgb(222,170,3)" rx="2" ry="2" />
<text  x="892.42" y="1439.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (20,411,740 samples, 0.02%)</title><rect x="41.8" y="1205" width="0.2" height="15.0" fill="rgb(215,9,53)" rx="2" ry="2" />
<text  x="44.76" y="1215.5" ></text>
</g>
<g >
<title>call_timer_fn (8,219,462 samples, 0.01%)</title><rect x="650.9" y="1381" width="0.1" height="15.0" fill="rgb(225,214,30)" rx="2" ry="2" />
<text  x="653.90" y="1391.5" ></text>
</g>
<g >
<title>tick_sched_handle (51,978,347 samples, 0.06%)</title><rect x="642.5" y="1301" width="0.7" height="15.0" fill="rgb(237,2,10)" rx="2" ry="2" />
<text  x="645.47" y="1311.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (25,607,309 samples, 0.03%)</title><rect x="217.5" y="1221" width="0.3" height="15.0" fill="rgb(209,204,10)" rx="2" ry="2" />
<text  x="220.51" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1365" width="0.4" height="15.0" fill="rgb(241,56,29)" rx="2" ry="2" />
<text  x="56.54" y="1375.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (13,957,757 samples, 0.02%)</title><rect x="569.4" y="1221" width="0.2" height="15.0" fill="rgb(243,171,49)" rx="2" ry="2" />
<text  x="572.43" y="1231.5" ></text>
</g>
<g >
<title>fib_validate_source (20,898,359 samples, 0.02%)</title><rect x="1171.9" y="917" width="0.2" height="15.0" fill="rgb(245,128,23)" rx="2" ry="2" />
<text  x="1174.87" y="927.5" ></text>
</g>
<g >
<title>cp_new_stat (10,568,842 samples, 0.01%)</title><rect x="88.1" y="1509" width="0.1" height="15.0" fill="rgb(220,218,7)" rx="2" ry="2" />
<text  x="91.10" y="1519.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (193,819,738 samples, 0.22%)</title><rect x="216.1" y="1269" width="2.5" height="15.0" fill="rgb(218,139,5)" rx="2" ry="2" />
<text  x="219.08" y="1279.5" ></text>
</g>
<g >
<title>lj_str_new (57,854,723 samples, 0.06%)</title><rect x="689.8" y="1637" width="0.7" height="15.0" fill="rgb(237,104,0)" rx="2" ry="2" />
<text  x="692.78" y="1647.5" ></text>
</g>
<g >
<title>br_netif_receive_skb (974,066,676 samples, 1.09%)</title><rect x="545.2" y="1301" width="12.9" height="15.0" fill="rgb(239,64,44)" rx="2" ry="2" />
<text  x="548.21" y="1311.5" ></text>
</g>
<g >
<title>ip_vs_out (214,128,411 samples, 0.24%)</title><rect x="564.9" y="1333" width="2.8" height="15.0" fill="rgb(239,66,52)" rx="2" ry="2" />
<text  x="567.86" y="1343.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (9,918,216 samples, 0.01%)</title><rect x="255.8" y="1205" width="0.2" height="15.0" fill="rgb(212,217,54)" rx="2" ry="2" />
<text  x="258.84" y="1215.5" ></text>
</g>
<g >
<title>__vfs_write (76,080,201 samples, 0.09%)</title><rect x="239.0" y="1413" width="1.0" height="15.0" fill="rgb(254,44,44)" rx="2" ry="2" />
<text  x="242.01" y="1423.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (2,956,028,520 samples, 3.31%)</title><rect x="54.4" y="1621" width="39.1" height="15.0" fill="rgb(239,186,46)" rx="2" ry="2" />
<text  x="57.35" y="1631.5" >Ino..</text>
</g>
<g >
<title>__mpn_cmp (11,513,683 samples, 0.01%)</title><rect x="1111.1" y="1429" width="0.2" height="15.0" fill="rgb(232,204,49)" rx="2" ry="2" />
<text  x="1114.11" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,271,264 samples, 0.55%)</title><rect x="100.1" y="565" width="6.5" height="15.0" fill="rgb(254,98,53)" rx="2" ry="2" />
<text  x="103.13" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="245" width="0.3" height="15.0" fill="rgb(245,139,34)" rx="2" ry="2" />
<text  x="102.79" y="255.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (20,782,050 samples, 0.02%)</title><rect x="741.9" y="1013" width="0.3" height="15.0" fill="rgb(216,42,52)" rx="2" ry="2" />
<text  x="744.88" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,549,793 samples, 0.12%)</title><rect x="97.2" y="677" width="1.4" height="15.0" fill="rgb(219,92,25)" rx="2" ry="2" />
<text  x="100.15" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="709" width="0.4" height="15.0" fill="rgb(228,130,49)" rx="2" ry="2" />
<text  x="56.54" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (94,126,541 samples, 0.11%)</title><rect x="80.4" y="1189" width="1.3" height="15.0" fill="rgb(247,8,21)" rx="2" ry="2" />
<text  x="83.42" y="1199.5" ></text>
</g>
<g >
<title>do_IRQ (118,444,017 samples, 0.13%)</title><rect x="639.3" y="1381" width="1.6" height="15.0" fill="rgb(254,83,54)" rx="2" ry="2" />
<text  x="642.34" y="1391.5" ></text>
</g>
<g >
<title>dev_queue_xmit (23,040,465 samples, 0.03%)</title><rect x="550.2" y="773" width="0.3" height="15.0" fill="rgb(233,118,1)" rx="2" ry="2" />
<text  x="553.19" y="783.5" ></text>
</g>
<g >
<title>execute_command_internal (10,770,341 samples, 0.01%)</title><rect x="10.8" y="1157" width="0.1" height="15.0" fill="rgb(234,107,21)" rx="2" ry="2" />
<text  x="13.80" y="1167.5" ></text>
</g>
<g >
<title>activate_task (38,739,003 samples, 0.04%)</title><rect x="145.8" y="1205" width="0.5" height="15.0" fill="rgb(242,155,33)" rx="2" ry="2" />
<text  x="148.76" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,154,564,627 samples, 1.29%)</title><rect x="60.4" y="917" width="15.3" height="15.0" fill="rgb(239,11,34)" rx="2" ry="2" />
<text  x="63.44" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1029" width="3.6" height="15.0" fill="rgb(234,156,25)" rx="2" ry="2" />
<text  x="109.59" y="1039.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (9,330,935 samples, 0.01%)</title><rect x="165.8" y="1205" width="0.1" height="15.0" fill="rgb(235,205,23)" rx="2" ry="2" />
<text  x="168.77" y="1215.5" ></text>
</g>
<g >
<title>fib_table_lookup (9,166,114 samples, 0.01%)</title><rect x="739.1" y="805" width="0.1" height="15.0" fill="rgb(247,0,11)" rx="2" ry="2" />
<text  x="742.10" y="815.5" ></text>
</g>
<g >
<title>blk_mq_do_dispatch_sched (66,974,382 samples, 0.08%)</title><rect x="35.9" y="1317" width="0.9" height="15.0" fill="rgb(216,42,52)" rx="2" ry="2" />
<text  x="38.91" y="1327.5" ></text>
</g>
<g >
<title>__remove_hrtimer (14,167,068 samples, 0.02%)</title><rect x="247.3" y="1477" width="0.1" height="15.0" fill="rgb(252,48,39)" rx="2" ry="2" />
<text  x="250.25" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1093" width="3.6" height="15.0" fill="rgb(234,227,2)" rx="2" ry="2" />
<text  x="109.59" y="1103.5" ></text>
</g>
<g >
<title>local.runtime.park_m (34,133,082 samples, 0.04%)</title><rect x="12.7" y="1637" width="0.4" height="15.0" fill="rgb(209,117,30)" rx="2" ry="2" />
<text  x="15.65" y="1647.5" ></text>
</g>
<g >
<title>nf_hook_slow (157,104,262 samples, 0.18%)</title><rect x="568.0" y="1365" width="2.1" height="15.0" fill="rgb(240,24,11)" rx="2" ry="2" />
<text  x="571.01" y="1375.5" ></text>
</g>
<g >
<title>lj_BC_RET1 (366,553,214 samples, 0.41%)</title><rect x="1068.4" y="1541" width="4.8" height="15.0" fill="rgb(242,85,13)" rx="2" ry="2" />
<text  x="1071.37" y="1551.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (45,933,290 samples, 0.05%)</title><rect x="56.9" y="1525" width="0.6" height="15.0" fill="rgb(211,145,19)" rx="2" ry="2" />
<text  x="59.89" y="1535.5" ></text>
</g>
<g >
<title>nf_hook_slow (221,359,759 samples, 0.25%)</title><rect x="542.1" y="1285" width="2.9" height="15.0" fill="rgb(212,160,3)" rx="2" ry="2" />
<text  x="545.06" y="1295.5" ></text>
</g>
<g >
<title>veth_xmit (11,577,626 samples, 0.01%)</title><rect x="737.9" y="789" width="0.1" height="15.0" fill="rgb(224,67,34)" rx="2" ry="2" />
<text  x="740.89" y="799.5" ></text>
</g>
<g >
<title>kmem_cache_free (11,840,337 samples, 0.01%)</title><rect x="552.7" y="1013" width="0.2" height="15.0" fill="rgb(225,184,31)" rx="2" ry="2" />
<text  x="555.72" y="1023.5" ></text>
</g>
<g >
<title>operator new (8,619,510 samples, 0.01%)</title><rect x="138.7" y="1637" width="0.2" height="15.0" fill="rgb(215,48,25)" rx="2" ry="2" />
<text  x="141.74" y="1647.5" ></text>
</g>
<g >
<title>veth_xmit (7,877,136 samples, 0.01%)</title><rect x="1164.0" y="757" width="0.1" height="15.0" fill="rgb(239,215,1)" rx="2" ry="2" />
<text  x="1167.02" y="767.5" ></text>
</g>
<g >
<title>menu_select (88,613,496 samples, 0.10%)</title><rect x="651.6" y="1509" width="1.2" height="15.0" fill="rgb(219,162,2)" rx="2" ry="2" />
<text  x="654.58" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,141,565,526 samples, 2.40%)</title><rect x="58.4" y="1477" width="28.4" height="15.0" fill="rgb(238,72,54)" rx="2" ry="2" />
<text  x="61.42" y="1487.5" >st..</text>
</g>
<g >
<title>Watcher::isIgnored (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1637" width="0.8" height="15.0" fill="rgb(246,13,54)" rx="2" ry="2" />
<text  x="101.56" y="1647.5" ></text>
</g>
<g >
<title>__wake_up (48,123,208 samples, 0.05%)</title><rect x="555.9" y="981" width="0.6" height="15.0" fill="rgb(253,27,5)" rx="2" ry="2" />
<text  x="558.87" y="991.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/libnetwork/networkdb.(*NetworkDB).handleBulkSync (14,578,514 samples, 0.02%)</title><rect x="12.1" y="1557" width="0.2" height="15.0" fill="rgb(229,127,52)" rx="2" ry="2" />
<text  x="15.13" y="1567.5" ></text>
</g>
<g >
<title>nf_hook_slow (49,396,988 samples, 0.06%)</title><rect x="530.1" y="1317" width="0.6" height="15.0" fill="rgb(240,65,31)" rx="2" ry="2" />
<text  x="533.07" y="1327.5" ></text>
</g>
<g >
<title>nf_hook_slow (15,726,439 samples, 0.02%)</title><rect x="550.9" y="949" width="0.2" height="15.0" fill="rgb(237,71,10)" rx="2" ry="2" />
<text  x="553.85" y="959.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (503,267,021 samples, 0.56%)</title><rect x="526.3" y="1365" width="6.6" height="15.0" fill="rgb(245,33,7)" rx="2" ry="2" />
<text  x="529.27" y="1375.5" ></text>
</g>
<g >
<title>sk_reset_timer (29,826,995 samples, 0.03%)</title><rect x="551.3" y="1045" width="0.4" height="15.0" fill="rgb(243,34,34)" rx="2" ry="2" />
<text  x="554.26" y="1055.5" ></text>
</g>
<g >
<title>ext4_write_end (19,113,382 samples, 0.02%)</title><rect x="147.7" y="1317" width="0.2" height="15.0" fill="rgb(251,73,50)" rx="2" ry="2" />
<text  x="150.65" y="1327.5" ></text>
</g>
<g >
<title>ext4_ind_map_blocks (1,986,760,559 samples, 2.23%)</title><rect x="166.0" y="1221" width="26.3" height="15.0" fill="rgb(233,83,12)" rx="2" ry="2" />
<text  x="169.00" y="1231.5" >e..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (213,151,458 samples, 0.24%)</title><rect x="62.4" y="325" width="2.8" height="15.0" fill="rgb(217,41,11)" rx="2" ry="2" />
<text  x="65.37" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,621,857 samples, 0.55%)</title><rect x="100.1" y="1429" width="6.5" height="15.0" fill="rgb(246,97,39)" rx="2" ry="2" />
<text  x="103.13" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="597" width="0.3" height="15.0" fill="rgb(210,211,45)" rx="2" ry="2" />
<text  x="102.79" y="607.5" ></text>
</g>
<g >
<title>xas_set_mark (12,226,174 samples, 0.01%)</title><rect x="32.6" y="1477" width="0.1" height="15.0" fill="rgb(214,31,35)" rx="2" ry="2" />
<text  x="35.56" y="1487.5" ></text>
</g>
<g >
<title>tcp_in_window (19,150,299 samples, 0.02%)</title><rect x="560.2" y="1301" width="0.3" height="15.0" fill="rgb(235,228,26)" rx="2" ry="2" />
<text  x="563.20" y="1311.5" ></text>
</g>
<g >
<title>pick_next_task_fair (11,998,350 samples, 0.01%)</title><rect x="653.3" y="1493" width="0.2" height="15.0" fill="rgb(220,177,35)" rx="2" ry="2" />
<text  x="656.35" y="1503.5" ></text>
</g>
<g >
<title>__GI___select (8,128,429 samples, 0.01%)</title><rect x="242.2" y="1573" width="0.1" height="15.0" fill="rgb(222,26,21)" rx="2" ry="2" />
<text  x="245.19" y="1583.5" ></text>
</g>
<g >
<title>kworker/7:0-eve (26,585,504 samples, 0.03%)</title><rect x="47.3" y="1669" width="0.3" height="15.0" fill="rgb(243,152,0)" rx="2" ry="2" />
<text  x="50.28" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,821,443 samples, 0.01%)</title><rect x="110.0" y="181" width="0.2" height="15.0" fill="rgb(211,101,15)" rx="2" ry="2" />
<text  x="113.02" y="191.5" ></text>
</g>
<g >
<title>ret_from_fork (26,530,027 samples, 0.03%)</title><rect x="47.3" y="1653" width="0.3" height="15.0" fill="rgb(227,80,21)" rx="2" ry="2" />
<text  x="50.28" y="1663.5" ></text>
</g>
<g >
<title>tcp_rcv_established (9,488,479 samples, 0.01%)</title><rect x="251.7" y="1093" width="0.1" height="15.0" fill="rgb(241,205,49)" rx="2" ry="2" />
<text  x="254.66" y="1103.5" ></text>
</g>
<g >
<title>ep_poll (7,920,944 samples, 0.01%)</title><rect x="12.7" y="1509" width="0.1" height="15.0" fill="rgb(243,30,46)" rx="2" ry="2" />
<text  x="15.74" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1605" width="0.4" height="15.0" fill="rgb(251,19,13)" rx="2" ry="2" />
<text  x="56.54" y="1615.5" ></text>
</g>
<g >
<title>sch_direct_xmit (134,881,794 samples, 0.15%)</title><rect x="1154.4" y="517" width="1.8" height="15.0" fill="rgb(253,142,25)" rx="2" ry="2" />
<text  x="1157.42" y="527.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (65,521,236 samples, 0.07%)</title><rect x="30.6" y="1429" width="0.8" height="15.0" fill="rgb(210,19,8)" rx="2" ry="2" />
<text  x="33.58" y="1439.5" ></text>
</g>
<g >
<title>blk_rq_merge_ok (15,521,706 samples, 0.02%)</title><rect x="35.6" y="1413" width="0.2" height="15.0" fill="rgb(249,225,8)" rx="2" ry="2" />
<text  x="38.64" y="1423.5" ></text>
</g>
<g >
<title>__brelse (8,857,271 samples, 0.01%)</title><rect x="169.8" y="1173" width="0.1" height="15.0" fill="rgb(208,195,13)" rx="2" ry="2" />
<text  x="172.76" y="1183.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (11,291,256 samples, 0.01%)</title><rect x="251.6" y="1125" width="0.2" height="15.0" fill="rgb(215,100,6)" rx="2" ry="2" />
<text  x="254.64" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="261" width="0.9" height="15.0" fill="rgb(216,51,10)" rx="2" ry="2" />
<text  x="134.54" y="271.5" ></text>
</g>
<g >
<title>__netif_receive_skb (8,985,390 samples, 0.01%)</title><rect x="899.1" y="1381" width="0.1" height="15.0" fill="rgb(252,136,36)" rx="2" ry="2" />
<text  x="902.10" y="1391.5" ></text>
</g>
<g >
<title>udp4_lib_lookup_skb (23,580,579 samples, 0.03%)</title><rect x="523.6" y="1333" width="0.3" height="15.0" fill="rgb(242,71,47)" rx="2" ry="2" />
<text  x="526.61" y="1343.5" ></text>
</g>
<g >
<title>process_backlog (8,985,390 samples, 0.01%)</title><rect x="899.1" y="1397" width="0.1" height="15.0" fill="rgb(208,179,49)" rx="2" ry="2" />
<text  x="902.10" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="981" width="6.5" height="15.0" fill="rgb(240,155,19)" rx="2" ry="2" />
<text  x="103.13" y="991.5" ></text>
</g>
<g >
<title>inet_lookup_ifaddr_rcu (7,662,436 samples, 0.01%)</title><rect x="1172.0" y="901" width="0.1" height="15.0" fill="rgb(207,46,21)" rx="2" ry="2" />
<text  x="1175.05" y="911.5" ></text>
</g>
<g >
<title>lj_BC_TSETS (102,121,194 samples, 0.11%)</title><rect x="1098.3" y="1541" width="1.4" height="15.0" fill="rgb(210,98,4)" rx="2" ry="2" />
<text  x="1101.35" y="1551.5" ></text>
</g>
<g >
<title>resizestack (40,356,254 samples, 0.05%)</title><rect x="691.4" y="1541" width="0.5" height="15.0" fill="rgb(213,19,29)" rx="2" ry="2" />
<text  x="694.37" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1317" width="1.4" height="15.0" fill="rgb(241,101,52)" rx="2" ry="2" />
<text  x="100.15" y="1327.5" ></text>
</g>
<g >
<title>psi_task_change (83,846,343 samples, 0.09%)</title><rect x="710.0" y="1397" width="1.1" height="15.0" fill="rgb(227,182,28)" rx="2" ry="2" />
<text  x="713.02" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="533" width="3.0" height="15.0" fill="rgb(229,22,24)" rx="2" ry="2" />
<text  x="131.55" y="543.5" ></text>
</g>
<g >
<title>do_epoll_wait (9,962,231 samples, 0.01%)</title><rect x="12.7" y="1525" width="0.2" height="15.0" fill="rgb(243,161,7)" rx="2" ry="2" />
<text  x="15.72" y="1535.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (18,261,723 samples, 0.02%)</title><rect x="42.2" y="1173" width="0.3" height="15.0" fill="rgb(242,222,39)" rx="2" ry="2" />
<text  x="45.25" y="1183.5" ></text>
</g>
<g >
<title>kfree_skbmem (9,466,558 samples, 0.01%)</title><rect x="519.9" y="1397" width="0.1" height="15.0" fill="rgb(250,163,38)" rx="2" ry="2" />
<text  x="522.90" y="1407.5" ></text>
</g>
<g >
<title>nf_conntrack_in (11,095,760 samples, 0.01%)</title><rect x="1137.3" y="1173" width="0.1" height="15.0" fill="rgb(215,87,54)" rx="2" ry="2" />
<text  x="1140.28" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,621,857 samples, 0.55%)</title><rect x="100.1" y="1445" width="6.5" height="15.0" fill="rgb(215,208,24)" rx="2" ry="2" />
<text  x="103.13" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="565" width="3.0" height="15.0" fill="rgb(232,114,24)" rx="2" ry="2" />
<text  x="131.55" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1349" width="0.9" height="15.0" fill="rgb(214,45,39)" rx="2" ry="2" />
<text  x="134.54" y="1359.5" ></text>
</g>
<g >
<title>br_nf_hook_thresh (289,758,173 samples, 0.32%)</title><rect x="534.5" y="1317" width="3.9" height="15.0" fill="rgb(206,139,43)" rx="2" ry="2" />
<text  x="537.52" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="789" width="3.0" height="15.0" fill="rgb(238,92,9)" rx="2" ry="2" />
<text  x="131.55" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="517" width="3.6" height="15.0" fill="rgb(221,31,1)" rx="2" ry="2" />
<text  x="109.59" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="261" width="0.8" height="15.0" fill="rgb(211,56,46)" rx="2" ry="2" />
<text  x="101.56" y="271.5" ></text>
</g>
<g >
<title>iov_iter_fault_in_readable (71,933,944 samples, 0.08%)</title><rect x="235.8" y="1301" width="0.9" height="15.0" fill="rgb(241,91,22)" rx="2" ry="2" />
<text  x="238.78" y="1311.5" ></text>
</g>
<g >
<title>irq_exit (21,609,438 samples, 0.02%)</title><rect x="889.7" y="1413" width="0.3" height="15.0" fill="rgb(205,0,19)" rx="2" ry="2" />
<text  x="892.68" y="1423.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (16,230,415 samples, 0.02%)</title><rect x="1028.1" y="1461" width="0.2" height="15.0" fill="rgb(209,149,36)" rx="2" ry="2" />
<text  x="1031.11" y="1471.5" ></text>
</g>
<g >
<title>ion (127,632,144 samples, 0.14%)</title><rect x="238.5" y="1541" width="1.7" height="15.0" fill="rgb(210,177,0)" rx="2" ry="2" />
<text  x="241.47" y="1551.5" ></text>
</g>
<g >
<title>br_nf_pre_routing (58,418,782 samples, 0.07%)</title><rect x="251.1" y="1381" width="0.8" height="15.0" fill="rgb(251,113,54)" rx="2" ry="2" />
<text  x="254.11" y="1391.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (269,070,615 samples, 0.30%)</title><rect x="534.7" y="1301" width="3.6" height="15.0" fill="rgb(212,98,49)" rx="2" ry="2" />
<text  x="537.74" y="1311.5" ></text>
</g>
<g >
<title>should_fail_alloc_page (10,483,678 samples, 0.01%)</title><rect x="203.8" y="1221" width="0.2" height="15.0" fill="rgb(229,99,8)" rx="2" ry="2" />
<text  x="206.85" y="1231.5" ></text>
</g>
<g >
<title>__mod_memcg_state (10,280,158 samples, 0.01%)</title><rect x="206.4" y="1189" width="0.1" height="15.0" fill="rgb(242,72,18)" rx="2" ry="2" />
<text  x="209.39" y="1199.5" ></text>
</g>
<g >
<title>x86_pmu_disable (43,949,750 samples, 0.05%)</title><rect x="642.6" y="1221" width="0.5" height="15.0" fill="rgb(245,27,16)" rx="2" ry="2" />
<text  x="645.57" y="1231.5" ></text>
</g>
<g >
<title>hpet_clkevt_set_next_event (35,024,656 samples, 0.04%)</title><rect x="505.1" y="1461" width="0.5" height="15.0" fill="rgb(208,221,46)" rx="2" ry="2" />
<text  x="508.12" y="1471.5" ></text>
</g>
<g >
<title>irq_exit (435,145,503 samples, 0.49%)</title><rect x="250.6" y="1509" width="5.8" height="15.0" fill="rgb(247,102,49)" rx="2" ry="2" />
<text  x="253.60" y="1519.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (20,163,838 samples, 0.02%)</title><rect x="985.8" y="1445" width="0.3" height="15.0" fill="rgb(231,17,12)" rx="2" ry="2" />
<text  x="988.81" y="1455.5" ></text>
</g>
<g >
<title>ip_vs_out.part.0 (12,522,785 samples, 0.01%)</title><rect x="43.3" y="1413" width="0.1" height="15.0" fill="rgb(244,185,43)" rx="2" ry="2" />
<text  x="46.25" y="1423.5" ></text>
</g>
<g >
<title>tick_sched_timer (61,458,531 samples, 0.07%)</title><rect x="249.0" y="1477" width="0.8" height="15.0" fill="rgb(236,121,18)" rx="2" ry="2" />
<text  x="251.99" y="1487.5" ></text>
</g>
<g >
<title>update_blocked_averages (10,724,866 samples, 0.01%)</title><rect x="507.5" y="1429" width="0.1" height="15.0" fill="rgb(249,5,46)" rx="2" ry="2" />
<text  x="510.47" y="1439.5" ></text>
</g>
<g >
<title>xas_load (25,186,014 samples, 0.03%)</title><rect x="20.7" y="1461" width="0.4" height="15.0" fill="rgb(226,152,3)" rx="2" ry="2" />
<text  x="23.72" y="1471.5" ></text>
</g>
<g >
<title>process_backlog (8,107,841 samples, 0.01%)</title><rect x="1028.2" y="1429" width="0.1" height="15.0" fill="rgb(229,33,52)" rx="2" ry="2" />
<text  x="1031.22" y="1439.5" ></text>
</g>
<g >
<title>wake_up_process (10,968,872 samples, 0.01%)</title><rect x="575.7" y="1477" width="0.1" height="15.0" fill="rgb(251,99,42)" rx="2" ry="2" />
<text  x="578.66" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,377,516,406 samples, 1.54%)</title><rect x="59.9" y="1061" width="18.2" height="15.0" fill="rgb(206,169,41)" rx="2" ry="2" />
<text  x="62.87" y="1071.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (11,761,557 samples, 0.01%)</title><rect x="251.6" y="1157" width="0.2" height="15.0" fill="rgb(221,199,5)" rx="2" ry="2" />
<text  x="254.63" y="1167.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (100,153,569 samples, 0.11%)</title><rect x="559.3" y="1349" width="1.4" height="15.0" fill="rgb(229,217,15)" rx="2" ry="2" />
<text  x="562.33" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1589" width="1.4" height="15.0" fill="rgb(219,181,27)" rx="2" ry="2" />
<text  x="100.15" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="421" width="3.0" height="15.0" fill="rgb(212,111,18)" rx="2" ry="2" />
<text  x="131.55" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,014,882,016 samples, 2.26%)</title><rect x="58.5" y="1445" width="26.7" height="15.0" fill="rgb(215,39,13)" rx="2" ry="2" />
<text  x="61.55" y="1455.5" >s..</text>
</g>
<g >
<title>nf_ct_get_tuple (10,947,015 samples, 0.01%)</title><rect x="532.3" y="1301" width="0.2" height="15.0" fill="rgb(250,12,54)" rx="2" ry="2" />
<text  x="535.35" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (221,904,866 samples, 0.25%)</title><rect x="128.5" y="181" width="3.0" height="15.0" fill="rgb(224,14,2)" rx="2" ry="2" />
<text  x="131.55" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (319,873,741 samples, 0.36%)</title><rect x="62.2" y="373" width="4.2" height="15.0" fill="rgb(230,56,53)" rx="2" ry="2" />
<text  x="65.20" y="383.5" ></text>
</g>
<g >
<title>__slab_alloc (447,071,422 samples, 0.50%)</title><rect x="22.4" y="1397" width="5.9" height="15.0" fill="rgb(243,208,27)" rx="2" ry="2" />
<text  x="25.38" y="1407.5" ></text>
</g>
<g >
<title>nf_ct_get_tuple (8,620,496 samples, 0.01%)</title><rect x="1175.4" y="949" width="0.1" height="15.0" fill="rgb(229,89,2)" rx="2" ry="2" />
<text  x="1178.41" y="959.5" ></text>
</g>
<g >
<title>gc_traverse_trace.part.0 (33,963,141 samples, 0.04%)</title><rect x="919.5" y="1477" width="0.4" height="15.0" fill="rgb(223,173,21)" rx="2" ry="2" />
<text  x="922.47" y="1487.5" ></text>
</g>
<g >
<title>ip_rcv (1,210,800,994 samples, 1.36%)</title><rect x="1159.6" y="1013" width="16.1" height="15.0" fill="rgb(223,163,27)" rx="2" ry="2" />
<text  x="1162.65" y="1023.5" ></text>
</g>
<g >
<title>net_rx_action (17,393,985 samples, 0.02%)</title><rect x="889.7" y="1381" width="0.3" height="15.0" fill="rgb(207,227,26)" rx="2" ry="2" />
<text  x="892.73" y="1391.5" ></text>
</g>
<g >
<title>bnx2_start_xmit (43,918,842 samples, 0.05%)</title><rect x="1154.6" y="485" width="0.6" height="15.0" fill="rgb(205,43,36)" rx="2" ry="2" />
<text  x="1157.64" y="495.5" ></text>
</g>
<g >
<title>bio_advance (42,395,372 samples, 0.05%)</title><rect x="512.2" y="1381" width="0.6" height="15.0" fill="rgb(220,174,4)" rx="2" ry="2" />
<text  x="515.21" y="1391.5" ></text>
</g>
<g >
<title>fsnotify (172,432,395 samples, 0.19%)</title><rect x="144.5" y="1365" width="2.3" height="15.0" fill="rgb(224,154,6)" rx="2" ry="2" />
<text  x="147.49" y="1375.5" ></text>
</g>
<g >
<title>ret_from_fork (29,400,553 samples, 0.03%)</title><rect x="46.9" y="1653" width="0.4" height="15.0" fill="rgb(213,176,21)" rx="2" ry="2" />
<text  x="49.89" y="1663.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (682,228,763 samples, 0.77%)</title><rect x="1148.5" y="709" width="9.1" height="15.0" fill="rgb(239,83,35)" rx="2" ry="2" />
<text  x="1151.54" y="719.5" ></text>
</g>
<g >
<title>__vfs_read (1,460,170,151 samples, 1.64%)</title><rect x="724.8" y="1429" width="19.4" height="15.0" fill="rgb(248,102,33)" rx="2" ry="2" />
<text  x="727.84" y="1439.5" ></text>
</g>
<g >
<title>nf_conntrack_in (161,648,883 samples, 0.18%)</title><rect x="1135.0" y="1157" width="2.2" height="15.0" fill="rgb(238,229,1)" rx="2" ry="2" />
<text  x="1138.03" y="1167.5" ></text>
</g>
<g >
<title>xa_get_order (40,852,998 samples, 0.05%)</title><rect x="208.0" y="1221" width="0.6" height="15.0" fill="rgb(225,157,39)" rx="2" ry="2" />
<text  x="211.02" y="1231.5" ></text>
</g>
<g >
<title>dequeue_task_fair (26,752,298 samples, 0.03%)</title><rect x="135.0" y="1397" width="0.4" height="15.0" fill="rgb(233,38,4)" rx="2" ry="2" />
<text  x="138.01" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,195,783,261 samples, 2.46%)</title><rect x="57.7" y="1525" width="29.1" height="15.0" fill="rgb(208,211,8)" rx="2" ry="2" />
<text  x="60.74" y="1535.5" >st..</text>
</g>
<g >
<title>kthread (26,530,027 samples, 0.03%)</title><rect x="47.3" y="1637" width="0.3" height="15.0" fill="rgb(225,79,51)" rx="2" ry="2" />
<text  x="50.28" y="1647.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.isra.0 (39,959,360 samples, 0.04%)</title><rect x="740.0" y="997" width="0.5" height="15.0" fill="rgb(220,137,40)" rx="2" ry="2" />
<text  x="742.98" y="1007.5" ></text>
</g>
<g >
<title>ip_local_out (13,425,816 samples, 0.02%)</title><rect x="41.8" y="1125" width="0.2" height="15.0" fill="rgb(221,44,19)" rx="2" ry="2" />
<text  x="44.83" y="1135.5" ></text>
</g>
<g >
<title>ip_vs_conn_in_get (20,224,569 samples, 0.02%)</title><rect x="1161.3" y="885" width="0.3" height="15.0" fill="rgb(218,175,23)" rx="2" ry="2" />
<text  x="1164.32" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="757" width="1.4" height="15.0" fill="rgb(246,114,16)" rx="2" ry="2" />
<text  x="100.15" y="767.5" ></text>
</g>
<g >
<title>skb_free_head (15,267,254 samples, 0.02%)</title><rect x="553.1" y="997" width="0.2" height="15.0" fill="rgb(245,208,24)" rx="2" ry="2" />
<text  x="556.09" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1269" width="3.0" height="15.0" fill="rgb(223,6,28)" rx="2" ry="2" />
<text  x="131.55" y="1279.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (11,412,546 samples, 0.01%)</title><rect x="920.2" y="1429" width="0.2" height="15.0" fill="rgb(213,19,33)" rx="2" ry="2" />
<text  x="923.23" y="1439.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (8,938,858 samples, 0.01%)</title><rect x="255.5" y="1269" width="0.1" height="15.0" fill="rgb(221,26,40)" rx="2" ry="2" />
<text  x="258.52" y="1279.5" ></text>
</g>
<g >
<title>ip_route_input_noref (50,663,206 samples, 0.06%)</title><rect x="558.2" y="1349" width="0.7" height="15.0" fill="rgb(251,38,46)" rx="2" ry="2" />
<text  x="561.22" y="1359.5" ></text>
</g>
<g >
<title>nf_hook_slow (7,821,851 samples, 0.01%)</title><rect x="41.4" y="1349" width="0.1" height="15.0" fill="rgb(248,123,29)" rx="2" ry="2" />
<text  x="44.38" y="1359.5" ></text>
</g>
<g >
<title>update_load_avg (36,020,794 samples, 0.04%)</title><rect x="254.5" y="1445" width="0.5" height="15.0" fill="rgb(212,172,10)" rx="2" ry="2" />
<text  x="257.48" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,933,054 samples, 0.10%)</title><rect x="106.6" y="165" width="1.2" height="15.0" fill="rgb(207,128,42)" rx="2" ry="2" />
<text  x="109.59" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="981" width="3.0" height="15.0" fill="rgb(220,35,7)" rx="2" ry="2" />
<text  x="131.55" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,705,959 samples, 0.01%)</title><rect x="79.0" y="1045" width="0.2" height="15.0" fill="rgb(206,72,23)" rx="2" ry="2" />
<text  x="81.99" y="1055.5" ></text>
</g>
<g >
<title>x86_pmu_disable (10,625,613 samples, 0.01%)</title><rect x="639.4" y="1141" width="0.1" height="15.0" fill="rgb(205,184,43)" rx="2" ry="2" />
<text  x="642.40" y="1151.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (24,354,045 samples, 0.03%)</title><rect x="700.2" y="1461" width="0.3" height="15.0" fill="rgb(252,202,45)" rx="2" ry="2" />
<text  x="703.19" y="1471.5" ></text>
</g>
<g >
<title>_raw_spin_lock (13,641,861 samples, 0.02%)</title><rect x="192.3" y="1205" width="0.2" height="15.0" fill="rgb(218,191,34)" rx="2" ry="2" />
<text  x="195.33" y="1215.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (20,174,498 samples, 0.02%)</title><rect x="747.2" y="1525" width="0.3" height="15.0" fill="rgb(253,43,51)" rx="2" ry="2" />
<text  x="750.18" y="1535.5" ></text>
</g>
<g >
<title>ret_from_intr (11,363,177 samples, 0.01%)</title><rect x="126.6" y="101" width="0.1" height="15.0" fill="rgb(230,111,9)" rx="2" ry="2" />
<text  x="129.60" y="111.5" ></text>
</g>
<g >
<title>__find_get_block (193,246,755 samples, 0.22%)</title><rect x="189.4" y="1173" width="2.6" height="15.0" fill="rgb(217,101,16)" rx="2" ry="2" />
<text  x="192.42" y="1183.5" ></text>
</g>
<g >
<title>ip_rcv (938,175,068 samples, 1.05%)</title><rect x="545.6" y="1237" width="12.4" height="15.0" fill="rgb(217,28,54)" rx="2" ry="2" />
<text  x="548.60" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="645" width="1.4" height="15.0" fill="rgb(208,44,20)" rx="2" ry="2" />
<text  x="100.15" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,258,597,662 samples, 1.41%)</title><rect x="60.3" y="965" width="16.6" height="15.0" fill="rgb(208,17,19)" rx="2" ry="2" />
<text  x="63.26" y="975.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvent (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1637" width="0.4" height="15.0" fill="rgb(224,40,0)" rx="2" ry="2" />
<text  x="56.88" y="1647.5" ></text>
</g>
<g >
<title>schedule (14,503,970 samples, 0.02%)</title><rect x="46.3" y="1605" width="0.2" height="15.0" fill="rgb(249,133,46)" rx="2" ry="2" />
<text  x="49.34" y="1615.5" ></text>
</g>
<g >
<title>kworker/0:3-eve (26,659,906 samples, 0.03%)</title><rect x="44.8" y="1669" width="0.3" height="15.0" fill="rgb(222,145,48)" rx="2" ry="2" />
<text  x="47.79" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="197" width="0.9" height="15.0" fill="rgb(232,12,27)" rx="2" ry="2" />
<text  x="134.54" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="501" width="0.9" height="15.0" fill="rgb(210,147,42)" rx="2" ry="2" />
<text  x="134.54" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1493" width="0.4" height="15.0" fill="rgb(239,115,43)" rx="2" ry="2" />
<text  x="56.88" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1189" width="3.0" height="15.0" fill="rgb(239,216,38)" rx="2" ry="2" />
<text  x="131.55" y="1199.5" ></text>
</g>
<g >
<title>clockevents_program_event (8,611,849 samples, 0.01%)</title><rect x="250.1" y="1477" width="0.1" height="15.0" fill="rgb(215,177,3)" rx="2" ry="2" />
<text  x="253.10" y="1487.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (535,107,457 samples, 0.60%)</title><rect x="705.9" y="1461" width="7.1" height="15.0" fill="rgb(243,69,30)" rx="2" ry="2" />
<text  x="708.87" y="1471.5" ></text>
</g>
<g >
<title>ext4_map_blocks (7,796,807 samples, 0.01%)</title><rect x="193.3" y="1253" width="0.1" height="15.0" fill="rgb(220,194,49)" rx="2" ry="2" />
<text  x="196.34" y="1263.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (7,835,880 samples, 0.01%)</title><rect x="711.5" y="1381" width="0.1" height="15.0" fill="rgb(210,174,25)" rx="2" ry="2" />
<text  x="714.53" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (111,088,470 samples, 0.12%)</title><rect x="110.2" y="117" width="1.4" height="15.0" fill="rgb(239,14,45)" rx="2" ry="2" />
<text  x="113.16" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (221,904,866 samples, 0.25%)</title><rect x="128.5" y="149" width="3.0" height="15.0" fill="rgb(235,87,22)" rx="2" ry="2" />
<text  x="131.55" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (88,882,447 samples, 0.10%)</title><rect x="84.0" y="1381" width="1.2" height="15.0" fill="rgb(230,9,23)" rx="2" ry="2" />
<text  x="87.02" y="1391.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_fn (115,620,852 samples, 0.13%)</title><rect x="1166.0" y="869" width="1.5" height="15.0" fill="rgb(219,9,49)" rx="2" ry="2" />
<text  x="1168.98" y="879.5" ></text>
</g>
<g >
<title>lj_tab_new (16,196,983 samples, 0.02%)</title><rect x="1098.1" y="1525" width="0.2" height="15.0" fill="rgb(235,119,22)" rx="2" ry="2" />
<text  x="1101.13" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="309" width="0.8" height="15.0" fill="rgb(209,32,46)" rx="2" ry="2" />
<text  x="101.56" y="319.5" ></text>
</g>
<g >
<title>ip_local_deliver (12,800,208 samples, 0.01%)</title><rect x="251.6" y="1173" width="0.2" height="15.0" fill="rgb(223,115,20)" rx="2" ry="2" />
<text  x="254.63" y="1183.5" ></text>
</g>
<g >
<title>ip_vs_remote_request4 (26,122,340 samples, 0.03%)</title><rect x="252.0" y="1349" width="0.4" height="15.0" fill="rgb(236,180,0)" rx="2" ry="2" />
<text  x="255.02" y="1359.5" ></text>
</g>
<g >
<title>__udp4_lib_lookup (20,429,720 samples, 0.02%)</title><rect x="523.6" y="1317" width="0.3" height="15.0" fill="rgb(245,99,16)" rx="2" ry="2" />
<text  x="526.62" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="773" width="1.4" height="15.0" fill="rgb(205,35,37)" rx="2" ry="2" />
<text  x="100.15" y="783.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (9,618,702 samples, 0.01%)</title><rect x="55.0" y="1573" width="0.1" height="15.0" fill="rgb(208,80,6)" rx="2" ry="2" />
<text  x="58.02" y="1583.5" ></text>
</g>
<g >
<title>__skb_clone (11,355,485 samples, 0.01%)</title><rect x="1183.1" y="1237" width="0.1" height="15.0" fill="rgb(251,48,6)" rx="2" ry="2" />
<text  x="1186.08" y="1247.5" ></text>
</g>
<g >
<title>__schedule (14,540,535 samples, 0.02%)</title><rect x="45.3" y="1589" width="0.2" height="15.0" fill="rgb(222,128,34)" rx="2" ry="2" />
<text  x="48.28" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16,004,099 samples, 0.02%)</title><rect x="13.2" y="1573" width="0.2" height="15.0" fill="rgb(217,19,2)" rx="2" ry="2" />
<text  x="16.23" y="1583.5" ></text>
</g>
<g >
<title>tick_program_event (42,428,020 samples, 0.05%)</title><rect x="505.6" y="1493" width="0.6" height="15.0" fill="rgb(213,33,49)" rx="2" ry="2" />
<text  x="508.62" y="1503.5" ></text>
</g>
<g >
<title>ret_from_fork (26,393,700 samples, 0.03%)</title><rect x="45.5" y="1653" width="0.4" height="15.0" fill="rgb(218,108,28)" rx="2" ry="2" />
<text  x="48.53" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1045" width="0.3" height="15.0" fill="rgb(211,227,46)" rx="2" ry="2" />
<text  x="102.79" y="1055.5" ></text>
</g>
<g >
<title>clockevents_program_event (43,820,114 samples, 0.05%)</title><rect x="643.3" y="1333" width="0.6" height="15.0" fill="rgb(219,192,40)" rx="2" ry="2" />
<text  x="646.27" y="1343.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (9,669,169 samples, 0.01%)</title><rect x="239.2" y="1317" width="0.1" height="15.0" fill="rgb(211,3,37)" rx="2" ry="2" />
<text  x="242.16" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,549,793 samples, 0.12%)</title><rect x="97.2" y="485" width="1.4" height="15.0" fill="rgb(236,104,16)" rx="2" ry="2" />
<text  x="100.15" y="495.5" ></text>
</g>
<g >
<title>lj_BC_KSTR (25,937,136 samples, 0.03%)</title><rect x="1033.1" y="1541" width="0.4" height="15.0" fill="rgb(242,125,29)" rx="2" ry="2" />
<text  x="1036.14" y="1551.5" ></text>
</g>
<g >
<title>lj_alloc_free (97,144,434 samples, 0.11%)</title><rect x="655.1" y="1637" width="1.2" height="15.0" fill="rgb(237,165,1)" rx="2" ry="2" />
<text  x="658.06" y="1647.5" ></text>
</g>
<g >
<title>__blk_mq_end_request (10,018,489 samples, 0.01%)</title><rect x="511.4" y="1397" width="0.2" height="15.0" fill="rgb(210,154,12)" rx="2" ry="2" />
<text  x="514.44" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1493" width="0.8" height="15.0" fill="rgb(238,73,31)" rx="2" ry="2" />
<text  x="101.56" y="1503.5" ></text>
</g>
<g >
<title>tcp_rcv_established (45,446,805 samples, 0.05%)</title><rect x="42.2" y="1189" width="0.6" height="15.0" fill="rgb(234,79,9)" rx="2" ry="2" />
<text  x="45.21" y="1199.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (191,991,353 samples, 0.22%)</title><rect x="585.6" y="1541" width="2.5" height="15.0" fill="rgb(211,160,24)" rx="2" ry="2" />
<text  x="588.60" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1589" width="0.3" height="15.0" fill="rgb(230,102,47)" rx="2" ry="2" />
<text  x="102.79" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (93,635,001 samples, 0.11%)</title><rect x="63.9" y="293" width="1.3" height="15.0" fill="rgb(237,100,10)" rx="2" ry="2" />
<text  x="66.94" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="1045" width="6.5" height="15.0" fill="rgb(245,38,10)" rx="2" ry="2" />
<text  x="103.13" y="1055.5" ></text>
</g>
<g >
<title>do_IRQ (5,197,597,972 samples, 5.83%)</title><rect x="507.8" y="1525" width="68.8" height="15.0" fill="rgb(246,153,30)" rx="2" ry="2" />
<text  x="510.82" y="1535.5" >do_IRQ</text>
</g>
<g >
<title>nf_hook_slow (926,859,390 samples, 1.04%)</title><rect x="545.8" y="1221" width="12.2" height="15.0" fill="rgb(219,16,4)" rx="2" ry="2" />
<text  x="548.75" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1221" width="0.9" height="15.0" fill="rgb(211,105,5)" rx="2" ry="2" />
<text  x="134.54" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="485" width="0.4" height="15.0" fill="rgb(226,217,49)" rx="2" ry="2" />
<text  x="56.88" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (114,361,750 samples, 0.13%)</title><rect x="238.6" y="1477" width="1.5" height="15.0" fill="rgb(241,173,17)" rx="2" ry="2" />
<text  x="241.59" y="1487.5" ></text>
</g>
<g >
<title>update_curr (35,403,187 samples, 0.04%)</title><rect x="708.8" y="1365" width="0.5" height="15.0" fill="rgb(243,42,46)" rx="2" ry="2" />
<text  x="711.79" y="1375.5" ></text>
</g>
<g >
<title>pick_next_task_idle (17,957,205 samples, 0.02%)</title><rect x="712.3" y="1413" width="0.3" height="15.0" fill="rgb(232,228,17)" rx="2" ry="2" />
<text  x="715.32" y="1423.5" ></text>
</g>
<g >
<title>ext4_block_to_path.isra.0 (30,649,503 samples, 0.03%)</title><rect x="187.6" y="1205" width="0.4" height="15.0" fill="rgb(216,143,54)" rx="2" ry="2" />
<text  x="190.56" y="1215.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/vendor/github.com/hashicorp/memberlist.(*Memberlist).readStream (10,223,662 samples, 0.01%)</title><rect x="12.0" y="1605" width="0.1" height="15.0" fill="rgb(240,117,49)" rx="2" ry="2" />
<text  x="14.99" y="1615.5" ></text>
</g>
<g >
<title>enqueue_task_fair (60,225,001 samples, 0.07%)</title><rect x="247.8" y="1397" width="0.8" height="15.0" fill="rgb(240,104,15)" rx="2" ry="2" />
<text  x="250.81" y="1407.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (42,426,307 samples, 0.05%)</title><rect x="559.9" y="1317" width="0.6" height="15.0" fill="rgb(219,91,6)" rx="2" ry="2" />
<text  x="562.90" y="1327.5" ></text>
</g>
<g >
<title>__fdget_pos (28,837,784 samples, 0.03%)</title><rect x="1124.6" y="1445" width="0.3" height="15.0" fill="rgb(221,204,18)" rx="2" ry="2" />
<text  x="1127.57" y="1455.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (26,853,392 samples, 0.03%)</title><rect x="1128.9" y="1269" width="0.4" height="15.0" fill="rgb(208,16,28)" rx="2" ry="2" />
<text  x="1131.91" y="1279.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (502,228,409 samples, 0.56%)</title><rect x="170.4" y="1173" width="6.6" height="15.0" fill="rgb(253,97,28)" rx="2" ry="2" />
<text  x="173.40" y="1183.5" ></text>
</g>
<g >
<title>lj_tab_free (26,380,940 samples, 0.03%)</title><rect x="893.4" y="1461" width="0.3" height="15.0" fill="rgb(223,198,37)" rx="2" ry="2" />
<text  x="896.40" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,487,844,892 samples, 1.67%)</title><rect x="59.6" y="1125" width="19.7" height="15.0" fill="rgb(208,88,31)" rx="2" ry="2" />
<text  x="62.61" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,277,743 samples, 0.01%)</title><rect x="76.7" y="917" width="0.1" height="15.0" fill="rgb(246,229,36)" rx="2" ry="2" />
<text  x="79.69" y="927.5" ></text>
</g>
<g >
<title>lj_gc_step (21,129,056 samples, 0.02%)</title><rect x="684.8" y="1573" width="0.3" height="15.0" fill="rgb(227,81,38)" rx="2" ry="2" />
<text  x="687.80" y="1583.5" ></text>
</g>
<g >
<title>ext4_file_getattr (7,624,575 samples, 0.01%)</title><rect x="91.0" y="1461" width="0.1" height="15.0" fill="rgb(225,191,1)" rx="2" ry="2" />
<text  x="93.95" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (66,367,051 samples, 0.07%)</title><rect x="136.4" y="1541" width="0.9" height="15.0" fill="rgb(213,46,15)" rx="2" ry="2" />
<text  x="139.38" y="1551.5" ></text>
</g>
<g >
<title>lj_mem_realloc (48,073,901 samples, 0.05%)</title><rect x="657.5" y="1637" width="0.6" height="15.0" fill="rgb(227,52,49)" rx="2" ry="2" />
<text  x="660.47" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="229" width="0.9" height="15.0" fill="rgb(242,4,22)" rx="2" ry="2" />
<text  x="134.54" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="1125" width="6.5" height="15.0" fill="rgb(212,32,21)" rx="2" ry="2" />
<text  x="103.13" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1589" width="0.4" height="15.0" fill="rgb(236,174,34)" rx="2" ry="2" />
<text  x="56.54" y="1599.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (6,811,337,648 samples, 7.64%)</title><rect x="147.3" y="1333" width="90.2" height="15.0" fill="rgb(217,170,8)" rx="2" ry="2" />
<text  x="150.35" y="1343.5" >__generic_..</text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (8,454,019 samples, 0.01%)</title><rect x="752.4" y="1541" width="0.1" height="15.0" fill="rgb(237,161,37)" rx="2" ry="2" />
<text  x="755.40" y="1551.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (12,826,811 samples, 0.01%)</title><rect x="157.1" y="1237" width="0.2" height="15.0" fill="rgb(206,19,20)" rx="2" ry="2" />
<text  x="160.12" y="1247.5" ></text>
</g>
<g >
<title>__ip_local_out (175,839,402 samples, 0.20%)</title><rect x="729.4" y="1221" width="2.3" height="15.0" fill="rgb(236,139,12)" rx="2" ry="2" />
<text  x="732.36" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1109" width="18.3" height="15.0" fill="rgb(219,186,3)" rx="2" ry="2" />
<text  x="113.16" y="1119.5" ></text>
</g>
<g >
<title>__default_send_IPI_dest_field (446,101,357 samples, 0.50%)</title><rect x="643.9" y="1301" width="6.0" height="15.0" fill="rgb(222,76,42)" rx="2" ry="2" />
<text  x="646.95" y="1311.5" ></text>
</g>
<g >
<title>operator new (11,116,565 samples, 0.01%)</title><rect x="63.6" y="213" width="0.2" height="15.0" fill="rgb(217,31,20)" rx="2" ry="2" />
<text  x="66.61" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="277" width="0.4" height="15.0" fill="rgb(243,173,38)" rx="2" ry="2" />
<text  x="56.54" y="287.5" ></text>
</g>
<g >
<title>ip_rcv (13,603,784 samples, 0.02%)</title><rect x="251.6" y="1237" width="0.2" height="15.0" fill="rgb(218,52,36)" rx="2" ry="2" />
<text  x="254.62" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1045" width="3.0" height="15.0" fill="rgb(244,27,29)" rx="2" ry="2" />
<text  x="131.55" y="1055.5" ></text>
</g>
<g >
<title>lj_BC_TSETV (10,002,082 samples, 0.01%)</title><rect x="1099.7" y="1541" width="0.1" height="15.0" fill="rgb(208,165,23)" rx="2" ry="2" />
<text  x="1102.70" y="1551.5" ></text>
</g>
<g >
<title>activate_task (10,246,170 samples, 0.01%)</title><rect x="591.6" y="1365" width="0.2" height="15.0" fill="rgb(239,150,30)" rx="2" ry="2" />
<text  x="594.62" y="1375.5" ></text>
</g>
<g >
<title>native_apic_mem_write (13,841,322 samples, 0.02%)</title><rect x="503.7" y="1461" width="0.2" height="15.0" fill="rgb(218,150,16)" rx="2" ry="2" />
<text  x="506.68" y="1471.5" ></text>
</g>
<g >
<title>kmem_cache_free (11,140,871 samples, 0.01%)</title><rect x="726.3" y="1301" width="0.1" height="15.0" fill="rgb(209,47,22)" rx="2" ry="2" />
<text  x="729.26" y="1311.5" ></text>
</g>
<g >
<title>tick_broadcast_set_event (8,824,656 samples, 0.01%)</title><rect x="638.7" y="1429" width="0.2" height="15.0" fill="rgb(252,157,16)" rx="2" ry="2" />
<text  x="641.74" y="1439.5" ></text>
</g>
<g >
<title>nf_hook_slow (239,885,939 samples, 0.27%)</title><rect x="733.2" y="821" width="3.2" height="15.0" fill="rgb(253,102,36)" rx="2" ry="2" />
<text  x="736.23" y="831.5" ></text>
</g>
<g >
<title>uv__run_check (10,790,454 samples, 0.01%)</title><rect x="137.8" y="1557" width="0.2" height="15.0" fill="rgb(243,105,12)" rx="2" ry="2" />
<text  x="140.83" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="805" width="3.0" height="15.0" fill="rgb(213,129,1)" rx="2" ry="2" />
<text  x="131.55" y="815.5" ></text>
</g>
<g >
<title>__next_timer_interrupt (9,972,151 samples, 0.01%)</title><rect x="652.4" y="1445" width="0.1" height="15.0" fill="rgb(211,31,25)" rx="2" ry="2" />
<text  x="655.39" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="325" width="0.9" height="15.0" fill="rgb(218,16,39)" rx="2" ry="2" />
<text  x="134.54" y="335.5" ></text>
</g>
<g >
<title>ext4_writepage_trans_blocks (58,936,328 samples, 0.07%)</title><rect x="193.8" y="1285" width="0.7" height="15.0" fill="rgb(250,205,18)" rx="2" ry="2" />
<text  x="196.76" y="1295.5" ></text>
</g>
<g >
<title>native_write_msr (10,075,279 samples, 0.01%)</title><rect x="590.5" y="1477" width="0.2" height="15.0" fill="rgb(239,109,13)" rx="2" ry="2" />
<text  x="593.53" y="1487.5" ></text>
</g>
<g >
<title>pm_qos_read_value (13,549,399 samples, 0.02%)</title><rect x="583.5" y="1557" width="0.2" height="15.0" fill="rgb(208,24,22)" rx="2" ry="2" />
<text  x="586.50" y="1567.5" ></text>
</g>
<g >
<title>mongo::FTDCController::doLoop (92,280,596 samples, 0.10%)</title><rect x="15.1" y="1589" width="1.3" height="15.0" fill="rgb(237,182,52)" rx="2" ry="2" />
<text  x="18.14" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1045" width="0.4" height="15.0" fill="rgb(248,129,11)" rx="2" ry="2" />
<text  x="56.88" y="1055.5" ></text>
</g>
<g >
<title>schedule (13,208,060 samples, 0.01%)</title><rect x="45.0" y="1605" width="0.1" height="15.0" fill="rgb(246,224,54)" rx="2" ry="2" />
<text  x="47.95" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="421" width="6.5" height="15.0" fill="rgb(216,217,28)" rx="2" ry="2" />
<text  x="103.13" y="431.5" ></text>
</g>
<g >
<title>psi_task_change (18,546,047 samples, 0.02%)</title><rect x="248.6" y="1397" width="0.3" height="15.0" fill="rgb(228,180,38)" rx="2" ry="2" />
<text  x="251.61" y="1407.5" ></text>
</g>
<g >
<title>__ip_finish_output (64,114,678 samples, 0.07%)</title><rect x="543.6" y="981" width="0.8" height="15.0" fill="rgb(220,2,32)" rx="2" ry="2" />
<text  x="546.59" y="991.5" ></text>
</g>
<g >
<title>generic_writepages (1,794,954,312 samples, 2.01%)</title><rect x="16.5" y="1557" width="23.8" height="15.0" fill="rgb(241,107,53)" rx="2" ry="2" />
<text  x="19.50" y="1567.5" >g..</text>
</g>
<g >
<title>_int_free (14,302,691 samples, 0.02%)</title><rect x="83.4" y="1301" width="0.2" height="15.0" fill="rgb(253,77,36)" rx="2" ry="2" />
<text  x="86.39" y="1311.5" ></text>
</g>
<g >
<title>nf_nat_inet_fn (15,239,566 samples, 0.02%)</title><rect x="731.4" y="1157" width="0.2" height="15.0" fill="rgb(212,78,53)" rx="2" ry="2" />
<text  x="734.43" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (650,413,460 samples, 0.73%)</title><rect x="61.4" y="597" width="8.6" height="15.0" fill="rgb(237,169,46)" rx="2" ry="2" />
<text  x="64.42" y="607.5" ></text>
</g>
<g >
<title>vfs_getattr (24,279,889 samples, 0.03%)</title><rect x="90.7" y="1493" width="0.4" height="15.0" fill="rgb(248,16,10)" rx="2" ry="2" />
<text  x="93.74" y="1503.5" ></text>
</g>
<g >
<title>ip_finish_output2 (16,568,729 samples, 0.02%)</title><rect x="255.8" y="1253" width="0.2" height="15.0" fill="rgb(236,11,28)" rx="2" ry="2" />
<text  x="258.82" y="1263.5" ></text>
</g>
<g >
<title>__fdget (12,428,838 samples, 0.01%)</title><rect x="746.4" y="1477" width="0.2" height="15.0" fill="rgb(214,146,49)" rx="2" ry="2" />
<text  x="749.39" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1189" width="0.8" height="15.0" fill="rgb(249,192,40)" rx="2" ry="2" />
<text  x="101.56" y="1199.5" ></text>
</g>
<g >
<title>iptable_mangle_hook (91,238,794 samples, 0.10%)</title><rect x="1173.0" y="981" width="1.2" height="15.0" fill="rgb(234,113,16)" rx="2" ry="2" />
<text  x="1175.95" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,199,954 samples, 0.01%)</title><rect x="80.2" y="1093" width="0.1" height="15.0" fill="rgb(231,161,13)" rx="2" ry="2" />
<text  x="83.21" y="1103.5" ></text>
</g>
<g >
<title>iptable_mangle_hook (8,582,338 samples, 0.01%)</title><rect x="729.8" y="1189" width="0.1" height="15.0" fill="rgb(237,92,37)" rx="2" ry="2" />
<text  x="732.80" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="453" width="0.8" height="15.0" fill="rgb(213,55,33)" rx="2" ry="2" />
<text  x="101.56" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="549" width="18.3" height="15.0" fill="rgb(242,30,8)" rx="2" ry="2" />
<text  x="113.16" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1605" width="0.8" height="15.0" fill="rgb(211,83,26)" rx="2" ry="2" />
<text  x="101.56" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (13,596,175 samples, 0.02%)</title><rect x="106.4" y="213" width="0.2" height="15.0" fill="rgb(206,37,43)" rx="2" ry="2" />
<text  x="109.40" y="223.5" ></text>
</g>
<g >
<title>tick_program_event (13,206,106 samples, 0.01%)</title><rect x="706.4" y="1413" width="0.2" height="15.0" fill="rgb(242,43,13)" rx="2" ry="2" />
<text  x="709.44" y="1423.5" ></text>
</g>
<g >
<title>get_page_from_freelist (515,508,117 samples, 0.58%)</title><rect x="196.4" y="1205" width="6.8" height="15.0" fill="rgb(241,82,24)" rx="2" ry="2" />
<text  x="199.43" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="965" width="0.4" height="15.0" fill="rgb(209,45,43)" rx="2" ry="2" />
<text  x="56.54" y="975.5" ></text>
</g>
<g >
<title>ttwu_do_activate (63,263,792 samples, 0.07%)</title><rect x="94.1" y="1445" width="0.9" height="15.0" fill="rgb(212,179,26)" rx="2" ry="2" />
<text  x="97.14" y="1455.5" ></text>
</g>
<g >
<title>aeMain (37,465,593,050 samples, 42.02%)</title><rect x="692.6" y="1605" width="495.8" height="15.0" fill="rgb(215,138,30)" rx="2" ry="2" />
<text  x="695.64" y="1615.5" >aeMain</text>
</g>
<g >
<title>ipv4_confirm (8,474,497 samples, 0.01%)</title><rect x="530.5" y="1301" width="0.2" height="15.0" fill="rgb(212,130,9)" rx="2" ry="2" />
<text  x="533.54" y="1311.5" ></text>
</g>
<g >
<title>nf_conntrack_in (26,366,515 samples, 0.03%)</title><rect x="734.4" y="581" width="0.4" height="15.0" fill="rgb(221,19,20)" rx="2" ry="2" />
<text  x="737.44" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="789" width="3.6" height="15.0" fill="rgb(228,25,30)" rx="2" ry="2" />
<text  x="109.59" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (947,213,927 samples, 1.06%)</title><rect x="60.9" y="773" width="12.5" height="15.0" fill="rgb(220,182,40)" rx="2" ry="2" />
<text  x="63.90" y="783.5" ></text>
</g>
<g >
<title>lj_BC_GGET (55,060,542 samples, 0.06%)</title><rect x="1028.7" y="1541" width="0.7" height="15.0" fill="rgb(234,163,41)" rx="2" ry="2" />
<text  x="1031.70" y="1551.5" ></text>
</g>
<g >
<title>lj_BC_KSHORT (113,045,798 samples, 0.13%)</title><rect x="1031.6" y="1541" width="1.5" height="15.0" fill="rgb(249,17,27)" rx="2" ry="2" />
<text  x="1034.65" y="1551.5" ></text>
</g>
<g >
<title>std::string::_M_replace_safe (20,578,768 samples, 0.02%)</title><rect x="91.9" y="1589" width="0.3" height="15.0" fill="rgb(223,182,51)" rx="2" ry="2" />
<text  x="94.89" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="933" width="3.6" height="15.0" fill="rgb(235,32,53)" rx="2" ry="2" />
<text  x="109.59" y="943.5" ></text>
</g>
<g >
<title>execute_shell_function (12,129,602 samples, 0.01%)</title><rect x="10.8" y="1317" width="0.1" height="15.0" fill="rgb(218,154,32)" rx="2" ry="2" />
<text  x="13.79" y="1327.5" ></text>
</g>
<g >
<title>ip_rcv_finish (269,120,324 samples, 0.30%)</title><rect x="737.0" y="1013" width="3.6" height="15.0" fill="rgb(212,87,4)" rx="2" ry="2" />
<text  x="740.00" y="1023.5" ></text>
</g>
<g >
<title>ip_finish_output (2,985,268,940 samples, 3.35%)</title><rect x="1141.9" y="1189" width="39.5" height="15.0" fill="rgb(223,61,29)" rx="2" ry="2" />
<text  x="1144.87" y="1199.5" >ip_..</text>
</g>
<g >
<title>timer_interrupt (598,892,974 samples, 0.67%)</title><rect x="641.9" y="1381" width="8.0" height="15.0" fill="rgb(245,126,39)" rx="2" ry="2" />
<text  x="644.94" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="517" width="0.8" height="15.0" fill="rgb(250,68,51)" rx="2" ry="2" />
<text  x="101.56" y="527.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_fn (15,206,249 samples, 0.02%)</title><rect x="557.7" y="1125" width="0.2" height="15.0" fill="rgb(237,149,2)" rx="2" ry="2" />
<text  x="560.69" y="1135.5" ></text>
</g>
<g >
<title>clockevents_program_event (24,423,768 samples, 0.03%)</title><rect x="505.7" y="1477" width="0.3" height="15.0" fill="rgb(209,111,7)" rx="2" ry="2" />
<text  x="508.69" y="1487.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (102,062,594 samples, 0.11%)</title><rect x="1174.2" y="981" width="1.3" height="15.0" fill="rgb(250,150,11)" rx="2" ry="2" />
<text  x="1177.19" y="991.5" ></text>
</g>
<g >
<title>mongod (10,460,035 samples, 0.01%)</title><rect x="47.7" y="1669" width="0.2" height="15.0" fill="rgb(235,51,14)" rx="2" ry="2" />
<text  x="50.73" y="1679.5" ></text>
</g>
<g >
<title>tcp_ack_update_rtt.isra.0 (7,638,714 samples, 0.01%)</title><rect x="553.5" y="1045" width="0.1" height="15.0" fill="rgb(235,89,26)" rx="2" ry="2" />
<text  x="556.46" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="869" width="0.4" height="15.0" fill="rgb(221,68,51)" rx="2" ry="2" />
<text  x="56.88" y="879.5" ></text>
</g>
<g >
<title>handle_irq_event (617,622,662 samples, 0.69%)</title><rect x="641.9" y="1429" width="8.1" height="15.0" fill="rgb(237,97,32)" rx="2" ry="2" />
<text  x="644.86" y="1439.5" ></text>
</g>
<g >
<title>lj_state_growstack (42,552,936 samples, 0.05%)</title><rect x="691.3" y="1557" width="0.6" height="15.0" fill="rgb(218,38,12)" rx="2" ry="2" />
<text  x="694.34" y="1567.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (15,214,963 samples, 0.02%)</title><rect x="741.9" y="997" width="0.2" height="15.0" fill="rgb(208,70,20)" rx="2" ry="2" />
<text  x="744.90" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1541" width="1.4" height="15.0" fill="rgb(251,96,35)" rx="2" ry="2" />
<text  x="100.15" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1397" width="3.0" height="15.0" fill="rgb(246,122,1)" rx="2" ry="2" />
<text  x="131.55" y="1407.5" ></text>
</g>
<g >
<title>lj_str_bufnum (828,518,779 samples, 0.93%)</title><rect x="1104.0" y="1509" width="11.0" height="15.0" fill="rgb(228,104,52)" rx="2" ry="2" />
<text  x="1107.04" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="901" width="1.4" height="15.0" fill="rgb(228,45,15)" rx="2" ry="2" />
<text  x="100.15" y="911.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_fn (37,202,564 samples, 0.04%)</title><rect x="738.8" y="885" width="0.5" height="15.0" fill="rgb(214,179,3)" rx="2" ry="2" />
<text  x="741.83" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="981" width="18.3" height="15.0" fill="rgb(221,36,19)" rx="2" ry="2" />
<text  x="113.16" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,621,857 samples, 0.55%)</title><rect x="100.1" y="1461" width="6.5" height="15.0" fill="rgb(207,56,43)" rx="2" ry="2" />
<text  x="103.13" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1541" width="0.8" height="15.0" fill="rgb(240,167,41)" rx="2" ry="2" />
<text  x="101.56" y="1551.5" ></text>
</g>
<g >
<title>lj_tab_get (12,280,364 samples, 0.01%)</title><rect x="1120.5" y="1509" width="0.2" height="15.0" fill="rgb(234,31,31)" rx="2" ry="2" />
<text  x="1123.51" y="1519.5" ></text>
</g>
<g >
<title>[sshd] (28,499,758 samples, 0.03%)</title><rect x="242.0" y="1621" width="0.4" height="15.0" fill="rgb(233,166,51)" rx="2" ry="2" />
<text  x="244.99" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="389" width="0.4" height="15.0" fill="rgb(245,47,16)" rx="2" ry="2" />
<text  x="56.54" y="399.5" ></text>
</g>
<g >
<title>ip_finish_output (259,195,995 samples, 0.29%)</title><rect x="1152.9" y="597" width="3.5" height="15.0" fill="rgb(247,95,3)" rx="2" ry="2" />
<text  x="1155.94" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1509" width="3.6" height="15.0" fill="rgb(245,129,20)" rx="2" ry="2" />
<text  x="109.59" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (8,714,337 samples, 0.01%)</title><rect x="78.0" y="981" width="0.1" height="15.0" fill="rgb(209,155,13)" rx="2" ry="2" />
<text  x="80.97" y="991.5" ></text>
</g>
<g >
<title>csum_partial (9,590,468 samples, 0.01%)</title><rect x="523.5" y="1333" width="0.1" height="15.0" fill="rgb(212,210,48)" rx="2" ry="2" />
<text  x="526.46" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="261" width="3.6" height="15.0" fill="rgb(249,51,7)" rx="2" ry="2" />
<text  x="109.59" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,654,256 samples, 0.01%)</title><rect x="242.0" y="1509" width="0.1" height="15.0" fill="rgb(208,150,44)" rx="2" ry="2" />
<text  x="245.03" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1205" width="18.3" height="15.0" fill="rgb(238,214,35)" rx="2" ry="2" />
<text  x="113.16" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="821" width="1.4" height="15.0" fill="rgb(223,63,46)" rx="2" ry="2" />
<text  x="100.15" y="831.5" ></text>
</g>
<g >
<title>local.runtime.findObject (10,927,649 samples, 0.01%)</title><rect x="14.0" y="1589" width="0.2" height="15.0" fill="rgb(215,185,6)" rx="2" ry="2" />
<text  x="17.03" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (88,063,884 samples, 0.10%)</title><rect x="76.9" y="997" width="1.2" height="15.0" fill="rgb(225,128,12)" rx="2" ry="2" />
<text  x="79.92" y="1007.5" ></text>
</g>
<g >
<title>[perf-11825.map] (28,119,931 samples, 0.03%)</title><rect x="53.2" y="1653" width="0.3" height="15.0" fill="rgb(245,85,34)" rx="2" ry="2" />
<text  x="56.17" y="1663.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (59,593,160 samples, 0.07%)</title><rect x="255.3" y="1413" width="0.8" height="15.0" fill="rgb(238,186,34)" rx="2" ry="2" />
<text  x="258.33" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1381" width="0.8" height="15.0" fill="rgb(221,36,5)" rx="2" ry="2" />
<text  x="101.56" y="1391.5" ></text>
</g>
<g >
<title>nf_hook_slow (33,378,938 samples, 0.04%)</title><rect x="251.2" y="1285" width="0.4" height="15.0" fill="rgb(247,156,21)" rx="2" ry="2" />
<text  x="254.18" y="1295.5" ></text>
</g>
<g >
<title>local.runtime.sysmon (25,391,686 samples, 0.03%)</title><rect x="13.1" y="1605" width="0.3" height="15.0" fill="rgb(245,210,51)" rx="2" ry="2" />
<text  x="16.11" y="1615.5" ></text>
</g>
<g >
<title>inotify_handle_event (11,129,711 samples, 0.01%)</title><rect x="238.8" y="1381" width="0.1" height="15.0" fill="rgb(236,74,52)" rx="2" ry="2" />
<text  x="241.80" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="565" width="18.3" height="15.0" fill="rgb(224,44,7)" rx="2" ry="2" />
<text  x="113.16" y="575.5" ></text>
</g>
<g >
<title>ext4_mb_release_context (20,152,473 samples, 0.02%)</title><rect x="184.8" y="1173" width="0.2" height="15.0" fill="rgb(233,208,52)" rx="2" ry="2" />
<text  x="187.76" y="1183.5" ></text>
</g>
<g >
<title>_raw_read_lock (13,039,938 samples, 0.01%)</title><rect x="151.1" y="1253" width="0.2" height="15.0" fill="rgb(229,148,11)" rx="2" ry="2" />
<text  x="154.15" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="517" width="1.4" height="15.0" fill="rgb(241,93,8)" rx="2" ry="2" />
<text  x="100.15" y="527.5" ></text>
</g>
<g >
<title>br_fdb_update (25,721,790 samples, 0.03%)</title><rect x="1146.2" y="917" width="0.4" height="15.0" fill="rgb(242,58,2)" rx="2" ry="2" />
<text  x="1149.22" y="927.5" ></text>
</g>
<g >
<title>netif_receive_skb (13,603,784 samples, 0.02%)</title><rect x="251.6" y="1285" width="0.2" height="15.0" fill="rgb(237,59,24)" rx="2" ry="2" />
<text  x="254.62" y="1295.5" ></text>
</g>
<g >
<title>fsnotify (15,492,994 samples, 0.02%)</title><rect x="238.8" y="1397" width="0.2" height="15.0" fill="rgb(230,27,7)" rx="2" ry="2" />
<text  x="241.76" y="1407.5" ></text>
</g>
<g >
<title>nf_ct_get_tuple (12,257,751 samples, 0.01%)</title><rect x="560.5" y="1317" width="0.1" height="15.0" fill="rgb(245,49,2)" rx="2" ry="2" />
<text  x="563.46" y="1327.5" ></text>
</g>
<g >
<title>execute_shell_function (8,487,866 samples, 0.01%)</title><rect x="11.1" y="1509" width="0.1" height="15.0" fill="rgb(243,169,30)" rx="2" ry="2" />
<text  x="14.08" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="869" width="0.9" height="15.0" fill="rgb(252,224,3)" rx="2" ry="2" />
<text  x="134.54" y="879.5" ></text>
</g>
<g >
<title>__schedule (45,356,506 samples, 0.05%)</title><rect x="136.5" y="1429" width="0.6" height="15.0" fill="rgb(244,157,33)" rx="2" ry="2" />
<text  x="139.53" y="1439.5" ></text>
</g>
<g >
<title>__slab_free (16,584,624 samples, 0.02%)</title><rect x="514.7" y="1269" width="0.2" height="15.0" fill="rgb(211,169,35)" rx="2" ry="2" />
<text  x="517.69" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,006,639,906 samples, 2.25%)</title><rect x="58.6" y="1397" width="26.6" height="15.0" fill="rgb(248,117,37)" rx="2" ry="2" />
<text  x="61.65" y="1407.5" >s..</text>
</g>
<g >
<title>ip_forward_finish (179,952,902 samples, 0.20%)</title><rect x="562.3" y="1365" width="2.4" height="15.0" fill="rgb(236,119,40)" rx="2" ry="2" />
<text  x="565.33" y="1375.5" ></text>
</g>
<g >
<title>sock_read (1,633,749,821 samples, 1.83%)</title><rect x="723.4" y="1557" width="21.6" height="15.0" fill="rgb(250,219,5)" rx="2" ry="2" />
<text  x="726.40" y="1567.5" >s..</text>
</g>
<g >
<title>v8::internal::Runtime_ObjectKeys (10,723,034 samples, 0.01%)</title><rect x="52.8" y="1605" width="0.2" height="15.0" fill="rgb(232,24,9)" rx="2" ry="2" />
<text  x="55.83" y="1615.5" ></text>
</g>
<g >
<title>neigh_resolve_output (9,655,565 samples, 0.01%)</title><rect x="738.1" y="837" width="0.2" height="15.0" fill="rgb(211,54,2)" rx="2" ry="2" />
<text  x="741.13" y="847.5" ></text>
</g>
<g >
<title>br_forward_finish (30,846,213 samples, 0.03%)</title><rect x="251.2" y="1221" width="0.4" height="15.0" fill="rgb(251,57,6)" rx="2" ry="2" />
<text  x="254.19" y="1231.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (67,225,045 samples, 0.08%)</title><rect x="130.6" y="117" width="0.9" height="15.0" fill="rgb(227,53,0)" rx="2" ry="2" />
<text  x="133.59" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1125" width="0.4" height="15.0" fill="rgb(216,36,32)" rx="2" ry="2" />
<text  x="56.88" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1461" width="18.3" height="15.0" fill="rgb(205,75,44)" rx="2" ry="2" />
<text  x="113.16" y="1471.5" ></text>
</g>
<g >
<title>dev_gro_receive (25,929,668 samples, 0.03%)</title><rect x="539.2" y="1429" width="0.3" height="15.0" fill="rgb(219,206,24)" rx="2" ry="2" />
<text  x="542.16" y="1439.5" ></text>
</g>
<g >
<title>kworker/6:3-eve (30,376,457 samples, 0.03%)</title><rect x="46.9" y="1669" width="0.4" height="15.0" fill="rgb(207,164,40)" rx="2" ry="2" />
<text  x="49.88" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="261" width="0.4" height="15.0" fill="rgb(211,75,35)" rx="2" ry="2" />
<text  x="56.88" y="271.5" ></text>
</g>
<g >
<title>cpu_idle_poll (40,549,935 samples, 0.05%)</title><rect x="579.3" y="1589" width="0.5" height="15.0" fill="rgb(208,26,1)" rx="2" ry="2" />
<text  x="582.27" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1621" width="3.0" height="15.0" fill="rgb(232,87,1)" rx="2" ry="2" />
<text  x="131.55" y="1631.5" ></text>
</g>
<g >
<title>mark_page_accessed (18,440,130 samples, 0.02%)</title><rect x="183.5" y="1093" width="0.2" height="15.0" fill="rgb(215,20,53)" rx="2" ry="2" />
<text  x="186.51" y="1103.5" ></text>
</g>
<g >
<title>operator new (17,184,111 samples, 0.02%)</title><rect x="81.2" y="1173" width="0.2" height="15.0" fill="rgb(219,8,34)" rx="2" ry="2" />
<text  x="84.16" y="1183.5" ></text>
</g>
<g >
<title>cpu_startup_entry (4,347,613,262 samples, 4.88%)</title><rect x="596.4" y="1557" width="57.5" height="15.0" fill="rgb(221,47,35)" rx="2" ry="2" />
<text  x="599.36" y="1567.5" >cpu_st..</text>
</g>
<g >
<title>do_syscall_64 (7,176,624,211 samples, 8.05%)</title><rect x="143.3" y="1445" width="94.9" height="15.0" fill="rgb(238,220,22)" rx="2" ry="2" />
<text  x="146.26" y="1455.5" >do_syscall_64</text>
</g>
<g >
<title>deactivate_task (41,277,084 samples, 0.05%)</title><rect x="135.0" y="1413" width="0.5" height="15.0" fill="rgb(237,150,21)" rx="2" ry="2" />
<text  x="137.98" y="1423.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (63,019,804 samples, 0.07%)</title><rect x="251.1" y="1413" width="0.8" height="15.0" fill="rgb(240,167,5)" rx="2" ry="2" />
<text  x="254.05" y="1423.5" ></text>
</g>
<g >
<title>irq_enter (45,344,328 samples, 0.05%)</title><rect x="510.2" y="1509" width="0.6" height="15.0" fill="rgb(247,23,34)" rx="2" ry="2" />
<text  x="513.17" y="1519.5" ></text>
</g>
<g >
<title>schedule (15,142,551 samples, 0.02%)</title><rect x="132.6" y="1493" width="0.2" height="15.0" fill="rgb(205,197,54)" rx="2" ry="2" />
<text  x="135.62" y="1503.5" ></text>
</g>
<g >
<title>ext4_bio_write_page (1,096,634,441 samples, 1.23%)</title><rect x="18.2" y="1493" width="14.5" height="15.0" fill="rgb(231,64,42)" rx="2" ry="2" />
<text  x="21.21" y="1503.5" ></text>
</g>
<g >
<title>mem_cgroup_track_foreign_dirty_slowpath (26,267,654 samples, 0.03%)</title><rect x="222.4" y="1205" width="0.4" height="15.0" fill="rgb(242,218,49)" rx="2" ry="2" />
<text  x="225.41" y="1215.5" ></text>
</g>
<g >
<title>ext4_get_block (2,636,061,018 samples, 2.96%)</title><rect x="158.6" y="1269" width="34.9" height="15.0" fill="rgb(207,53,10)" rx="2" ry="2" />
<text  x="161.60" y="1279.5" >ex..</text>
</g>
<g >
<title>ip_route_output_key_hash (49,302,469 samples, 0.06%)</title><rect x="1166.7" y="821" width="0.6" height="15.0" fill="rgb(227,41,16)" rx="2" ry="2" />
<text  x="1169.67" y="831.5" ></text>
</g>
<g >
<title>irq_work_queue (11,645,294 samples, 0.01%)</title><rect x="248.4" y="1333" width="0.2" height="15.0" fill="rgb(232,211,11)" rx="2" ry="2" />
<text  x="251.43" y="1343.5" ></text>
</g>
<g >
<title>Glob::isIgnored (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1589" width="0.4" height="15.0" fill="rgb(242,27,18)" rx="2" ry="2" />
<text  x="56.88" y="1599.5" ></text>
</g>
<g >
<title>alloc_pages_current (10,551,796 samples, 0.01%)</title><rect x="33.0" y="1381" width="0.2" height="15.0" fill="rgb(232,130,46)" rx="2" ry="2" />
<text  x="36.05" y="1391.5" ></text>
</g>
<g >
<title>clockevents_program_event (8,312,858 samples, 0.01%)</title><rect x="638.7" y="1413" width="0.1" height="15.0" fill="rgb(212,183,29)" rx="2" ry="2" />
<text  x="641.74" y="1423.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (76,114,741 samples, 0.09%)</title><rect x="136.3" y="1573" width="1.0" height="15.0" fill="rgb(239,65,16)" rx="2" ry="2" />
<text  x="139.26" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,596,175 samples, 0.02%)</title><rect x="106.4" y="149" width="0.2" height="15.0" fill="rgb(216,45,35)" rx="2" ry="2" />
<text  x="109.40" y="159.5" ></text>
</g>
<g >
<title>lj_alloc_malloc (20,368,485 samples, 0.02%)</title><rect x="1115.6" y="1477" width="0.3" height="15.0" fill="rgb(252,77,30)" rx="2" ry="2" />
<text  x="1118.59" y="1487.5" ></text>
</g>
<g >
<title>bh_uptodate_or_lock (11,058,950 samples, 0.01%)</title><rect x="168.4" y="1205" width="0.2" height="15.0" fill="rgb(241,131,0)" rx="2" ry="2" />
<text  x="171.42" y="1215.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (14,023,539 samples, 0.02%)</title><rect x="77.6" y="965" width="0.2" height="15.0" fill="rgb(211,209,29)" rx="2" ry="2" />
<text  x="80.63" y="975.5" ></text>
</g>
<g >
<title>execute_command (10,085,220 samples, 0.01%)</title><rect x="10.6" y="1365" width="0.2" height="15.0" fill="rgb(253,47,35)" rx="2" ry="2" />
<text  x="13.64" y="1375.5" ></text>
</g>
<g >
<title>dec_zone_page_state (7,638,320 samples, 0.01%)</title><rect x="516.9" y="1301" width="0.1" height="15.0" fill="rgb(230,204,1)" rx="2" ry="2" />
<text  x="519.95" y="1311.5" ></text>
</g>
<g >
<title>clockevents_switch_state (12,507,235 samples, 0.01%)</title><rect x="638.4" y="1429" width="0.2" height="15.0" fill="rgb(246,26,52)" rx="2" ry="2" />
<text  x="641.45" y="1439.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (16,989,119 samples, 0.02%)</title><rect x="549.2" y="885" width="0.2" height="15.0" fill="rgb(237,72,47)" rx="2" ry="2" />
<text  x="552.22" y="895.5" ></text>
</g>
<g >
<title>reader_loop (46,603,527 samples, 0.05%)</title><rect x="10.6" y="1605" width="0.6" height="15.0" fill="rgb(220,56,45)" rx="2" ry="2" />
<text  x="13.63" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="773" width="0.3" height="15.0" fill="rgb(234,217,28)" rx="2" ry="2" />
<text  x="102.79" y="783.5" ></text>
</g>
<g >
<title>ext4_mb_initialize_context (52,663,998 samples, 0.06%)</title><rect x="178.4" y="1173" width="0.7" height="15.0" fill="rgb(224,6,39)" rx="2" ry="2" />
<text  x="181.41" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1429" width="0.3" height="15.0" fill="rgb(214,80,11)" rx="2" ry="2" />
<text  x="102.79" y="1439.5" ></text>
</g>
<g >
<title>worker_thread (21,487,402 samples, 0.02%)</title><rect x="46.6" y="1621" width="0.2" height="15.0" fill="rgb(232,110,47)" rx="2" ry="2" />
<text  x="49.56" y="1631.5" ></text>
</g>
<g >
<title>udp_unicast_rcv_skb.isra.0 (102,040,031 samples, 0.11%)</title><rect x="528.3" y="1253" width="1.4" height="15.0" fill="rgb(226,212,51)" rx="2" ry="2" />
<text  x="531.31" y="1263.5" ></text>
</g>
<g >
<title>__schedule (13,519,393 samples, 0.02%)</title><rect x="45.7" y="1589" width="0.2" height="15.0" fill="rgb(224,30,32)" rx="2" ry="2" />
<text  x="48.67" y="1599.5" ></text>
</g>
<g >
<title>__netif_receive_skb (961,171,868 samples, 1.08%)</title><rect x="545.3" y="1269" width="12.8" height="15.0" fill="rgb(214,121,31)" rx="2" ry="2" />
<text  x="548.33" y="1279.5" ></text>
</g>
<g >
<title>do_sys_open (8,136,312 samples, 0.01%)</title><rect x="51.1" y="1461" width="0.1" height="15.0" fill="rgb(242,56,20)" rx="2" ry="2" />
<text  x="54.12" y="1471.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (9,252,612 samples, 0.01%)</title><rect x="28.2" y="1333" width="0.1" height="15.0" fill="rgb(240,115,25)" rx="2" ry="2" />
<text  x="31.18" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (7,647,654 samples, 0.01%)</title><rect x="71.0" y="597" width="0.1" height="15.0" fill="rgb(250,69,30)" rx="2" ry="2" />
<text  x="74.00" y="607.5" ></text>
</g>
<g >
<title>mod_timer (13,662,315 samples, 0.02%)</title><rect x="565.4" y="1253" width="0.2" height="15.0" fill="rgb(237,140,14)" rx="2" ry="2" />
<text  x="568.39" y="1263.5" ></text>
</g>
<g >
<title>__default_send_IPI_dest_field (24,442,687 samples, 0.03%)</title><rect x="602.5" y="1237" width="0.4" height="15.0" fill="rgb(245,172,43)" rx="2" ry="2" />
<text  x="605.54" y="1247.5" ></text>
</g>
<g >
<title>nf_nat_packet (18,407,021 samples, 0.02%)</title><rect x="560.8" y="1301" width="0.2" height="15.0" fill="rgb(239,44,44)" rx="2" ry="2" />
<text  x="563.76" y="1311.5" ></text>
</g>
<g >
<title>clear_page_rep (7,671,576 samples, 0.01%)</title><rect x="156.1" y="1093" width="0.1" height="15.0" fill="rgb(236,19,26)" rx="2" ry="2" />
<text  x="159.14" y="1103.5" ></text>
</g>
<g >
<title>tcp_state_transition (15,486,611 samples, 0.02%)</title><rect x="1168.8" y="901" width="0.2" height="15.0" fill="rgb(212,44,34)" rx="2" ry="2" />
<text  x="1171.81" y="911.5" ></text>
</g>
<g >
<title>mongo::WiredTigerServerStatusSection::generateSection (27,543,135 samples, 0.03%)</title><rect x="15.4" y="1477" width="0.4" height="15.0" fill="rgb(225,146,34)" rx="2" ry="2" />
<text  x="18.40" y="1487.5" ></text>
</g>
<g >
<title>[ps] (46,694,254 samples, 0.05%)</title><rect x="240.5" y="1653" width="0.6" height="15.0" fill="rgb(248,191,8)" rx="2" ry="2" />
<text  x="243.48" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="677" width="3.6" height="15.0" fill="rgb(206,85,16)" rx="2" ry="2" />
<text  x="109.59" y="687.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (14,183,227 samples, 0.02%)</title><rect x="639.4" y="1269" width="0.2" height="15.0" fill="rgb(214,223,47)" rx="2" ry="2" />
<text  x="642.37" y="1279.5" ></text>
</g>
<g >
<title>process_backlog (10,480,032 samples, 0.01%)</title><rect x="889.8" y="1365" width="0.2" height="15.0" fill="rgb(231,213,37)" rx="2" ry="2" />
<text  x="892.82" y="1375.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (46,055,198 samples, 0.05%)</title><rect x="206.7" y="1205" width="0.6" height="15.0" fill="rgb(233,201,13)" rx="2" ry="2" />
<text  x="209.67" y="1215.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (4,441,163,592 samples, 4.98%)</title><rect x="1127.0" y="1333" width="58.8" height="15.0" fill="rgb(236,120,32)" rx="2" ry="2" />
<text  x="1130.00" y="1343.5" >tcp_se..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1221" width="0.3" height="15.0" fill="rgb(226,221,26)" rx="2" ry="2" />
<text  x="102.79" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2,136,417,623 samples, 2.40%)</title><rect x="58.5" y="1461" width="28.2" height="15.0" fill="rgb(227,144,42)" rx="2" ry="2" />
<text  x="61.47" y="1471.5" >s..</text>
</g>
<g >
<title>nf_nat_manip_pkt (26,405,641 samples, 0.03%)</title><rect x="575.0" y="1317" width="0.4" height="15.0" fill="rgb(229,31,41)" rx="2" ry="2" />
<text  x="578.02" y="1327.5" ></text>
</g>
<g >
<title>vfs_write (4,669,270,940 samples, 5.24%)</title><rect x="1125.0" y="1445" width="61.8" height="15.0" fill="rgb(206,130,35)" rx="2" ry="2" />
<text  x="1128.05" y="1455.5" >vfs_wr..</text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (12,186,986 samples, 0.01%)</title><rect x="686.4" y="1605" width="0.2" height="15.0" fill="rgb(241,54,14)" rx="2" ry="2" />
<text  x="689.39" y="1615.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (8,957,283 samples, 0.01%)</title><rect x="210.1" y="1173" width="0.1" height="15.0" fill="rgb(252,61,45)" rx="2" ry="2" />
<text  x="213.09" y="1183.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (14,905,437 samples, 0.02%)</title><rect x="739.0" y="821" width="0.2" height="15.0" fill="rgb(241,69,2)" rx="2" ry="2" />
<text  x="742.03" y="831.5" ></text>
</g>
<g >
<title>memset (18,701,915 samples, 0.02%)</title><rect x="214.6" y="1285" width="0.3" height="15.0" fill="rgb(231,138,25)" rx="2" ry="2" />
<text  x="217.61" y="1295.5" ></text>
</g>
<g >
<title>ip_route_output_flow (28,714,817 samples, 0.03%)</title><rect x="566.0" y="1253" width="0.4" height="15.0" fill="rgb(212,42,39)" rx="2" ry="2" />
<text  x="569.04" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1269" width="0.3" height="15.0" fill="rgb(232,101,53)" rx="2" ry="2" />
<text  x="102.79" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="517" width="18.3" height="15.0" fill="rgb(231,185,14)" rx="2" ry="2" />
<text  x="113.16" y="527.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (10,228,096 samples, 0.01%)</title><rect x="90.1" y="1461" width="0.1" height="15.0" fill="rgb(253,100,54)" rx="2" ry="2" />
<text  x="93.09" y="1471.5" ></text>
</g>
<g >
<title>native_apic_mem_read (11,151,130 samples, 0.01%)</title><rect x="503.5" y="1461" width="0.2" height="15.0" fill="rgb(231,145,49)" rx="2" ry="2" />
<text  x="506.54" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1077" width="18.3" height="15.0" fill="rgb(232,97,0)" rx="2" ry="2" />
<text  x="113.16" y="1087.5" ></text>
</g>
<g >
<title>ip_route_input_slow (73,751,800 samples, 0.08%)</title><rect x="570.3" y="1333" width="1.0" height="15.0" fill="rgb(228,222,52)" rx="2" ry="2" />
<text  x="573.35" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="773" width="3.0" height="15.0" fill="rgb(214,143,45)" rx="2" ry="2" />
<text  x="131.55" y="783.5" ></text>
</g>
<g >
<title>__x64_sys_read (28,048,894 samples, 0.03%)</title><rect x="14.5" y="1573" width="0.4" height="15.0" fill="rgb(247,150,33)" rx="2" ry="2" />
<text  x="17.53" y="1583.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (120,282,243 samples, 0.13%)</title><rect x="107.8" y="133" width="1.6" height="15.0" fill="rgb(241,22,11)" rx="2" ry="2" />
<text  x="110.78" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="629" width="1.4" height="15.0" fill="rgb(208,14,42)" rx="2" ry="2" />
<text  x="100.15" y="639.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (27,796,342 samples, 0.03%)</title><rect x="566.0" y="1237" width="0.4" height="15.0" fill="rgb(220,137,16)" rx="2" ry="2" />
<text  x="569.04" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1077" width="1.4" height="15.0" fill="rgb(214,45,32)" rx="2" ry="2" />
<text  x="100.15" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="373" width="0.9" height="15.0" fill="rgb(216,67,53)" rx="2" ry="2" />
<text  x="134.54" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1285" width="0.3" height="15.0" fill="rgb(245,152,21)" rx="2" ry="2" />
<text  x="102.79" y="1295.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (419,603,135 samples, 0.47%)</title><rect x="533.5" y="1397" width="5.5" height="15.0" fill="rgb(241,174,24)" rx="2" ry="2" />
<text  x="536.48" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="453" width="0.9" height="15.0" fill="rgb(215,79,35)" rx="2" ry="2" />
<text  x="134.54" y="463.5" ></text>
</g>
<g >
<title>ret_from_intr (24,279,885 samples, 0.03%)</title><rect x="985.8" y="1493" width="0.3" height="15.0" fill="rgb(235,186,35)" rx="2" ry="2" />
<text  x="988.77" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="229" width="0.8" height="15.0" fill="rgb(239,167,19)" rx="2" ry="2" />
<text  x="101.56" y="239.5" ></text>
</g>
<g >
<title>iptable_mangle_hook (10,767,576 samples, 0.01%)</title><rect x="1181.6" y="1173" width="0.1" height="15.0" fill="rgb(251,20,49)" rx="2" ry="2" />
<text  x="1184.59" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="277" width="3.6" height="15.0" fill="rgb(244,166,54)" rx="2" ry="2" />
<text  x="109.59" y="287.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (11,558,587 samples, 0.01%)</title><rect x="41.1" y="1509" width="0.2" height="15.0" fill="rgb(240,24,52)" rx="2" ry="2" />
<text  x="44.14" y="1519.5" ></text>
</g>
<g >
<title>record__mmap_read_all (7,492,649,812 samples, 8.40%)</title><rect x="141.0" y="1605" width="99.2" height="15.0" fill="rgb(205,136,25)" rx="2" ry="2" />
<text  x="144.02" y="1615.5" >record__mmap..</text>
</g>
<g >
<title>find_busiest_group (25,479,281 samples, 0.03%)</title><rect x="253.2" y="1429" width="0.3" height="15.0" fill="rgb(223,207,49)" rx="2" ry="2" />
<text  x="256.18" y="1439.5" ></text>
</g>
<g >
<title>rmqueue (79,547,747 samples, 0.09%)</title><rect x="202.2" y="1189" width="1.0" height="15.0" fill="rgb(226,181,30)" rx="2" ry="2" />
<text  x="205.20" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1413" width="0.8" height="15.0" fill="rgb(215,43,28)" rx="2" ry="2" />
<text  x="101.56" y="1423.5" ></text>
</g>
<g >
<title>scheduler_tick (45,798,158 samples, 0.05%)</title><rect x="642.6" y="1269" width="0.6" height="15.0" fill="rgb(205,38,20)" rx="2" ry="2" />
<text  x="645.56" y="1279.5" ></text>
</g>
<g >
<title>__libc_connect (12,086,191 samples, 0.01%)</title><rect x="700.9" y="1541" width="0.2" height="15.0" fill="rgb(227,174,44)" rx="2" ry="2" />
<text  x="703.93" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="149" width="0.3" height="15.0" fill="rgb(253,14,14)" rx="2" ry="2" />
<text  x="102.79" y="159.5" ></text>
</g>
<g >
<title>tick_broadcast_oneshot_control (71,061,635 samples, 0.08%)</title><rect x="638.0" y="1461" width="1.0" height="15.0" fill="rgb(251,220,51)" rx="2" ry="2" />
<text  x="641.03" y="1471.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (10,483,752 samples, 0.01%)</title><rect x="1111.0" y="1429" width="0.1" height="15.0" fill="rgb(241,200,11)" rx="2" ry="2" />
<text  x="1113.97" y="1439.5" ></text>
</g>
<g >
<title>rebalance_domains (9,410,021 samples, 0.01%)</title><rect x="507.3" y="1429" width="0.2" height="15.0" fill="rgb(228,18,32)" rx="2" ry="2" />
<text  x="510.34" y="1439.5" ></text>
</g>
<g >
<title>ip_vs_in.part.0 (640,998,215 samples, 0.72%)</title><rect x="1160.5" y="917" width="8.5" height="15.0" fill="rgb(208,36,18)" rx="2" ry="2" />
<text  x="1163.54" y="927.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (320,380,231 samples, 0.36%)</title><rect x="584.0" y="1557" width="4.2" height="15.0" fill="rgb(205,214,32)" rx="2" ry="2" />
<text  x="587.01" y="1567.5" ></text>
</g>
<g >
<title>dev_queue_xmit (8,920,253 samples, 0.01%)</title><rect x="738.1" y="821" width="0.2" height="15.0" fill="rgb(218,161,20)" rx="2" ry="2" />
<text  x="741.13" y="831.5" ></text>
</g>
<g >
<title>lj_tab_newkey (66,391,925 samples, 0.07%)</title><rect x="1098.5" y="1525" width="0.9" height="15.0" fill="rgb(209,22,30)" rx="2" ry="2" />
<text  x="1101.55" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="469" width="0.3" height="15.0" fill="rgb(216,205,19)" rx="2" ry="2" />
<text  x="102.79" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="645" width="0.8" height="15.0" fill="rgb(243,152,25)" rx="2" ry="2" />
<text  x="101.56" y="655.5" ></text>
</g>
<g >
<title>__switch_to_asm (14,764,830 samples, 0.02%)</title><rect x="242.5" y="1653" width="0.2" height="15.0" fill="rgb(228,206,24)" rx="2" ry="2" />
<text  x="245.55" y="1663.5" ></text>
</g>
<g >
<title>ret_from_fork (21,664,867 samples, 0.02%)</title><rect x="46.6" y="1653" width="0.2" height="15.0" fill="rgb(235,62,21)" rx="2" ry="2" />
<text  x="49.55" y="1663.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/libnetwork/networkdb.(*NetworkDB).handleMessage (14,578,514 samples, 0.02%)</title><rect x="12.1" y="1573" width="0.2" height="15.0" fill="rgb(253,153,51)" rx="2" ry="2" />
<text  x="15.13" y="1583.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (26,624,194 samples, 0.03%)</title><rect x="508.6" y="1461" width="0.3" height="15.0" fill="rgb(252,205,29)" rx="2" ry="2" />
<text  x="511.58" y="1471.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (9,138,629 samples, 0.01%)</title><rect x="584.4" y="1541" width="0.1" height="15.0" fill="rgb(222,116,44)" rx="2" ry="2" />
<text  x="587.35" y="1551.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (3,236,402,391 samples, 3.63%)</title><rect x="54.3" y="1637" width="42.9" height="15.0" fill="rgb(216,164,17)" rx="2" ry="2" />
<text  x="57.32" y="1647.5" >Inot..</text>
</g>
<g >
<title>ip_vs_reply4 (214,764,112 samples, 0.24%)</title><rect x="564.8" y="1349" width="2.9" height="15.0" fill="rgb(241,60,8)" rx="2" ry="2" />
<text  x="567.85" y="1359.5" ></text>
</g>
<g >
<title>quiet_vmstat (12,132,713 samples, 0.01%)</title><rect x="595.5" y="1573" width="0.1" height="15.0" fill="rgb(239,168,31)" rx="2" ry="2" />
<text  x="598.46" y="1583.5" ></text>
</g>
<g >
<title>ip_vs_remote_request4 (186,037,343 samples, 0.21%)</title><rect x="737.1" y="965" width="2.5" height="15.0" fill="rgb(246,175,31)" rx="2" ry="2" />
<text  x="740.12" y="975.5" ></text>
</g>
<g >
<title>__kfree_skb_flush (11,715,265 samples, 0.01%)</title><rect x="511.2" y="1477" width="0.1" height="15.0" fill="rgb(239,181,12)" rx="2" ry="2" />
<text  x="514.19" y="1487.5" ></text>
</g>
<g >
<title>mempool_alloc_slab (624,250,210 samples, 0.70%)</title><rect x="22.0" y="1429" width="8.3" height="15.0" fill="rgb(227,204,53)" rx="2" ry="2" />
<text  x="25.03" y="1439.5" ></text>
</g>
<g >
<title>ip_rcv (1,037,670,447 samples, 1.16%)</title><rect x="561.7" y="1413" width="13.8" height="15.0" fill="rgb(220,50,47)" rx="2" ry="2" />
<text  x="564.73" y="1423.5" ></text>
</g>
<g >
<title>blk_account_io_start (18,857,715 samples, 0.02%)</title><rect x="35.1" y="1397" width="0.3" height="15.0" fill="rgb(229,20,32)" rx="2" ry="2" />
<text  x="38.11" y="1407.5" ></text>
</g>
<g >
<title>net_rx_action (144,143,853 samples, 0.16%)</title><rect x="250.8" y="1477" width="1.9" height="15.0" fill="rgb(243,48,1)" rx="2" ry="2" />
<text  x="253.77" y="1487.5" ></text>
</g>
<g >
<title>lru_cache_add (118,636,975 samples, 0.13%)</title><rect x="210.6" y="1237" width="1.5" height="15.0" fill="rgb(253,205,40)" rx="2" ry="2" />
<text  x="213.56" y="1247.5" ></text>
</g>
<g >
<title>vfs_read (85,760,907 samples, 0.10%)</title><rect x="95.8" y="1525" width="1.2" height="15.0" fill="rgb(253,45,14)" rx="2" ry="2" />
<text  x="98.82" y="1535.5" ></text>
</g>
<g >
<title>lj_alloc_realloc (8,926,280 samples, 0.01%)</title><rect x="920.1" y="1445" width="0.1" height="15.0" fill="rgb(245,164,38)" rx="2" ry="2" />
<text  x="923.08" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1557" width="3.0" height="15.0" fill="rgb(234,143,16)" rx="2" ry="2" />
<text  x="131.55" y="1567.5" ></text>
</g>
<g >
<title>schedule (13,210,041 samples, 0.01%)</title><rect x="47.4" y="1605" width="0.2" height="15.0" fill="rgb(218,105,27)" rx="2" ry="2" />
<text  x="50.45" y="1615.5" ></text>
</g>
<g >
<title>systemd-network (7,838,380 samples, 0.01%)</title><rect x="653.9" y="1669" width="0.1" height="15.0" fill="rgb(254,135,51)" rx="2" ry="2" />
<text  x="656.90" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1205" width="0.8" height="15.0" fill="rgb(231,55,31)" rx="2" ry="2" />
<text  x="101.56" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (844,456,614 samples, 0.95%)</title><rect x="61.1" y="709" width="11.2" height="15.0" fill="rgb(238,124,52)" rx="2" ry="2" />
<text  x="64.12" y="719.5" ></text>
</g>
<g >
<title>v8::internal::KeyAccumulator::CollectOwnJSProxyTargetKeys (10,460,137 samples, 0.01%)</title><rect x="52.8" y="1541" width="0.2" height="15.0" fill="rgb(239,215,24)" rx="2" ry="2" />
<text  x="55.83" y="1551.5" ></text>
</g>
<g >
<title>iptunnel_xmit (17,918,271 samples, 0.02%)</title><rect x="251.3" y="1045" width="0.3" height="15.0" fill="rgb(228,226,26)" rx="2" ry="2" />
<text  x="254.32" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1317" width="0.4" height="15.0" fill="rgb(248,75,26)" rx="2" ry="2" />
<text  x="56.88" y="1327.5" ></text>
</g>
<g >
<title>ret_from_fork (10,767,858 samples, 0.01%)</title><rect x="40.8" y="1653" width="0.1" height="15.0" fill="rgb(209,188,5)" rx="2" ry="2" />
<text  x="43.75" y="1663.5" ></text>
</g>
<g >
<title>br_nf_dev_queue_xmit (762,921,845 samples, 0.86%)</title><rect x="1147.8" y="773" width="10.1" height="15.0" fill="rgb(209,11,20)" rx="2" ry="2" />
<text  x="1150.79" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="485" width="3.0" height="15.0" fill="rgb(221,125,41)" rx="2" ry="2" />
<text  x="131.55" y="495.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (13,053,491 samples, 0.01%)</title><rect x="579.6" y="1573" width="0.2" height="15.0" fill="rgb(225,66,7)" rx="2" ry="2" />
<text  x="582.63" y="1583.5" ></text>
</g>
<g >
<title>__vsprintf_internal (799,822,146 samples, 0.90%)</title><rect x="1104.4" y="1477" width="10.6" height="15.0" fill="rgb(207,96,8)" rx="2" ry="2" />
<text  x="1107.40" y="1487.5" ></text>
</g>
<g >
<title>ip_route_output_flow (51,048,536 samples, 0.06%)</title><rect x="1166.7" y="837" width="0.6" height="15.0" fill="rgb(227,220,15)" rx="2" ry="2" />
<text  x="1169.65" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="293" width="18.3" height="15.0" fill="rgb(239,188,45)" rx="2" ry="2" />
<text  x="113.16" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1525" width="0.9" height="15.0" fill="rgb(240,224,37)" rx="2" ry="2" />
<text  x="134.54" y="1535.5" ></text>
</g>
<g >
<title>lj_BC_FUNCC (3,102,080,909 samples, 3.48%)</title><rect x="987.5" y="1541" width="41.0" height="15.0" fill="rgb(223,32,16)" rx="2" ry="2" />
<text  x="990.47" y="1551.5" >lj_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (52,788,754 samples, 0.06%)</title><rect x="131.5" y="149" width="0.7" height="15.0" fill="rgb(211,206,45)" rx="2" ry="2" />
<text  x="134.54" y="159.5" ></text>
</g>
<g >
<title>br_nf_forward_finish (24,305,221 samples, 0.03%)</title><rect x="41.7" y="1349" width="0.3" height="15.0" fill="rgb(239,107,32)" rx="2" ry="2" />
<text  x="44.72" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1253" width="0.4" height="15.0" fill="rgb(251,31,10)" rx="2" ry="2" />
<text  x="56.88" y="1263.5" ></text>
</g>
<g >
<title>dbs_update_util_handler (9,897,326 samples, 0.01%)</title><rect x="254.3" y="1445" width="0.1" height="15.0" fill="rgb(249,45,43)" rx="2" ry="2" />
<text  x="257.25" y="1455.5" ></text>
</g>
<g >
<title>ip_route_output_flow (17,776,431 samples, 0.02%)</title><rect x="549.2" y="901" width="0.3" height="15.0" fill="rgb(219,1,16)" rx="2" ry="2" />
<text  x="552.22" y="911.5" ></text>
</g>
<g >
<title>enqueue_task_fair (32,896,985 samples, 0.04%)</title><rect x="94.2" y="1413" width="0.4" height="15.0" fill="rgb(227,158,26)" rx="2" ry="2" />
<text  x="97.20" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1301" width="0.9" height="15.0" fill="rgb(227,117,28)" rx="2" ry="2" />
<text  x="134.54" y="1311.5" ></text>
</g>
<g >
<title>nf_nat_manip_pkt (46,865,179 samples, 0.05%)</title><rect x="1140.8" y="1109" width="0.6" height="15.0" fill="rgb(243,145,14)" rx="2" ry="2" />
<text  x="1143.79" y="1119.5" ></text>
</g>
<g >
<title>ipt_do_table (8,485,770 samples, 0.01%)</title><rect x="1181.6" y="1157" width="0.1" height="15.0" fill="rgb(209,210,33)" rx="2" ry="2" />
<text  x="1184.62" y="1167.5" ></text>
</g>
<g >
<title>l4proto_manip_pkt (8,683,152 samples, 0.01%)</title><rect x="560.9" y="1253" width="0.1" height="15.0" fill="rgb(215,214,50)" rx="2" ry="2" />
<text  x="563.85" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="421" width="18.3" height="15.0" fill="rgb(242,159,20)" rx="2" ry="2" />
<text  x="113.16" y="431.5" ></text>
</g>
<g >
<title>mempool_alloc_slab (10,867,084 samples, 0.01%)</title><rect x="30.3" y="1445" width="0.2" height="15.0" fill="rgb(240,185,2)" rx="2" ry="2" />
<text  x="33.31" y="1455.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (450,766,735 samples, 0.51%)</title><rect x="956.3" y="1493" width="6.0" height="15.0" fill="rgb(250,77,51)" rx="2" ry="2" />
<text  x="959.29" y="1503.5" ></text>
</g>
<g >
<title>ring_buffer_read_head (16,143,393 samples, 0.02%)</title><rect x="141.7" y="1541" width="0.2" height="15.0" fill="rgb(209,82,16)" rx="2" ry="2" />
<text  x="144.71" y="1551.5" ></text>
</g>
<g >
<title>start_thread (92,280,596 samples, 0.10%)</title><rect x="15.1" y="1637" width="1.3" height="15.0" fill="rgb(233,51,32)" rx="2" ry="2" />
<text  x="18.14" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="549" width="0.9" height="15.0" fill="rgb(254,86,27)" rx="2" ry="2" />
<text  x="134.54" y="559.5" ></text>
</g>
<g >
<title>tick_program_event (10,960,663 samples, 0.01%)</title><rect x="250.1" y="1493" width="0.1" height="15.0" fill="rgb(248,78,27)" rx="2" ry="2" />
<text  x="253.09" y="1503.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (26,092,352 samples, 0.03%)</title><rect x="1127.9" y="1317" width="0.4" height="15.0" fill="rgb(253,196,47)" rx="2" ry="2" />
<text  x="1130.93" y="1327.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (253,191,138 samples, 0.28%)</title><rect x="1176.5" y="1109" width="3.3" height="15.0" fill="rgb(212,137,10)" rx="2" ry="2" />
<text  x="1179.47" y="1119.5" ></text>
</g>
<g >
<title>scsi_io_completion (499,584,708 samples, 0.56%)</title><rect x="511.4" y="1429" width="6.6" height="15.0" fill="rgb(246,0,47)" rx="2" ry="2" />
<text  x="514.42" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1541" width="18.3" height="15.0" fill="rgb(221,144,27)" rx="2" ry="2" />
<text  x="113.16" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1285" width="0.9" height="15.0" fill="rgb(253,183,1)" rx="2" ry="2" />
<text  x="134.54" y="1295.5" ></text>
</g>
<g >
<title>_int_free (15,657,427 samples, 0.02%)</title><rect x="69.3" y="533" width="0.2" height="15.0" fill="rgb(222,37,11)" rx="2" ry="2" />
<text  x="72.28" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1381" width="3.6" height="15.0" fill="rgb(211,218,33)" rx="2" ry="2" />
<text  x="109.59" y="1391.5" ></text>
</g>
<g >
<title>__slab_alloc (50,182,410 samples, 0.06%)</title><rect x="155.7" y="1221" width="0.7" height="15.0" fill="rgb(243,11,49)" rx="2" ry="2" />
<text  x="158.69" y="1231.5" ></text>
</g>
<g >
<title>br_dev_queue_push_xmit (27,306,364 samples, 0.03%)</title><rect x="251.2" y="1157" width="0.4" height="15.0" fill="rgb(246,54,33)" rx="2" ry="2" />
<text  x="254.23" y="1167.5" ></text>
</g>
<g >
<title>default_tzdir.7509 (8,215,717 samples, 0.01%)</title><rect x="1114.7" y="1429" width="0.1" height="15.0" fill="rgb(217,84,9)" rx="2" ry="2" />
<text  x="1117.68" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1333" width="3.0" height="15.0" fill="rgb(250,198,23)" rx="2" ry="2" />
<text  x="131.55" y="1343.5" ></text>
</g>
<g >
<title>__GI___clone (37,466,878,023 samples, 42.02%)</title><rect x="692.6" y="1653" width="495.8" height="15.0" fill="rgb(243,193,21)" rx="2" ry="2" />
<text  x="695.63" y="1663.5" >__GI___clone</text>
</g>
<g >
<title>expand_word (8,212,682 samples, 0.01%)</title><rect x="11.0" y="1381" width="0.1" height="15.0" fill="rgb(236,190,49)" rx="2" ry="2" />
<text  x="13.95" y="1391.5" ></text>
</g>
<g >
<title>arch_irq_work_raise (8,206,683 samples, 0.01%)</title><rect x="254.3" y="1397" width="0.1" height="15.0" fill="rgb(227,32,36)" rx="2" ry="2" />
<text  x="257.27" y="1407.5" ></text>
</g>
<g >
<title>ip_local_out (134,708,094 samples, 0.15%)</title><rect x="734.1" y="645" width="1.8" height="15.0" fill="rgb(239,109,27)" rx="2" ry="2" />
<text  x="737.13" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,913,443,617 samples, 2.15%)</title><rect x="58.7" y="1381" width="25.3" height="15.0" fill="rgb(208,206,33)" rx="2" ry="2" />
<text  x="61.70" y="1391.5" >s..</text>
</g>
<g >
<title>do_IRQ (27,162,230 samples, 0.03%)</title><rect x="602.5" y="1397" width="0.4" height="15.0" fill="rgb(243,55,7)" rx="2" ry="2" />
<text  x="605.51" y="1407.5" ></text>
</g>
<g >
<title>allocate_slab (16,433,413 samples, 0.02%)</title><rect x="33.0" y="1413" width="0.2" height="15.0" fill="rgb(233,96,22)" rx="2" ry="2" />
<text  x="35.99" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (92,051,027 samples, 0.10%)</title><rect x="65.2" y="357" width="1.2" height="15.0" fill="rgb(241,229,8)" rx="2" ry="2" />
<text  x="68.20" y="367.5" ></text>
</g>
<g >
<title>handle_irq_event (86,580,662 samples, 0.10%)</title><rect x="508.4" y="1493" width="1.1" height="15.0" fill="rgb(252,136,12)" rx="2" ry="2" />
<text  x="511.36" y="1503.5" ></text>
</g>
<g >
<title>uv_cond_wait (8,695,203 samples, 0.01%)</title><rect x="137.6" y="1605" width="0.1" height="15.0" fill="rgb(222,13,6)" rx="2" ry="2" />
<text  x="140.59" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="821" width="3.0" height="15.0" fill="rgb(207,154,13)" rx="2" ry="2" />
<text  x="131.55" y="831.5" ></text>
</g>
<g >
<title>from_kprojid (7,735,794 samples, 0.01%)</title><rect x="226.8" y="1237" width="0.1" height="15.0" fill="rgb(217,198,31)" rx="2" ry="2" />
<text  x="229.79" y="1247.5" ></text>
</g>
<g >
<title>napi_gro_receive (27,590,077 samples, 0.03%)</title><rect x="539.1" y="1445" width="0.4" height="15.0" fill="rgb(222,59,21)" rx="2" ry="2" />
<text  x="542.15" y="1455.5" ></text>
</g>
<g >
<title>kthread_blkcg (7,775,652 samples, 0.01%)</title><rect x="32.2" y="1477" width="0.1" height="15.0" fill="rgb(230,175,2)" rx="2" ry="2" />
<text  x="35.22" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,271,264 samples, 0.55%)</title><rect x="100.1" y="437" width="6.5" height="15.0" fill="rgb(226,60,47)" rx="2" ry="2" />
<text  x="103.13" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1285" width="0.4" height="15.0" fill="rgb(228,38,27)" rx="2" ry="2" />
<text  x="56.88" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1061" width="0.4" height="15.0" fill="rgb(232,117,37)" rx="2" ry="2" />
<text  x="56.54" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,318,551 samples, 0.04%)</title><rect x="53.9" y="277" width="0.4" height="15.0" fill="rgb(216,143,49)" rx="2" ry="2" />
<text  x="56.88" y="287.5" ></text>
</g>
<g >
<title>udp_rcv (130,051,750 samples, 0.15%)</title><rect x="528.0" y="1285" width="1.7" height="15.0" fill="rgb(242,49,4)" rx="2" ry="2" />
<text  x="530.97" y="1295.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (98,325,984 samples, 0.11%)</title><rect x="955.0" y="1493" width="1.3" height="15.0" fill="rgb(207,30,5)" rx="2" ry="2" />
<text  x="957.99" y="1503.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (58,527,070 samples, 0.07%)</title><rect x="140.2" y="1477" width="0.8" height="15.0" fill="rgb(236,118,5)" rx="2" ry="2" />
<text  x="143.19" y="1487.5" ></text>
</g>
<g >
<title>nf_hook_slow (13,391,373 samples, 0.02%)</title><rect x="568.9" y="1269" width="0.2" height="15.0" fill="rgb(243,224,2)" rx="2" ry="2" />
<text  x="571.89" y="1279.5" ></text>
</g>
<g >
<title>ret_from_intr (18,315,074 samples, 0.02%)</title><rect x="1064.3" y="1509" width="0.2" height="15.0" fill="rgb(217,182,31)" rx="2" ry="2" />
<text  x="1067.30" y="1519.5" ></text>
</g>
<g >
<title>jbd2_journal_commit_transaction (1,800,516,281 samples, 2.02%)</title><rect x="16.5" y="1605" width="23.8" height="15.0" fill="rgb(205,68,6)" rx="2" ry="2" />
<text  x="19.45" y="1615.5" >j..</text>
</g>
<g >
<title>new_sync_write (4,592,284,055 samples, 5.15%)</title><rect x="1125.4" y="1413" width="60.7" height="15.0" fill="rgb(235,88,9)" rx="2" ry="2" />
<text  x="1128.37" y="1423.5" >new_sy..</text>
</g>
<g >
<title>ret_from_fork (23,644,822 samples, 0.03%)</title><rect x="45.9" y="1653" width="0.3" height="15.0" fill="rgb(239,83,19)" rx="2" ry="2" />
<text  x="48.90" y="1663.5" ></text>
</g>
<g >
<title>xfrm_lookup_with_ifid (11,989,298 samples, 0.01%)</title><rect x="1140.2" y="1125" width="0.1" height="15.0" fill="rgb(251,9,41)" rx="2" ry="2" />
<text  x="1143.18" y="1135.5" ></text>
</g>
<g >
<title>__fdget (8,689,840 samples, 0.01%)</title><rect x="134.1" y="1493" width="0.1" height="15.0" fill="rgb(210,9,5)" rx="2" ry="2" />
<text  x="137.10" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="757" width="0.9" height="15.0" fill="rgb(214,92,6)" rx="2" ry="2" />
<text  x="134.54" y="767.5" ></text>
</g>
<g >
<title>execute_command_internal (8,748,644 samples, 0.01%)</title><rect x="10.6" y="1301" width="0.2" height="15.0" fill="rgb(210,187,33)" rx="2" ry="2" />
<text  x="13.64" y="1311.5" ></text>
</g>
<g >
<title>skb_clone (20,766,593 samples, 0.02%)</title><rect x="1183.0" y="1253" width="0.2" height="15.0" fill="rgb(243,33,19)" rx="2" ry="2" />
<text  x="1185.96" y="1263.5" ></text>
</g>
<g >
<title>ip_vs_reply4 (10,346,649 samples, 0.01%)</title><rect x="569.8" y="1349" width="0.2" height="15.0" fill="rgb(228,178,31)" rx="2" ry="2" />
<text  x="572.84" y="1359.5" ></text>
</g>
<g >
<title>native_apic_mem_read (17,957,056 samples, 0.02%)</title><rect x="504.1" y="1461" width="0.2" height="15.0" fill="rgb(207,186,0)" rx="2" ry="2" />
<text  x="507.08" y="1471.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (186,159,023 samples, 0.21%)</title><rect x="542.4" y="1125" width="2.4" height="15.0" fill="rgb(208,133,40)" rx="2" ry="2" />
<text  x="545.36" y="1135.5" ></text>
</g>
<g >
<title>__read_once_size (16,143,393 samples, 0.02%)</title><rect x="141.7" y="1525" width="0.2" height="15.0" fill="rgb(208,1,20)" rx="2" ry="2" />
<text  x="144.71" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="165" width="0.3" height="15.0" fill="rgb(231,12,22)" rx="2" ry="2" />
<text  x="102.79" y="175.5" ></text>
</g>
<g >
<title>dockerd (223,453,540 samples, 0.25%)</title><rect x="11.4" y="1669" width="3.0" height="15.0" fill="rgb(224,65,52)" rx="2" ry="2" />
<text  x="14.43" y="1679.5" ></text>
</g>
<g >
<title>irq_enter (9,325,014 samples, 0.01%)</title><rect x="650.2" y="1445" width="0.1" height="15.0" fill="rgb(235,191,43)" rx="2" ry="2" />
<text  x="653.18" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1445" width="0.3" height="15.0" fill="rgb(242,47,0)" rx="2" ry="2" />
<text  x="102.79" y="1455.5" ></text>
</g>
<g >
<title>__strchrnul_sse2 (23,910,252 samples, 0.03%)</title><rect x="1114.4" y="1429" width="0.3" height="15.0" fill="rgb(235,201,12)" rx="2" ry="2" />
<text  x="1117.37" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1109" width="1.4" height="15.0" fill="rgb(238,208,33)" rx="2" ry="2" />
<text  x="100.15" y="1119.5" ></text>
</g>
<g >
<title>br_nf_hook_thresh (815,529,282 samples, 0.91%)</title><rect x="1147.1" y="837" width="10.8" height="15.0" fill="rgb(244,201,0)" rx="2" ry="2" />
<text  x="1150.14" y="847.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (60,732,855 samples, 0.07%)</title><rect x="640.9" y="1381" width="0.8" height="15.0" fill="rgb(219,112,15)" rx="2" ry="2" />
<text  x="643.91" y="1391.5" ></text>
</g>
<g >
<title>_IO_new_fopen (9,138,716 samples, 0.01%)</title><rect x="51.1" y="1589" width="0.1" height="15.0" fill="rgb(231,1,4)" rx="2" ry="2" />
<text  x="54.11" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,448,485 samples, 0.55%)</title><rect x="100.1" y="949" width="6.5" height="15.0" fill="rgb(225,225,37)" rx="2" ry="2" />
<text  x="103.13" y="959.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (8,985,390 samples, 0.01%)</title><rect x="899.1" y="1365" width="0.1" height="15.0" fill="rgb(243,153,26)" rx="2" ry="2" />
<text  x="902.10" y="1375.5" ></text>
</g>
<g >
<title>dev_queue_xmit (75,223,388 samples, 0.08%)</title><rect x="562.9" y="1285" width="0.9" height="15.0" fill="rgb(205,107,46)" rx="2" ry="2" />
<text  x="565.85" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="949" width="0.4" height="15.0" fill="rgb(237,183,29)" rx="2" ry="2" />
<text  x="56.88" y="959.5" ></text>
</g>
<g >
<title>expand_word (9,130,931 samples, 0.01%)</title><rect x="10.8" y="1093" width="0.1" height="15.0" fill="rgb(218,217,18)" rx="2" ry="2" />
<text  x="13.80" y="1103.5" ></text>
</g>
<g >
<title>[[stack]] (24,933,744 samples, 0.03%)</title><rect x="47.9" y="1653" width="0.3" height="15.0" fill="rgb(238,70,23)" rx="2" ry="2" />
<text  x="50.92" y="1663.5" ></text>
</g>
<g >
<title>ip_vs_remote_request4 (10,576,104 samples, 0.01%)</title><rect x="43.5" y="1445" width="0.1" height="15.0" fill="rgb(231,139,28)" rx="2" ry="2" />
<text  x="46.45" y="1455.5" ></text>
</g>
<g >
<title>nf_hook_slow (767,309,037 samples, 0.86%)</title><rect x="1160.4" y="965" width="10.1" height="15.0" fill="rgb(222,11,39)" rx="2" ry="2" />
<text  x="1163.38" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1093" width="0.4" height="15.0" fill="rgb(242,69,42)" rx="2" ry="2" />
<text  x="56.54" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="517" width="3.0" height="15.0" fill="rgb(209,218,32)" rx="2" ry="2" />
<text  x="131.55" y="527.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (7,751,564 samples, 0.01%)</title><rect x="744.9" y="1509" width="0.1" height="15.0" fill="rgb(245,51,28)" rx="2" ry="2" />
<text  x="747.91" y="1519.5" ></text>
</g>
<g >
<title>ipt_do_table (23,760,849 samples, 0.03%)</title><rect x="1133.9" y="1157" width="0.3" height="15.0" fill="rgb(225,87,34)" rx="2" ry="2" />
<text  x="1136.89" y="1167.5" ></text>
</g>
<g >
<title>ip_output (174,196,861 samples, 0.20%)</title><rect x="1162.7" y="885" width="2.3" height="15.0" fill="rgb(230,24,21)" rx="2" ry="2" />
<text  x="1165.73" y="895.5" ></text>
</g>
<g >
<title>memset (14,226,143 samples, 0.02%)</title><rect x="187.1" y="1173" width="0.1" height="15.0" fill="rgb(250,116,18)" rx="2" ry="2" />
<text  x="190.05" y="1183.5" ></text>
</g>
<g >
<title>__writepage (1,615,675,401 samples, 1.81%)</title><rect x="17.1" y="1525" width="21.4" height="15.0" fill="rgb(208,172,38)" rx="2" ry="2" />
<text  x="20.10" y="1535.5" >_..</text>
</g>
<g >
<title>execute_command (9,393,046 samples, 0.01%)</title><rect x="10.8" y="1125" width="0.1" height="15.0" fill="rgb(226,141,18)" rx="2" ry="2" />
<text  x="13.80" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,843,087 samples, 0.01%)</title><rect x="69.7" y="517" width="0.2" height="15.0" fill="rgb(208,114,32)" rx="2" ry="2" />
<text  x="72.74" y="527.5" ></text>
</g>
<g >
<title>dev_queue_xmit (63,305,682 samples, 0.07%)</title><rect x="1180.4" y="1125" width="0.9" height="15.0" fill="rgb(247,96,46)" rx="2" ry="2" />
<text  x="1183.44" y="1135.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_out (8,961,445 samples, 0.01%)</title><rect x="568.9" y="1253" width="0.2" height="15.0" fill="rgb(242,204,10)" rx="2" ry="2" />
<text  x="571.94" y="1263.5" ></text>
</g>
<g >
<title>mark_page_accessed (47,917,163 samples, 0.05%)</title><rect x="191.3" y="1157" width="0.6" height="15.0" fill="rgb(205,212,41)" rx="2" ry="2" />
<text  x="194.30" y="1167.5" ></text>
</g>
<g >
<title>veth_xmit (37,488,612 samples, 0.04%)</title><rect x="563.0" y="1237" width="0.5" height="15.0" fill="rgb(230,43,49)" rx="2" ry="2" />
<text  x="566.04" y="1247.5" ></text>
</g>
<g >
<title>bvec_alloc (657,400,061 samples, 0.74%)</title><rect x="21.8" y="1461" width="8.7" height="15.0" fill="rgb(245,117,22)" rx="2" ry="2" />
<text  x="24.75" y="1471.5" ></text>
</g>
<g >
<title>try_to_wake_up (10,498,047 samples, 0.01%)</title><rect x="575.7" y="1461" width="0.1" height="15.0" fill="rgb(232,51,53)" rx="2" ry="2" />
<text  x="578.67" y="1471.5" ></text>
</g>
<g >
<title>lj_snap_restore (75,726,186 samples, 0.08%)</title><rect x="691.0" y="1573" width="1.0" height="15.0" fill="rgb(236,7,12)" rx="2" ry="2" />
<text  x="693.95" y="1583.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (109,954,568 samples, 0.12%)</title><rect x="554.1" y="1013" width="1.4" height="15.0" fill="rgb(222,193,49)" rx="2" ry="2" />
<text  x="557.05" y="1023.5" ></text>
</g>
<g >
<title>tick_sched_handle (12,640,108 samples, 0.01%)</title><rect x="639.4" y="1221" width="0.2" height="15.0" fill="rgb(246,200,22)" rx="2" ry="2" />
<text  x="642.38" y="1231.5" ></text>
</g>
<g >
<title>br_dev_xmit (46,080,408 samples, 0.05%)</title><rect x="741.7" y="1109" width="0.6" height="15.0" fill="rgb(246,89,0)" rx="2" ry="2" />
<text  x="744.67" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="997" width="0.4" height="15.0" fill="rgb(209,196,47)" rx="2" ry="2" />
<text  x="56.54" y="1007.5" ></text>
</g>
<g >
<title>memset (10,064,316 samples, 0.01%)</title><rect x="1167.9" y="853" width="0.2" height="15.0" fill="rgb(212,4,37)" rx="2" ry="2" />
<text  x="1170.93" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="245" width="1.4" height="15.0" fill="rgb(246,119,38)" rx="2" ry="2" />
<text  x="100.15" y="255.5" ></text>
</g>
<g >
<title>update_load_avg (37,364,362 samples, 0.04%)</title><rect x="248.1" y="1365" width="0.5" height="15.0" fill="rgb(242,166,46)" rx="2" ry="2" />
<text  x="251.09" y="1375.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (414,988,678 samples, 0.47%)</title><rect x="230.3" y="1301" width="5.5" height="15.0" fill="rgb(246,51,44)" rx="2" ry="2" />
<text  x="233.29" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1269" width="3.6" height="15.0" fill="rgb(220,211,28)" rx="2" ry="2" />
<text  x="109.59" y="1279.5" ></text>
</g>
<g >
<title>apparmor_file_permission (14,426,536 samples, 0.02%)</title><rect x="237.9" y="1349" width="0.2" height="15.0" fill="rgb(254,160,41)" rx="2" ry="2" />
<text  x="240.89" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1301" width="1.4" height="15.0" fill="rgb(219,39,17)" rx="2" ry="2" />
<text  x="100.15" y="1311.5" ></text>
</g>
<g >
<title>v8::internal::KeyAccumulator::GetKeys (10,723,034 samples, 0.01%)</title><rect x="52.8" y="1589" width="0.2" height="15.0" fill="rgb(224,207,10)" rx="2" ry="2" />
<text  x="55.83" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="341" width="0.4" height="15.0" fill="rgb(211,71,34)" rx="2" ry="2" />
<text  x="56.54" y="351.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (12,829,451 samples, 0.01%)</title><rect x="239.6" y="1301" width="0.1" height="15.0" fill="rgb(250,32,37)" rx="2" ry="2" />
<text  x="242.57" y="1311.5" ></text>
</g>
<g >
<title>perf_pmu_sched_task (30,447,656 samples, 0.03%)</title><rect x="707.7" y="1397" width="0.4" height="15.0" fill="rgb(244,7,21)" rx="2" ry="2" />
<text  x="710.70" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (536,003,223 samples, 0.60%)</title><rect x="61.7" y="549" width="7.0" height="15.0" fill="rgb(205,126,21)" rx="2" ry="2" />
<text  x="64.65" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1413" width="0.4" height="15.0" fill="rgb(222,177,3)" rx="2" ry="2" />
<text  x="56.88" y="1423.5" ></text>
</g>
<g >
<title>perf_event_task_tick (44,996,239 samples, 0.05%)</title><rect x="642.6" y="1253" width="0.6" height="15.0" fill="rgb(239,156,4)" rx="2" ry="2" />
<text  x="645.56" y="1263.5" ></text>
</g>
<g >
<title>bio_add_page (12,319,666 samples, 0.01%)</title><rect x="21.1" y="1477" width="0.2" height="15.0" fill="rgb(224,158,24)" rx="2" ry="2" />
<text  x="24.13" y="1487.5" ></text>
</g>
<g >
<title>__ip_local_out (677,114,565 samples, 0.76%)</title><rect x="1132.7" y="1205" width="8.9" height="15.0" fill="rgb(222,130,18)" rx="2" ry="2" />
<text  x="1135.68" y="1215.5" ></text>
</g>
<g >
<title>tcp_recvmsg (1,383,732,875 samples, 1.55%)</title><rect x="725.6" y="1349" width="18.3" height="15.0" fill="rgb(247,220,50)" rx="2" ry="2" />
<text  x="728.62" y="1359.5" ></text>
</g>
<g >
<title>try_to_wake_up (11,611,739 samples, 0.01%)</title><rect x="253.9" y="1285" width="0.2" height="15.0" fill="rgb(224,72,49)" rx="2" ry="2" />
<text  x="256.94" y="1295.5" ></text>
</g>
<g >
<title>perf_pmu_sched_task (10,460,925 samples, 0.01%)</title><rect x="711.4" y="1381" width="0.1" height="15.0" fill="rgb(211,35,9)" rx="2" ry="2" />
<text  x="714.39" y="1391.5" ></text>
</g>
<g >
<title>lj_tab_len (1,988,939,391 samples, 2.23%)</title><rect x="1038.2" y="1525" width="26.4" height="15.0" fill="rgb(246,64,23)" rx="2" ry="2" />
<text  x="1041.23" y="1535.5" >l..</text>
</g>
<g >
<title>lj_alloc_free (52,666,968 samples, 0.06%)</title><rect x="1117.1" y="1477" width="0.7" height="15.0" fill="rgb(215,184,33)" rx="2" ry="2" />
<text  x="1120.08" y="1487.5" ></text>
</g>
<g >
<title>__fget_light (23,024,952 samples, 0.03%)</title><rect x="702.6" y="1477" width="0.3" height="15.0" fill="rgb(218,60,12)" rx="2" ry="2" />
<text  x="705.59" y="1487.5" ></text>
</g>
<g >
<title>schedule (89,038,393 samples, 0.10%)</title><rect x="134.7" y="1445" width="1.2" height="15.0" fill="rgb(214,142,49)" rx="2" ry="2" />
<text  x="137.69" y="1455.5" ></text>
</g>
<g >
<title>ip_local_out (14,225,130 samples, 0.02%)</title><rect x="42.3" y="1077" width="0.2" height="15.0" fill="rgb(237,62,44)" rx="2" ry="2" />
<text  x="45.28" y="1087.5" ></text>
</g>
<g >
<title>ip_vs_reply4 (67,511,381 samples, 0.08%)</title><rect x="1169.2" y="949" width="0.9" height="15.0" fill="rgb(220,117,1)" rx="2" ry="2" />
<text  x="1172.18" y="959.5" ></text>
</g>
<g >
<title>update_blocked_averages (113,196,329 samples, 0.13%)</title><rect x="253.6" y="1461" width="1.4" height="15.0" fill="rgb(232,147,39)" rx="2" ry="2" />
<text  x="256.55" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="805" width="0.3" height="15.0" fill="rgb(247,168,34)" rx="2" ry="2" />
<text  x="102.79" y="815.5" ></text>
</g>
<g >
<title>iptunnel_xmit (128,760,037 samples, 0.14%)</title><rect x="542.9" y="1045" width="1.7" height="15.0" fill="rgb(229,145,29)" rx="2" ry="2" />
<text  x="545.89" y="1055.5" ></text>
</g>
<g >
<title>mark_page_accessed (24,160,470 samples, 0.03%)</title><rect x="228.6" y="1205" width="0.3" height="15.0" fill="rgb(214,74,30)" rx="2" ry="2" />
<text  x="231.57" y="1215.5" ></text>
</g>
<g >
<title>__skb_ext_put (15,969,214 samples, 0.02%)</title><rect x="1147.9" y="741" width="0.2" height="15.0" fill="rgb(245,93,50)" rx="2" ry="2" />
<text  x="1150.91" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1029" width="18.3" height="15.0" fill="rgb(238,69,54)" rx="2" ry="2" />
<text  x="113.16" y="1039.5" ></text>
</g>
<g >
<title>nf_nat_inet_fn (38,108,968 samples, 0.04%)</title><rect x="574.9" y="1349" width="0.5" height="15.0" fill="rgb(239,60,39)" rx="2" ry="2" />
<text  x="577.87" y="1359.5" ></text>
</g>
<g >
<title>nf_hook_slow (7,989,196 samples, 0.01%)</title><rect x="735.8" y="613" width="0.1" height="15.0" fill="rgb(211,191,35)" rx="2" ry="2" />
<text  x="738.80" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,933,054 samples, 0.10%)</title><rect x="106.6" y="117" width="1.2" height="15.0" fill="rgb(254,159,48)" rx="2" ry="2" />
<text  x="109.59" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="325" width="3.0" height="15.0" fill="rgb(233,98,45)" rx="2" ry="2" />
<text  x="131.55" y="335.5" ></text>
</g>
<g >
<title>activate_task (9,347,489 samples, 0.01%)</title><rect x="575.7" y="1429" width="0.1" height="15.0" fill="rgb(230,49,51)" rx="2" ry="2" />
<text  x="578.68" y="1439.5" ></text>
</g>
<g >
<title>ip_forward_finish (9,396,478 samples, 0.01%)</title><rect x="43.1" y="1461" width="0.1" height="15.0" fill="rgb(207,199,38)" rx="2" ry="2" />
<text  x="46.12" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,909,020,440 samples, 2.14%)</title><rect x="58.7" y="1365" width="25.3" height="15.0" fill="rgb(249,206,21)" rx="2" ry="2" />
<text  x="61.74" y="1375.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1429" width="3.6" height="15.0" fill="rgb(228,87,54)" rx="2" ry="2" />
<text  x="109.59" y="1439.5" ></text>
</g>
<g >
<title>iptable_filter_hook (25,298,742 samples, 0.03%)</title><rect x="1133.9" y="1173" width="0.3" height="15.0" fill="rgb(227,186,22)" rx="2" ry="2" />
<text  x="1136.87" y="1183.5" ></text>
</g>
<g >
<title>generic_perform_write (6,716,474,652 samples, 7.53%)</title><rect x="148.4" y="1317" width="88.8" height="15.0" fill="rgb(237,110,16)" rx="2" ry="2" />
<text  x="151.36" y="1327.5" >generic_pe..</text>
</g>
<g >
<title>_int_free (12,678,351 samples, 0.01%)</title><rect x="82.2" y="1237" width="0.2" height="15.0" fill="rgb(248,136,26)" rx="2" ry="2" />
<text  x="85.22" y="1247.5" ></text>
</g>
<g >
<title>worker (27,633,897 samples, 0.03%)</title><rect x="137.4" y="1621" width="0.3" height="15.0" fill="rgb(245,86,27)" rx="2" ry="2" />
<text  x="140.36" y="1631.5" ></text>
</g>
<g >
<title>ftdc (149,825,134 samples, 0.17%)</title><rect x="14.4" y="1669" width="2.0" height="15.0" fill="rgb(213,11,5)" rx="2" ry="2" />
<text  x="17.38" y="1679.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (721,198,829 samples, 0.81%)</title><rect x="732.0" y="1109" width="9.5" height="15.0" fill="rgb(245,174,1)" rx="2" ry="2" />
<text  x="735.00" y="1119.5" ></text>
</g>
<g >
<title>[systemd-networkd] (7,719,600 samples, 0.01%)</title><rect x="653.9" y="1621" width="0.1" height="15.0" fill="rgb(254,61,5)" rx="2" ry="2" />
<text  x="656.90" y="1631.5" ></text>
</g>
<g >
<title>__libc_write (7,245,251,874 samples, 8.13%)</title><rect x="142.5" y="1493" width="95.9" height="15.0" fill="rgb(211,133,43)" rx="2" ry="2" />
<text  x="145.49" y="1503.5" >__libc_write</text>
</g>
<g >
<title>mpt_interrupt (9,489,870 samples, 0.01%)</title><rect x="509.8" y="1445" width="0.2" height="15.0" fill="rgb(253,111,49)" rx="2" ry="2" />
<text  x="512.84" y="1455.5" ></text>
</g>
<g >
<title>__build_skb (32,669,168 samples, 0.04%)</title><rect x="521.8" y="1397" width="0.4" height="15.0" fill="rgb(214,205,43)" rx="2" ry="2" />
<text  x="524.78" y="1407.5" ></text>
</g>
<g >
<title>__br_forward (225,326,911 samples, 0.25%)</title><rect x="542.0" y="1301" width="3.0" height="15.0" fill="rgb(205,25,52)" rx="2" ry="2" />
<text  x="545.01" y="1311.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (10,625,613 samples, 0.01%)</title><rect x="639.4" y="1157" width="0.1" height="15.0" fill="rgb(216,162,52)" rx="2" ry="2" />
<text  x="642.40" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1317" width="0.8" height="15.0" fill="rgb(220,199,21)" rx="2" ry="2" />
<text  x="101.56" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1637" width="0.9" height="15.0" fill="rgb(221,32,10)" rx="2" ry="2" />
<text  x="134.54" y="1647.5" ></text>
</g>
<g >
<title>do_syscall_64 (28,458,670 samples, 0.03%)</title><rect x="14.5" y="1589" width="0.4" height="15.0" fill="rgb(243,30,32)" rx="2" ry="2" />
<text  x="17.53" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="725" width="3.0" height="15.0" fill="rgb(248,41,0)" rx="2" ry="2" />
<text  x="131.55" y="735.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (17,101,421 samples, 0.02%)</title><rect x="42.3" y="1141" width="0.2" height="15.0" fill="rgb(216,111,37)" rx="2" ry="2" />
<text  x="45.25" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,271,264 samples, 0.55%)</title><rect x="100.1" y="309" width="6.5" height="15.0" fill="rgb(220,98,23)" rx="2" ry="2" />
<text  x="103.13" y="319.5" ></text>
</g>
<g >
<title>update_load_avg (46,132,843 samples, 0.05%)</title><rect x="709.3" y="1365" width="0.6" height="15.0" fill="rgb(213,126,35)" rx="2" ry="2" />
<text  x="712.26" y="1375.5" ></text>
</g>
<g >
<title>dev_queue_xmit (21,957,580 samples, 0.02%)</title><rect x="741.9" y="1029" width="0.3" height="15.0" fill="rgb(244,106,12)" rx="2" ry="2" />
<text  x="744.88" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1189" width="0.4" height="15.0" fill="rgb(252,67,28)" rx="2" ry="2" />
<text  x="56.54" y="1199.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,579,320 samples, 0.01%)</title><rect x="51.3" y="1557" width="0.2" height="15.0" fill="rgb(228,118,36)" rx="2" ry="2" />
<text  x="54.34" y="1567.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Debounce::Debounce (97,196,524 samples, 0.11%)</title><rect x="136.1" y="1605" width="1.3" height="15.0" fill="rgb(248,95,23)" rx="2" ry="2" />
<text  x="139.08" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,466,754 samples, 0.01%)</title><rect x="106.2" y="101" width="0.1" height="15.0" fill="rgb(205,117,18)" rx="2" ry="2" />
<text  x="109.24" y="111.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (8,272,890 samples, 0.01%)</title><rect x="40.8" y="1589" width="0.1" height="15.0" fill="rgb(221,213,39)" rx="2" ry="2" />
<text  x="43.75" y="1599.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_manip_pkt (32,288,932 samples, 0.04%)</title><rect x="1140.9" y="1093" width="0.5" height="15.0" fill="rgb(239,80,38)" rx="2" ry="2" />
<text  x="1143.93" y="1103.5" ></text>
</g>
<g >
<title>handle_edge_irq (26,678,622 samples, 0.03%)</title><rect x="602.5" y="1381" width="0.4" height="15.0" fill="rgb(227,174,44)" rx="2" ry="2" />
<text  x="605.51" y="1391.5" ></text>
</g>
<g >
<title>ret_from_intr (710,742,842 samples, 0.80%)</title><rect x="641.8" y="1477" width="9.4" height="15.0" fill="rgb(218,1,9)" rx="2" ry="2" />
<text  x="644.77" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1109" width="0.4" height="15.0" fill="rgb(216,215,30)" rx="2" ry="2" />
<text  x="56.88" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="773" width="3.6" height="15.0" fill="rgb(247,199,50)" rx="2" ry="2" />
<text  x="109.59" y="783.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (7,579,772 samples, 0.01%)</title><rect x="852.3" y="1413" width="0.1" height="15.0" fill="rgb(214,174,32)" rx="2" ry="2" />
<text  x="855.34" y="1423.5" ></text>
</g>
<g >
<title>kthread (17,205,033 samples, 0.02%)</title><rect x="40.3" y="1637" width="0.2" height="15.0" fill="rgb(205,86,34)" rx="2" ry="2" />
<text  x="43.29" y="1647.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (11,280,856 samples, 0.01%)</title><rect x="78.8" y="1029" width="0.2" height="15.0" fill="rgb(242,211,44)" rx="2" ry="2" />
<text  x="81.84" y="1039.5" ></text>
</g>
<g >
<title>deactivate_task (21,550,791 samples, 0.02%)</title><rect x="136.6" y="1413" width="0.3" height="15.0" fill="rgb(222,48,40)" rx="2" ry="2" />
<text  x="139.62" y="1423.5" ></text>
</g>
<g >
<title>br_handle_frame (16,309,154 samples, 0.02%)</title><rect x="41.3" y="1461" width="0.2" height="15.0" fill="rgb(248,198,42)" rx="2" ry="2" />
<text  x="44.31" y="1471.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (20,683,907 samples, 0.02%)</title><rect x="587.7" y="1509" width="0.3" height="15.0" fill="rgb(211,96,37)" rx="2" ry="2" />
<text  x="590.70" y="1519.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (178,343,173 samples, 0.20%)</title><rect x="781.6" y="1509" width="2.3" height="15.0" fill="rgb(227,199,35)" rx="2" ry="2" />
<text  x="784.56" y="1519.5" ></text>
</g>
<g >
<title>lj_alloc_malloc (65,249,002 samples, 0.07%)</title><rect x="656.3" y="1637" width="0.9" height="15.0" fill="rgb(253,193,18)" rx="2" ry="2" />
<text  x="659.34" y="1647.5" ></text>
</g>
<g >
<title>br_handle_frame (381,292,852 samples, 0.43%)</title><rect x="533.8" y="1365" width="5.1" height="15.0" fill="rgb(208,39,30)" rx="2" ry="2" />
<text  x="536.81" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1573" width="1.4" height="15.0" fill="rgb(226,23,31)" rx="2" ry="2" />
<text  x="100.15" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1397" width="0.9" height="15.0" fill="rgb(239,189,48)" rx="2" ry="2" />
<text  x="134.54" y="1407.5" ></text>
</g>
<g >
<title>lj_vm_exit_interp (8,149,576 samples, 0.01%)</title><rect x="1118.8" y="1541" width="0.1" height="15.0" fill="rgb(223,139,11)" rx="2" ry="2" />
<text  x="1121.79" y="1551.5" ></text>
</g>
<g >
<title>dup_mmap (10,579,320 samples, 0.01%)</title><rect x="51.3" y="1461" width="0.2" height="15.0" fill="rgb(233,112,19)" rx="2" ry="2" />
<text  x="54.34" y="1471.5" ></text>
</g>
<g >
<title>block_write_end (360,162,637 samples, 0.40%)</title><rect x="218.8" y="1285" width="4.8" height="15.0" fill="rgb(253,211,28)" rx="2" ry="2" />
<text  x="221.79" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="357" width="0.4" height="15.0" fill="rgb(227,16,50)" rx="2" ry="2" />
<text  x="56.88" y="367.5" ></text>
</g>
<g >
<title>worker_thread (26,431,791 samples, 0.03%)</title><rect x="47.3" y="1621" width="0.3" height="15.0" fill="rgb(228,202,2)" rx="2" ry="2" />
<text  x="50.28" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (13,403,929 samples, 0.02%)</title><rect x="128.4" y="181" width="0.1" height="15.0" fill="rgb(214,27,40)" rx="2" ry="2" />
<text  x="131.37" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="757" width="0.8" height="15.0" fill="rgb(219,76,22)" rx="2" ry="2" />
<text  x="101.56" y="767.5" ></text>
</g>
<g >
<title>__mpn_divrem (17,816,848 samples, 0.02%)</title><rect x="683.4" y="1509" width="0.2" height="15.0" fill="rgb(250,146,13)" rx="2" ry="2" />
<text  x="686.39" y="1519.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (8,776,384 samples, 0.01%)</title><rect x="563.9" y="1237" width="0.1" height="15.0" fill="rgb(217,222,54)" rx="2" ry="2" />
<text  x="566.89" y="1247.5" ></text>
</g>
<g >
<title>net_rx_action (10,644,494 samples, 0.01%)</title><rect x="40.3" y="1573" width="0.1" height="15.0" fill="rgb(234,178,52)" rx="2" ry="2" />
<text  x="43.29" y="1583.5" ></text>
</g>
<g >
<title>nf_ct_get_tuple (13,129,481 samples, 0.01%)</title><rect x="574.5" y="1349" width="0.2" height="15.0" fill="rgb(243,193,37)" rx="2" ry="2" />
<text  x="577.52" y="1359.5" ></text>
</g>
<g >
<title>siphash_3u32 (9,002,349 samples, 0.01%)</title><rect x="1156.8" y="629" width="0.1" height="15.0" fill="rgb(243,160,20)" rx="2" ry="2" />
<text  x="1159.75" y="639.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (14,840,982 samples, 0.02%)</title><rect x="37.8" y="1429" width="0.2" height="15.0" fill="rgb(245,9,38)" rx="2" ry="2" />
<text  x="40.80" y="1439.5" ></text>
</g>
<g >
<title>nf_conntrack_in (34,788,178 samples, 0.04%)</title><rect x="741.0" y="981" width="0.4" height="15.0" fill="rgb(225,3,31)" rx="2" ry="2" />
<text  x="743.98" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1557" width="0.9" height="15.0" fill="rgb(217,92,13)" rx="2" ry="2" />
<text  x="134.54" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (29,630,351 samples, 0.03%)</title><rect x="138.6" y="1653" width="0.4" height="15.0" fill="rgb(221,208,39)" rx="2" ry="2" />
<text  x="141.57" y="1663.5" ></text>
</g>
<g >
<title>irq_enter (22,795,605 samples, 0.03%)</title><rect x="250.3" y="1509" width="0.3" height="15.0" fill="rgb(251,40,8)" rx="2" ry="2" />
<text  x="253.30" y="1519.5" ></text>
</g>
<g >
<title>_int_free (258,536,038 samples, 0.29%)</title><rect x="101.6" y="133" width="3.4" height="15.0" fill="rgb(240,198,45)" rx="2" ry="2" />
<text  x="104.58" y="143.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (9,668,791 samples, 0.01%)</title><rect x="101.1" y="69" width="0.2" height="15.0" fill="rgb(226,10,6)" rx="2" ry="2" />
<text  x="104.14" y="79.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (71,876,747 samples, 0.08%)</title><rect x="508.5" y="1477" width="1.0" height="15.0" fill="rgb(238,141,24)" rx="2" ry="2" />
<text  x="511.50" y="1487.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_pre_routing (45,414,789 samples, 0.05%)</title><rect x="574.8" y="1381" width="0.6" height="15.0" fill="rgb(234,25,5)" rx="2" ry="2" />
<text  x="577.81" y="1391.5" ></text>
</g>
<g >
<title>enqueue_entity (13,899,538 samples, 0.02%)</title><rect x="556.1" y="837" width="0.2" height="15.0" fill="rgb(221,147,15)" rx="2" ry="2" />
<text  x="559.08" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="885" width="0.3" height="15.0" fill="rgb(236,135,8)" rx="2" ry="2" />
<text  x="102.79" y="895.5" ></text>
</g>
<g >
<title>irq_exit (20,612,688 samples, 0.02%)</title><rect x="985.8" y="1461" width="0.3" height="15.0" fill="rgb(209,132,16)" rx="2" ry="2" />
<text  x="988.81" y="1471.5" ></text>
</g>
<g >
<title>activate_task (31,342,484 samples, 0.04%)</title><rect x="556.0" y="869" width="0.4" height="15.0" fill="rgb(238,187,8)" rx="2" ry="2" />
<text  x="559.02" y="879.5" ></text>
</g>
<g >
<title>execute_command_internal (12,129,602 samples, 0.01%)</title><rect x="10.8" y="1285" width="0.1" height="15.0" fill="rgb(227,21,27)" rx="2" ry="2" />
<text  x="13.79" y="1295.5" ></text>
</g>
<g >
<title>irq_exit (47,651,842 samples, 0.05%)</title><rect x="507.2" y="1493" width="0.6" height="15.0" fill="rgb(208,41,0)" rx="2" ry="2" />
<text  x="510.19" y="1503.5" ></text>
</g>
<g >
<title>mongo::BasicCommandWithReplyBuilderInterface::Invocation::run (44,305,201 samples, 0.05%)</title><rect x="15.2" y="1525" width="0.6" height="15.0" fill="rgb(242,175,30)" rx="2" ry="2" />
<text  x="18.19" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="853" width="1.4" height="15.0" fill="rgb(228,190,39)" rx="2" ry="2" />
<text  x="100.15" y="863.5" ></text>
</g>
<g >
<title>http_parser_execute (387,464,925 samples, 0.43%)</title><rect x="718.3" y="1557" width="5.1" height="15.0" fill="rgb(230,177,15)" rx="2" ry="2" />
<text  x="721.28" y="1567.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (10,699,348 samples, 0.01%)</title><rect x="962.3" y="1493" width="0.1" height="15.0" fill="rgb(241,30,5)" rx="2" ry="2" />
<text  x="965.26" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10,984,906 samples, 0.01%)</title><rect x="72.0" y="661" width="0.2" height="15.0" fill="rgb(228,103,36)" rx="2" ry="2" />
<text  x="75.04" y="671.5" ></text>
</g>
<g >
<title>time (15,958,170 samples, 0.02%)</title><rect x="1188.2" y="1573" width="0.2" height="15.0" fill="rgb(216,95,22)" rx="2" ry="2" />
<text  x="1191.20" y="1583.5" ></text>
</g>
<g >
<title>iptunnel_xmit (150,300,564 samples, 0.17%)</title><rect x="734.0" y="661" width="2.0" height="15.0" fill="rgb(254,210,43)" rx="2" ry="2" />
<text  x="737.03" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (84,531,191 samples, 0.09%)</title><rect x="67.6" y="485" width="1.1" height="15.0" fill="rgb(251,95,43)" rx="2" ry="2" />
<text  x="70.61" y="495.5" ></text>
</g>
<g >
<title>iptable_mangle_hook (44,722,083 samples, 0.05%)</title><rect x="1134.2" y="1173" width="0.6" height="15.0" fill="rgb(223,42,3)" rx="2" ry="2" />
<text  x="1137.20" y="1183.5" ></text>
</g>
<g >
<title>__vsprintf_internal (148,513,200 samples, 0.17%)</title><rect x="681.8" y="1573" width="2.0" height="15.0" fill="rgb(224,98,20)" rx="2" ry="2" />
<text  x="684.82" y="1583.5" ></text>
</g>
<g >
<title>udp_tunnel_xmit_skb (15,586,378 samples, 0.02%)</title><rect x="41.8" y="1157" width="0.2" height="15.0" fill="rgb(218,28,26)" rx="2" ry="2" />
<text  x="44.81" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="389" width="3.0" height="15.0" fill="rgb(239,60,12)" rx="2" ry="2" />
<text  x="131.55" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter (25,226,354,225 samples, 28.29%)</title><rect x="245.3" y="1573" width="333.8" height="15.0" fill="rgb(229,151,38)" rx="2" ry="2" />
<text  x="248.31" y="1583.5" >cpuidle_enter</text>
</g>
<g >
<title>__alloc_pages_nodemask (11,926,026 samples, 0.01%)</title><rect x="156.1" y="1125" width="0.2" height="15.0" fill="rgb(214,127,23)" rx="2" ry="2" />
<text  x="159.12" y="1135.5" ></text>
</g>
<g >
<title>nf_hook_slow (58,552,339 samples, 0.07%)</title><rect x="42.1" y="1317" width="0.8" height="15.0" fill="rgb(214,43,13)" rx="2" ry="2" />
<text  x="45.11" y="1327.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (12,243,327 samples, 0.01%)</title><rect x="69.5" y="517" width="0.2" height="15.0" fill="rgb(254,178,7)" rx="2" ry="2" />
<text  x="72.53" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,596,175 samples, 0.02%)</title><rect x="106.4" y="165" width="0.2" height="15.0" fill="rgb(205,51,32)" rx="2" ry="2" />
<text  x="109.40" y="175.5" ></text>
</g>
<g >
<title>br_forward_finish (146,720,314 samples, 0.16%)</title><rect x="535.9" y="1189" width="1.9" height="15.0" fill="rgb(250,90,47)" rx="2" ry="2" />
<text  x="538.86" y="1199.5" ></text>
</g>
<g >
<title>sock_poll (8,493,932 samples, 0.01%)</title><rect x="705.1" y="1445" width="0.1" height="15.0" fill="rgb(241,169,9)" rx="2" ry="2" />
<text  x="708.09" y="1455.5" ></text>
</g>
<g >
<title>ksys_write (7,654,256 samples, 0.01%)</title><rect x="242.0" y="1477" width="0.1" height="15.0" fill="rgb(208,28,46)" rx="2" ry="2" />
<text  x="245.03" y="1487.5" ></text>
</g>
<g >
<title>default_send_IPI_mask_sequence_phys (95,277,652 samples, 0.11%)</title><rect x="639.6" y="1237" width="1.3" height="15.0" fill="rgb(206,82,36)" rx="2" ry="2" />
<text  x="642.61" y="1247.5" ></text>
</g>
<g >
<title>irq_work_queue (8,699,152 samples, 0.01%)</title><rect x="254.3" y="1429" width="0.1" height="15.0" fill="rgb(237,156,15)" rx="2" ry="2" />
<text  x="257.27" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="613" width="0.9" height="15.0" fill="rgb(236,87,15)" rx="2" ry="2" />
<text  x="134.54" y="623.5" ></text>
</g>
<g >
<title>memset (146,972,021 samples, 0.16%)</title><rect x="28.3" y="1413" width="2.0" height="15.0" fill="rgb(238,92,44)" rx="2" ry="2" />
<text  x="31.34" y="1423.5" ></text>
</g>
<g >
<title>__update_load_avg_se (9,506,459 samples, 0.01%)</title><rect x="709.5" y="1349" width="0.1" height="15.0" fill="rgb(254,119,28)" rx="2" ry="2" />
<text  x="712.51" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,157,295 samples, 0.01%)</title><rect x="106.4" y="133" width="0.1" height="15.0" fill="rgb(217,222,44)" rx="2" ry="2" />
<text  x="109.40" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1173" width="0.3" height="15.0" fill="rgb(254,165,5)" rx="2" ry="2" />
<text  x="102.79" y="1183.5" ></text>
</g>
<g >
<title>__queue_work (13,955,946 samples, 0.02%)</title><rect x="253.9" y="1333" width="0.2" height="15.0" fill="rgb(207,149,31)" rx="2" ry="2" />
<text  x="256.91" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1285" width="0.8" height="15.0" fill="rgb(226,99,15)" rx="2" ry="2" />
<text  x="101.56" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,318,551 samples, 0.04%)</title><rect x="53.9" y="789" width="0.4" height="15.0" fill="rgb(233,96,49)" rx="2" ry="2" />
<text  x="56.88" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="725" width="18.3" height="15.0" fill="rgb(208,53,48)" rx="2" ry="2" />
<text  x="113.16" y="735.5" ></text>
</g>
<g >
<title>br_fdb_update (12,135,073 samples, 0.01%)</title><rect x="535.1" y="1285" width="0.2" height="15.0" fill="rgb(229,84,26)" rx="2" ry="2" />
<text  x="538.14" y="1295.5" ></text>
</g>
<g >
<title>__ip_finish_output (63,129,651 samples, 0.07%)</title><rect x="734.9" y="597" width="0.9" height="15.0" fill="rgb(242,155,19)" rx="2" ry="2" />
<text  x="737.93" y="607.5" ></text>
</g>
<g >
<title>__fdget_pos (16,267,658 samples, 0.02%)</title><rect x="724.3" y="1445" width="0.2" height="15.0" fill="rgb(207,50,54)" rx="2" ry="2" />
<text  x="727.30" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,473,384,221 samples, 1.65%)</title><rect x="59.8" y="1093" width="19.5" height="15.0" fill="rgb(220,175,22)" rx="2" ry="2" />
<text  x="62.80" y="1103.5" ></text>
</g>
<g >
<title>__find_specmb (33,216,787 samples, 0.04%)</title><rect x="1114.4" y="1445" width="0.4" height="15.0" fill="rgb(249,21,52)" rx="2" ry="2" />
<text  x="1117.36" y="1455.5" ></text>
</g>
<g >
<title>br_nf_post_routing (30,442,225 samples, 0.03%)</title><rect x="251.2" y="1189" width="0.4" height="15.0" fill="rgb(245,91,44)" rx="2" ry="2" />
<text  x="254.20" y="1199.5" ></text>
</g>
<g >
<title>nf_hook_slow (143,172,654 samples, 0.16%)</title><rect x="559.1" y="1365" width="1.9" height="15.0" fill="rgb(212,131,45)" rx="2" ry="2" />
<text  x="562.14" y="1375.5" ></text>
</g>
<g >
<title>__ip_finish_output (2,960,957,468 samples, 3.32%)</title><rect x="1142.1" y="1173" width="39.2" height="15.0" fill="rgb(232,95,37)" rx="2" ry="2" />
<text  x="1145.13" y="1183.5" >__i..</text>
</g>
<g >
<title>ipt_do_table (11,867,121 samples, 0.01%)</title><rect x="530.3" y="1285" width="0.2" height="15.0" fill="rgb(254,218,2)" rx="2" ry="2" />
<text  x="533.30" y="1295.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (1,150,046,466 samples, 1.29%)</title><rect x="728.3" y="1333" width="15.3" height="15.0" fill="rgb(239,75,12)" rx="2" ry="2" />
<text  x="731.35" y="1343.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (10,678,980 samples, 0.01%)</title><rect x="595.3" y="1573" width="0.1" height="15.0" fill="rgb(251,148,26)" rx="2" ry="2" />
<text  x="598.29" y="1583.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (87,166,758 samples, 0.10%)</title><rect x="751.2" y="1541" width="1.2" height="15.0" fill="rgb(242,142,21)" rx="2" ry="2" />
<text  x="754.23" y="1551.5" ></text>
</g>
<g >
<title>lj_str_new (10,480,568 samples, 0.01%)</title><rect x="658.5" y="1637" width="0.2" height="15.0" fill="rgb(228,12,52)" rx="2" ry="2" />
<text  x="661.54" y="1647.5" ></text>
</g>
<g >
<title>irq_work_interrupt (18,379,605 samples, 0.02%)</title><rect x="253.9" y="1429" width="0.2" height="15.0" fill="rgb(208,228,23)" rx="2" ry="2" />
<text  x="256.87" y="1439.5" ></text>
</g>
<g >
<title>nf_ct_get_tuple (9,844,537 samples, 0.01%)</title><rect x="1152.5" y="549" width="0.1" height="15.0" fill="rgb(224,78,11)" rx="2" ry="2" />
<text  x="1155.51" y="559.5" ></text>
</g>
<g >
<title>gro_cell_poll (476,476,514 samples, 0.53%)</title><rect x="533.2" y="1461" width="6.3" height="15.0" fill="rgb(245,178,13)" rx="2" ry="2" />
<text  x="536.21" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,155,989 samples, 0.02%)</title><rect x="126.7" y="101" width="0.3" height="15.0" fill="rgb(232,113,46)" rx="2" ry="2" />
<text  x="129.75" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="405" width="0.4" height="15.0" fill="rgb(209,70,9)" rx="2" ry="2" />
<text  x="56.54" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (83,445,051 samples, 0.09%)</title><rect x="81.7" y="1253" width="1.1" height="15.0" fill="rgb(244,164,34)" rx="2" ry="2" />
<text  x="84.69" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="709" width="3.6" height="15.0" fill="rgb(238,102,20)" rx="2" ry="2" />
<text  x="109.59" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (16,602,697 samples, 0.02%)</title><rect x="69.7" y="533" width="0.2" height="15.0" fill="rgb(229,79,3)" rx="2" ry="2" />
<text  x="72.70" y="543.5" ></text>
</g>
<g >
<title>ipt_do_table (19,397,519 samples, 0.02%)</title><rect x="740.6" y="981" width="0.3" height="15.0" fill="rgb(244,226,1)" rx="2" ry="2" />
<text  x="743.64" y="991.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (46,548,327 samples, 0.05%)</title><rect x="507.2" y="1477" width="0.6" height="15.0" fill="rgb(229,71,18)" rx="2" ry="2" />
<text  x="510.19" y="1487.5" ></text>
</g>
<g >
<title>xas_start (17,239,766 samples, 0.02%)</title><rect x="220.9" y="1205" width="0.3" height="15.0" fill="rgb(215,43,29)" rx="2" ry="2" />
<text  x="223.92" y="1215.5" ></text>
</g>
<g >
<title>__errno_location (8,450,382 samples, 0.01%)</title><rect x="690.8" y="1605" width="0.1" height="15.0" fill="rgb(225,16,47)" rx="2" ry="2" />
<text  x="693.78" y="1615.5" ></text>
</g>
<g >
<title>lj_cf_string_format (671,194,193 samples, 0.75%)</title><rect x="676.9" y="1637" width="8.9" height="15.0" fill="rgb(205,9,9)" rx="2" ry="2" />
<text  x="679.95" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="373" width="0.3" height="15.0" fill="rgb(239,137,37)" rx="2" ry="2" />
<text  x="102.79" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1157" width="3.0" height="15.0" fill="rgb(211,211,45)" rx="2" ry="2" />
<text  x="131.55" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1237" width="0.4" height="15.0" fill="rgb(210,38,43)" rx="2" ry="2" />
<text  x="56.88" y="1247.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/libnetwork/networkdb.(*NetworkDB).clusterInit.func3 (19,336,858 samples, 0.02%)</title><rect x="11.5" y="1637" width="0.3" height="15.0" fill="rgb(228,181,51)" rx="2" ry="2" />
<text  x="14.52" y="1647.5" ></text>
</g>
<g >
<title>ip_vs_in.part.0 (180,295,706 samples, 0.20%)</title><rect x="737.1" y="933" width="2.4" height="15.0" fill="rgb(238,58,5)" rx="2" ry="2" />
<text  x="740.14" y="943.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_pwait (10,230,092 samples, 0.01%)</title><rect x="12.7" y="1541" width="0.2" height="15.0" fill="rgb(236,35,28)" rx="2" ry="2" />
<text  x="15.72" y="1551.5" ></text>
</g>
<g >
<title>eth_type_trans (11,444,975 samples, 0.01%)</title><rect x="1178.0" y="933" width="0.2" height="15.0" fill="rgb(211,107,16)" rx="2" ry="2" />
<text  x="1181.03" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,253,343,562 samples, 1.41%)</title><rect x="60.3" y="949" width="16.6" height="15.0" fill="rgb(242,18,50)" rx="2" ry="2" />
<text  x="63.33" y="959.5" ></text>
</g>
<g >
<title>ret_from_fork (16,584,559 samples, 0.02%)</title><rect x="241.2" y="1653" width="0.3" height="15.0" fill="rgb(247,41,19)" rx="2" ry="2" />
<text  x="244.23" y="1663.5" ></text>
</g>
<g >
<title>try_to_wake_up (7,783,721 samples, 0.01%)</title><rect x="642.3" y="1285" width="0.1" height="15.0" fill="rgb(244,226,2)" rx="2" ry="2" />
<text  x="645.34" y="1295.5" ></text>
</g>
<g >
<title>operator new (17,386,290 samples, 0.02%)</title><rect x="73.0" y="725" width="0.2" height="15.0" fill="rgb(238,114,6)" rx="2" ry="2" />
<text  x="75.99" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="469" width="0.9" height="15.0" fill="rgb(223,36,23)" rx="2" ry="2" />
<text  x="134.54" y="479.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.0 (8,179,111 samples, 0.01%)</title><rect x="138.4" y="1605" width="0.1" height="15.0" fill="rgb(234,110,13)" rx="2" ry="2" />
<text  x="141.42" y="1615.5" ></text>
</g>
<g >
<title>dl_main (8,848,269 samples, 0.01%)</title><rect x="10.3" y="1589" width="0.1" height="15.0" fill="rgb(227,180,4)" rx="2" ry="2" />
<text  x="13.28" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_lock (18,050,201 samples, 0.02%)</title><rect x="170.0" y="1157" width="0.3" height="15.0" fill="rgb(223,226,26)" rx="2" ry="2" />
<text  x="173.03" y="1167.5" ></text>
</g>
<g >
<title>br_nf_pre_routing (1,562,292,218 samples, 1.75%)</title><rect x="540.8" y="1381" width="20.7" height="15.0" fill="rgb(232,166,52)" rx="2" ry="2" />
<text  x="543.82" y="1391.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (12,140,662 samples, 0.01%)</title><rect x="80.0" y="1093" width="0.2" height="15.0" fill="rgb(212,132,11)" rx="2" ry="2" />
<text  x="83.00" y="1103.5" ></text>
</g>
<g >
<title>xas_alloc (9,786,254 samples, 0.01%)</title><rect x="210.1" y="1189" width="0.1" height="15.0" fill="rgb(236,33,46)" rx="2" ry="2" />
<text  x="213.09" y="1199.5" ></text>
</g>
<g >
<title>ip_rcv_core.isra.0 (11,278,044 samples, 0.01%)</title><rect x="561.9" y="1397" width="0.1" height="15.0" fill="rgb(238,148,25)" rx="2" ry="2" />
<text  x="564.87" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1269" width="0.4" height="15.0" fill="rgb(240,225,27)" rx="2" ry="2" />
<text  x="56.88" y="1279.5" ></text>
</g>
<g >
<title>ip_local_deliver (161,995,735 samples, 0.18%)</title><rect x="567.9" y="1381" width="2.2" height="15.0" fill="rgb(223,83,27)" rx="2" ry="2" />
<text  x="570.94" y="1391.5" ></text>
</g>
<g >
<title>__inet_dev_addr_type.isra.0 (64,099,409 samples, 0.07%)</title><rect x="1138.1" y="1125" width="0.9" height="15.0" fill="rgb(228,86,39)" rx="2" ry="2" />
<text  x="1141.12" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="421" width="0.8" height="15.0" fill="rgb(254,176,46)" rx="2" ry="2" />
<text  x="101.56" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="485" width="3.6" height="15.0" fill="rgb(247,46,43)" rx="2" ry="2" />
<text  x="109.59" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="261" width="1.4" height="15.0" fill="rgb(220,181,12)" rx="2" ry="2" />
<text  x="100.15" y="271.5" ></text>
</g>
<g >
<title>tick_nohz_irq_exit (15,846,323 samples, 0.02%)</title><rect x="576.1" y="1493" width="0.2" height="15.0" fill="rgb(250,94,38)" rx="2" ry="2" />
<text  x="579.06" y="1503.5" ></text>
</g>
<g >
<title>pwcache_get_user (41,660,760 samples, 0.05%)</title><rect x="240.5" y="1589" width="0.6" height="15.0" fill="rgb(242,82,38)" rx="2" ry="2" />
<text  x="243.54" y="1599.5" ></text>
</g>
<g >
<title>operator new@plt (11,941,993 samples, 0.01%)</title><rect x="126.4" y="101" width="0.2" height="15.0" fill="rgb(232,136,46)" rx="2" ry="2" />
<text  x="129.44" y="111.5" ></text>
</g>
<g >
<title>ext4_get_group_desc (13,643,068 samples, 0.02%)</title><rect x="176.3" y="1093" width="0.2" height="15.0" fill="rgb(253,140,7)" rx="2" ry="2" />
<text  x="179.34" y="1103.5" ></text>
</g>
<g >
<title>ip_vs_conn_in_get_proto (20,224,569 samples, 0.02%)</title><rect x="1161.3" y="901" width="0.3" height="15.0" fill="rgb(233,60,23)" rx="2" ry="2" />
<text  x="1164.32" y="911.5" ></text>
</g>
<g >
<title>ipt_do_table (7,760,187 samples, 0.01%)</title><rect x="1165.7" y="853" width="0.1" height="15.0" fill="rgb(253,75,9)" rx="2" ry="2" />
<text  x="1168.66" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,549,793 samples, 0.12%)</title><rect x="97.2" y="229" width="1.4" height="15.0" fill="rgb(254,124,26)" rx="2" ry="2" />
<text  x="100.15" y="239.5" ></text>
</g>
<g >
<title>lj_tab_setstr (17,016,621 samples, 0.02%)</title><rect x="1099.5" y="1525" width="0.2" height="15.0" fill="rgb(227,163,5)" rx="2" ry="2" />
<text  x="1102.47" y="1535.5" ></text>
</g>
<g >
<title>jbd2__journal_start (13,140,480 samples, 0.01%)</title><rect x="171.2" y="1125" width="0.2" height="15.0" fill="rgb(248,87,42)" rx="2" ry="2" />
<text  x="174.25" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1269" width="18.3" height="15.0" fill="rgb(227,159,5)" rx="2" ry="2" />
<text  x="113.16" y="1279.5" ></text>
</g>
<g >
<title>alloc_pages_current (379,469,688 samples, 0.43%)</title><rect x="22.9" y="1317" width="5.0" height="15.0" fill="rgb(237,95,48)" rx="2" ry="2" />
<text  x="25.88" y="1327.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (38,959,303 samples, 0.04%)</title><rect x="590.3" y="1557" width="0.5" height="15.0" fill="rgb(210,115,32)" rx="2" ry="2" />
<text  x="593.25" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="373" width="3.0" height="15.0" fill="rgb(245,89,51)" rx="2" ry="2" />
<text  x="131.55" y="383.5" ></text>
</g>
<g >
<title>psi_task_change (13,784,266 samples, 0.02%)</title><rect x="146.1" y="1189" width="0.2" height="15.0" fill="rgb(215,6,27)" rx="2" ry="2" />
<text  x="149.09" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1269" width="1.4" height="15.0" fill="rgb(227,121,6)" rx="2" ry="2" />
<text  x="100.15" y="1279.5" ></text>
</g>
<g >
<title>dequeue_task_fair (12,387,056 samples, 0.01%)</title><rect x="136.6" y="1397" width="0.2" height="15.0" fill="rgb(245,105,28)" rx="2" ry="2" />
<text  x="139.64" y="1407.5" ></text>
</g>
<g >
<title>br_nf_forward_ip (254,314,058 samples, 0.29%)</title><rect x="733.1" y="885" width="3.4" height="15.0" fill="rgb(242,24,48)" rx="2" ry="2" />
<text  x="736.12" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="805" width="0.4" height="15.0" fill="rgb(250,107,14)" rx="2" ry="2" />
<text  x="56.88" y="815.5" ></text>
</g>
<g >
<title>ret_from_intr (12,401,990 samples, 0.01%)</title><rect x="1090.4" y="1525" width="0.2" height="15.0" fill="rgb(236,196,38)" rx="2" ry="2" />
<text  x="1093.40" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="709" width="3.0" height="15.0" fill="rgb(237,87,21)" rx="2" ry="2" />
<text  x="131.55" y="719.5" ></text>
</g>
<g >
<title>__br_forward (14,883,264 samples, 0.02%)</title><rect x="742.6" y="1061" width="0.2" height="15.0" fill="rgb(231,211,32)" rx="2" ry="2" />
<text  x="745.57" y="1071.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (15,724,981 samples, 0.02%)</title><rect x="19.9" y="1461" width="0.2" height="15.0" fill="rgb(238,63,41)" rx="2" ry="2" />
<text  x="22.88" y="1471.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (11,862,911 samples, 0.01%)</title><rect x="226.4" y="1221" width="0.2" height="15.0" fill="rgb(228,117,7)" rx="2" ry="2" />
<text  x="229.41" y="1231.5" ></text>
</g>
<g >
<title>l4proto_manip_pkt (16,155,429 samples, 0.02%)</title><rect x="1141.0" y="1077" width="0.3" height="15.0" fill="rgb(227,15,18)" rx="2" ry="2" />
<text  x="1144.04" y="1087.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (16,725,906 samples, 0.02%)</title><rect x="1184.9" y="1269" width="0.2" height="15.0" fill="rgb(209,16,28)" rx="2" ry="2" />
<text  x="1187.87" y="1279.5" ></text>
</g>
<g >
<title>find_get_entry (73,673,385 samples, 0.08%)</title><rect x="213.3" y="1253" width="1.0" height="15.0" fill="rgb(251,162,13)" rx="2" ry="2" />
<text  x="216.28" y="1263.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (99,076,772 samples, 0.11%)</title><rect x="699.3" y="1525" width="1.3" height="15.0" fill="rgb(223,109,27)" rx="2" ry="2" />
<text  x="702.33" y="1535.5" ></text>
</g>
<g >
<title>___slab_alloc (40,412,249 samples, 0.05%)</title><rect x="30.9" y="1397" width="0.5" height="15.0" fill="rgb(229,215,8)" rx="2" ry="2" />
<text  x="33.88" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (636,259,881 samples, 0.71%)</title><rect x="61.6" y="581" width="8.4" height="15.0" fill="rgb(234,203,22)" rx="2" ry="2" />
<text  x="64.59" y="591.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (16,912,476 samples, 0.02%)</title><rect x="40.5" y="1621" width="0.2" height="15.0" fill="rgb(243,15,18)" rx="2" ry="2" />
<text  x="43.52" y="1631.5" ></text>
</g>
<g >
<title>fib_table_lookup (16,406,633 samples, 0.02%)</title><rect x="731.1" y="1109" width="0.2" height="15.0" fill="rgb(214,152,5)" rx="2" ry="2" />
<text  x="734.09" y="1119.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (8,920,253 samples, 0.01%)</title><rect x="738.1" y="805" width="0.2" height="15.0" fill="rgb(254,190,30)" rx="2" ry="2" />
<text  x="741.13" y="815.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted (27,249,616 samples, 0.03%)</title><rect x="180.5" y="1125" width="0.4" height="15.0" fill="rgb(224,226,48)" rx="2" ry="2" />
<text  x="183.53" y="1135.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (467,074,744 samples, 0.52%)</title><rect x="170.9" y="1157" width="6.1" height="15.0" fill="rgb(228,229,4)" rx="2" ry="2" />
<text  x="173.86" y="1167.5" ></text>
</g>
<g >
<title>__libc_fork (12,654,766 samples, 0.01%)</title><rect x="51.3" y="1589" width="0.2" height="15.0" fill="rgb(249,52,48)" rx="2" ry="2" />
<text  x="54.32" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1093" width="0.3" height="15.0" fill="rgb(213,93,53)" rx="2" ry="2" />
<text  x="102.79" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="421" width="3.6" height="15.0" fill="rgb(231,9,36)" rx="2" ry="2" />
<text  x="109.59" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1605" width="0.9" height="15.0" fill="rgb(222,140,42)" rx="2" ry="2" />
<text  x="134.54" y="1615.5" ></text>
</g>
<g >
<title>__br_forward (887,025,084 samples, 0.99%)</title><rect x="1146.6" y="901" width="11.8" height="15.0" fill="rgb(220,112,10)" rx="2" ry="2" />
<text  x="1149.63" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="997" width="6.5" height="15.0" fill="rgb(240,212,43)" rx="2" ry="2" />
<text  x="103.13" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="517" width="0.4" height="15.0" fill="rgb(245,201,27)" rx="2" ry="2" />
<text  x="56.88" y="527.5" ></text>
</g>
<g >
<title>uv__run_timers (12,424,506 samples, 0.01%)</title><rect x="138.0" y="1557" width="0.2" height="15.0" fill="rgb(231,95,36)" rx="2" ry="2" />
<text  x="140.99" y="1567.5" ></text>
</g>
<g >
<title>ip_vs_nat_xmit (8,659,685 samples, 0.01%)</title><rect x="43.5" y="1397" width="0.1" height="15.0" fill="rgb(227,71,0)" rx="2" ry="2" />
<text  x="46.48" y="1407.5" ></text>
</g>
<g >
<title>clockevents_program_event (39,343,801 samples, 0.04%)</title><rect x="505.1" y="1477" width="0.5" height="15.0" fill="rgb(240,48,5)" rx="2" ry="2" />
<text  x="508.08" y="1487.5" ></text>
</g>
<g >
<title>execute_command_internal (12,397,920 samples, 0.01%)</title><rect x="10.8" y="1381" width="0.2" height="15.0" fill="rgb(224,26,49)" rx="2" ry="2" />
<text  x="13.79" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1493" width="0.3" height="15.0" fill="rgb(238,118,11)" rx="2" ry="2" />
<text  x="102.79" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1077" width="0.4" height="15.0" fill="rgb(248,196,35)" rx="2" ry="2" />
<text  x="56.54" y="1087.5" ></text>
</g>
<g >
<title>common_perm_cond (9,791,717 samples, 0.01%)</title><rect x="90.8" y="1445" width="0.1" height="15.0" fill="rgb(206,192,47)" rx="2" ry="2" />
<text  x="93.77" y="1455.5" ></text>
</g>
<g >
<title>irq_exit (16,230,415 samples, 0.02%)</title><rect x="1028.1" y="1477" width="0.2" height="15.0" fill="rgb(219,150,48)" rx="2" ry="2" />
<text  x="1031.11" y="1487.5" ></text>
</g>
<g >
<title>ext4_mb_use_inode_pa (26,898,384 samples, 0.03%)</title><rect x="185.4" y="1157" width="0.4" height="15.0" fill="rgb(240,216,16)" rx="2" ry="2" />
<text  x="188.41" y="1167.5" ></text>
</g>
<g >
<title>__slab_alloc (17,685,985 samples, 0.02%)</title><rect x="33.0" y="1461" width="0.2" height="15.0" fill="rgb(205,173,33)" rx="2" ry="2" />
<text  x="35.98" y="1471.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_in (17,215,652 samples, 0.02%)</title><rect x="557.7" y="1141" width="0.2" height="15.0" fill="rgb(230,207,15)" rx="2" ry="2" />
<text  x="560.66" y="1151.5" ></text>
</g>
<g >
<title>finish_task_switch (11,014,011 samples, 0.01%)</title><rect x="653.2" y="1493" width="0.1" height="15.0" fill="rgb(223,154,7)" rx="2" ry="2" />
<text  x="656.18" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="533" width="1.4" height="15.0" fill="rgb(224,218,16)" rx="2" ry="2" />
<text  x="100.15" y="543.5" ></text>
</g>
<g >
<title>nf_hook_slow (7,747,704 samples, 0.01%)</title><rect x="537.9" y="1221" width="0.1" height="15.0" fill="rgb(207,134,50)" rx="2" ry="2" />
<text  x="540.94" y="1231.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (20,044,317 samples, 0.02%)</title><rect x="737.9" y="821" width="0.2" height="15.0" fill="rgb(232,172,39)" rx="2" ry="2" />
<text  x="740.86" y="831.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (16,237,171 samples, 0.02%)</title><rect x="42.3" y="1125" width="0.2" height="15.0" fill="rgb(233,29,14)" rx="2" ry="2" />
<text  x="45.26" y="1135.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (11,345,134 samples, 0.01%)</title><rect x="171.4" y="1141" width="0.2" height="15.0" fill="rgb(223,227,30)" rx="2" ry="2" />
<text  x="174.42" y="1151.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (403,437,055 samples, 0.45%)</title><rect x="533.6" y="1381" width="5.3" height="15.0" fill="rgb(243,40,6)" rx="2" ry="2" />
<text  x="536.58" y="1391.5" ></text>
</g>
<g >
<title>ip_local_out (118,880,972 samples, 0.13%)</title><rect x="543.0" y="1029" width="1.6" height="15.0" fill="rgb(236,218,43)" rx="2" ry="2" />
<text  x="545.98" y="1039.5" ></text>
</g>
<g >
<title>vxlan_snoop (8,103,170 samples, 0.01%)</title><rect x="529.3" y="1189" width="0.1" height="15.0" fill="rgb(242,76,34)" rx="2" ry="2" />
<text  x="532.34" y="1199.5" ></text>
</g>
<g >
<title>tcp_send_mss (32,155,812 samples, 0.04%)</title><rect x="1185.3" y="1317" width="0.5" height="15.0" fill="rgb(213,15,47)" rx="2" ry="2" />
<text  x="1188.33" y="1327.5" ></text>
</g>
<g >
<title>_raw_spin_lock (936,311,123 samples, 1.05%)</title><rect x="490.7" y="1493" width="12.4" height="15.0" fill="rgb(250,8,34)" rx="2" ry="2" />
<text  x="493.71" y="1503.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted (8,753,517 samples, 0.01%)</title><rect x="176.6" y="1077" width="0.2" height="15.0" fill="rgb(205,99,11)" rx="2" ry="2" />
<text  x="179.64" y="1087.5" ></text>
</g>
<g >
<title>fib_table_lookup (15,739,317 samples, 0.02%)</title><rect x="1166.4" y="805" width="0.3" height="15.0" fill="rgb(207,95,30)" rx="2" ry="2" />
<text  x="1169.44" y="815.5" ></text>
</g>
<g >
<title>ip_output (3,091,805,929 samples, 3.47%)</title><rect x="1141.7" y="1205" width="40.9" height="15.0" fill="rgb(244,210,4)" rx="2" ry="2" />
<text  x="1144.66" y="1215.5" >ip_..</text>
</g>
<g >
<title>__ip_finish_output (254,786,500 samples, 0.29%)</title><rect x="1153.0" y="581" width="3.3" height="15.0" fill="rgb(234,99,24)" rx="2" ry="2" />
<text  x="1155.96" y="591.5" ></text>
</g>
<g >
<title>ip_vs_local_reply4 (7,811,085 samples, 0.01%)</title><rect x="1133.5" y="1173" width="0.1" height="15.0" fill="rgb(206,150,52)" rx="2" ry="2" />
<text  x="1136.50" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="645" width="0.9" height="15.0" fill="rgb(235,43,42)" rx="2" ry="2" />
<text  x="134.54" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (100,798,867 samples, 0.11%)</title><rect x="93.8" y="1557" width="1.3" height="15.0" fill="rgb(231,167,50)" rx="2" ry="2" />
<text  x="96.75" y="1567.5" ></text>
</g>
<g >
<title>__libc_read (144,513,170 samples, 0.16%)</title><rect x="95.2" y="1621" width="1.9" height="15.0" fill="rgb(229,95,29)" rx="2" ry="2" />
<text  x="98.15" y="1631.5" ></text>
</g>
<g >
<title>__find_get_block (48,893,458 samples, 0.05%)</title><rect x="175.7" y="1077" width="0.6" height="15.0" fill="rgb(224,52,36)" rx="2" ry="2" />
<text  x="178.65" y="1087.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (7,938,936 samples, 0.01%)</title><rect x="1184.8" y="1269" width="0.1" height="15.0" fill="rgb(218,185,29)" rx="2" ry="2" />
<text  x="1187.77" y="1279.5" ></text>
</g>
<g >
<title>smp_irq_work_interrupt (18,116,571 samples, 0.02%)</title><rect x="253.9" y="1413" width="0.2" height="15.0" fill="rgb(224,12,33)" rx="2" ry="2" />
<text  x="256.87" y="1423.5" ></text>
</g>
<g >
<title>br_fdb_find_rcu (12,565,080 samples, 0.01%)</title><rect x="1177.1" y="1077" width="0.2" height="15.0" fill="rgb(214,223,39)" rx="2" ry="2" />
<text  x="1180.13" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,271,264 samples, 0.55%)</title><rect x="100.1" y="501" width="6.5" height="15.0" fill="rgb(208,166,41)" rx="2" ry="2" />
<text  x="103.13" y="511.5" ></text>
</g>
<g >
<title>scsi_queue_rq (63,145,461 samples, 0.07%)</title><rect x="35.9" y="1285" width="0.9" height="15.0" fill="rgb(212,183,6)" rx="2" ry="2" />
<text  x="38.93" y="1295.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (225,819,543 samples, 0.25%)</title><rect x="150.6" y="1285" width="3.0" height="15.0" fill="rgb(232,86,24)" rx="2" ry="2" />
<text  x="153.61" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="613" width="3.6" height="15.0" fill="rgb(216,121,3)" rx="2" ry="2" />
<text  x="109.59" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,448,485 samples, 0.55%)</title><rect x="100.1" y="885" width="6.5" height="15.0" fill="rgb(209,126,23)" rx="2" ry="2" />
<text  x="103.13" y="895.5" ></text>
</g>
<g >
<title>ext4_claim_free_clusters (10,764,829 samples, 0.01%)</title><rect x="169.1" y="1189" width="0.1" height="15.0" fill="rgb(206,228,51)" rx="2" ry="2" />
<text  x="172.06" y="1199.5" ></text>
</g>
<g >
<title>node::Environment::RunAndClearNativeImmediates (8,478,909 samples, 0.01%)</title><rect x="137.8" y="1525" width="0.2" height="15.0" fill="rgb(218,203,3)" rx="2" ry="2" />
<text  x="140.84" y="1535.5" ></text>
</g>
<g >
<title>execute_shell_function (11,056,426 samples, 0.01%)</title><rect x="10.6" y="1381" width="0.2" height="15.0" fill="rgb(251,141,41)" rx="2" ry="2" />
<text  x="13.64" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="437" width="3.6" height="15.0" fill="rgb(242,22,8)" rx="2" ry="2" />
<text  x="109.59" y="447.5" ></text>
</g>
<g >
<title>leave_mm (18,475,198 samples, 0.02%)</title><rect x="506.8" y="1541" width="0.3" height="15.0" fill="rgb(219,180,50)" rx="2" ry="2" />
<text  x="509.83" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="837" width="0.9" height="15.0" fill="rgb(238,151,40)" rx="2" ry="2" />
<text  x="134.54" y="847.5" ></text>
</g>
<g >
<title>release_pages (15,531,982 samples, 0.02%)</title><rect x="211.9" y="1189" width="0.2" height="15.0" fill="rgb(250,227,5)" rx="2" ry="2" />
<text  x="214.91" y="1199.5" ></text>
</g>
<g >
<title>arch_irq_work_raise (21,757,655 samples, 0.02%)</title><rect x="254.7" y="1381" width="0.2" height="15.0" fill="rgb(221,201,15)" rx="2" ry="2" />
<text  x="257.66" y="1391.5" ></text>
</g>
<g >
<title>inet_gro_receive (132,361,644 samples, 0.15%)</title><rect x="522.9" y="1381" width="1.8" height="15.0" fill="rgb(231,33,32)" rx="2" ry="2" />
<text  x="525.93" y="1391.5" ></text>
</g>
<g >
<title>enqueue_task_fair (33,145,648 samples, 0.04%)</title><rect x="554.5" y="837" width="0.5" height="15.0" fill="rgb(207,147,46)" rx="2" ry="2" />
<text  x="557.55" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="933" width="0.8" height="15.0" fill="rgb(234,37,54)" rx="2" ry="2" />
<text  x="101.56" y="943.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (473,620,996 samples, 0.53%)</title><rect x="22.0" y="1413" width="6.3" height="15.0" fill="rgb(229,79,46)" rx="2" ry="2" />
<text  x="25.05" y="1423.5" ></text>
</g>
<g >
<title>_raw_spin_lock (11,207,753 samples, 0.01%)</title><rect x="153.6" y="1285" width="0.2" height="15.0" fill="rgb(215,114,1)" rx="2" ry="2" />
<text  x="156.62" y="1295.5" ></text>
</g>
<g >
<title>nf_ct_get_tuple (19,006,733 samples, 0.02%)</title><rect x="1136.8" y="1141" width="0.3" height="15.0" fill="rgb(208,22,10)" rx="2" ry="2" />
<text  x="1139.84" y="1151.5" ></text>
</g>
<g >
<title>switch_mm (36,238,508 samples, 0.04%)</title><rect x="489.1" y="1509" width="0.5" height="15.0" fill="rgb(246,61,4)" rx="2" ry="2" />
<text  x="492.12" y="1519.5" ></text>
</g>
<g >
<title>local.runtime.gcBgMarkWorker.func2 (63,067,705 samples, 0.07%)</title><rect x="13.5" y="1637" width="0.8" height="15.0" fill="rgb(238,76,41)" rx="2" ry="2" />
<text  x="16.51" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1093" width="3.0" height="15.0" fill="rgb(245,67,33)" rx="2" ry="2" />
<text  x="131.55" y="1103.5" ></text>
</g>
<g >
<title>__mpn_extract_double (19,466,510 samples, 0.02%)</title><rect x="1111.3" y="1429" width="0.2" height="15.0" fill="rgb(246,154,34)" rx="2" ry="2" />
<text  x="1114.26" y="1439.5" ></text>
</g>
<g >
<title>load_balance (7,708,804 samples, 0.01%)</title><rect x="507.4" y="1413" width="0.1" height="15.0" fill="rgb(239,19,20)" rx="2" ry="2" />
<text  x="510.36" y="1423.5" ></text>
</g>
<g >
<title>bnx2_start_xmit (12,020,564 samples, 0.01%)</title><rect x="544.1" y="885" width="0.2" height="15.0" fill="rgb(230,111,41)" rx="2" ry="2" />
<text  x="547.12" y="895.5" ></text>
</g>
<g >
<title>run_rebalance_domains (28,134,910 samples, 0.03%)</title><rect x="650.5" y="1413" width="0.4" height="15.0" fill="rgb(235,17,53)" rx="2" ry="2" />
<text  x="653.51" y="1423.5" ></text>
</g>
<g >
<title>operator new (13,100,103 samples, 0.01%)</title><rect x="83.6" y="1301" width="0.2" height="15.0" fill="rgb(219,176,7)" rx="2" ry="2" />
<text  x="86.59" y="1311.5" ></text>
</g>
<g >
<title>[perf-23787.map] (277,905,729 samples, 0.31%)</title><rect x="659.2" y="1653" width="3.7" height="15.0" fill="rgb(220,17,52)" rx="2" ry="2" />
<text  x="662.21" y="1663.5" ></text>
</g>
<g >
<title>validate_xmit_skb (12,374,688 samples, 0.01%)</title><rect x="1163.7" y="789" width="0.2" height="15.0" fill="rgb(229,15,35)" rx="2" ry="2" />
<text  x="1166.72" y="799.5" ></text>
</g>
<g >
<title>enqueue_entity (16,374,998 samples, 0.02%)</title><rect x="145.8" y="1173" width="0.3" height="15.0" fill="rgb(251,29,28)" rx="2" ry="2" />
<text  x="148.85" y="1183.5" ></text>
</g>
<g >
<title>kmem_cache_free (10,844,498 samples, 0.01%)</title><rect x="1148.0" y="725" width="0.1" height="15.0" fill="rgb(233,102,9)" rx="2" ry="2" />
<text  x="1150.98" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_write (4,711,426,951 samples, 5.28%)</title><rect x="1124.5" y="1477" width="62.3" height="15.0" fill="rgb(205,144,12)" rx="2" ry="2" />
<text  x="1127.49" y="1487.5" >__x64_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="405" width="1.4" height="15.0" fill="rgb(250,44,51)" rx="2" ry="2" />
<text  x="100.15" y="415.5" ></text>
</g>
<g >
<title>skb_ext_add (24,368,928 samples, 0.03%)</title><rect x="561.1" y="1365" width="0.4" height="15.0" fill="rgb(206,10,48)" rx="2" ry="2" />
<text  x="564.14" y="1375.5" ></text>
</g>
<g >
<title>bio_endio (389,717,135 samples, 0.44%)</title><rect x="512.8" y="1381" width="5.1" height="15.0" fill="rgb(212,161,11)" rx="2" ry="2" />
<text  x="515.77" y="1391.5" ></text>
</g>
<g >
<title>lj_BC_UGET (279,590,693 samples, 0.31%)</title><rect x="1099.8" y="1541" width="3.7" height="15.0" fill="rgb(206,151,51)" rx="2" ry="2" />
<text  x="1102.83" y="1551.5" ></text>
</g>
<g >
<title>lj_BC_SUBVN (12,103,906 samples, 0.01%)</title><rect x="1073.3" y="1541" width="0.1" height="15.0" fill="rgb(232,45,10)" rx="2" ry="2" />
<text  x="1076.29" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15,124,080 samples, 0.02%)</title><rect x="86.4" y="1413" width="0.2" height="15.0" fill="rgb(211,141,42)" rx="2" ry="2" />
<text  x="89.40" y="1423.5" ></text>
</g>
<g >
<title>ext4_inode_block_valid (30,437,438 samples, 0.03%)</title><rect x="160.6" y="1205" width="0.4" height="15.0" fill="rgb(248,26,14)" rx="2" ry="2" />
<text  x="163.63" y="1215.5" ></text>
</g>
<g >
<title>handle_irq_event (26,602,838 samples, 0.03%)</title><rect x="602.5" y="1365" width="0.4" height="15.0" fill="rgb(228,90,16)" rx="2" ry="2" />
<text  x="605.51" y="1375.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (73,026,477 samples, 0.08%)</title><rect x="642.3" y="1349" width="0.9" height="15.0" fill="rgb(252,83,15)" rx="2" ry="2" />
<text  x="645.27" y="1359.5" ></text>
</g>
<g >
<title>net_rx_action (9,073,625 samples, 0.01%)</title><rect x="126.6" y="37" width="0.1" height="15.0" fill="rgb(205,94,12)" rx="2" ry="2" />
<text  x="129.62" y="47.5" ></text>
</g>
<g >
<title>operator delete@plt (8,393,755 samples, 0.01%)</title><rect x="123.5" y="101" width="0.1" height="15.0" fill="rgb(223,44,48)" rx="2" ry="2" />
<text  x="126.50" y="111.5" ></text>
</g>
<g >
<title>vfs_read (14,703,657 samples, 0.02%)</title><rect x="240.7" y="1477" width="0.2" height="15.0" fill="rgb(219,73,12)" rx="2" ry="2" />
<text  x="243.68" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1221" width="1.4" height="15.0" fill="rgb(238,119,51)" rx="2" ry="2" />
<text  x="100.15" y="1231.5" ></text>
</g>
<g >
<title>net_rx_action (14,100,550 samples, 0.02%)</title><rect x="1028.1" y="1445" width="0.2" height="15.0" fill="rgb(222,140,16)" rx="2" ry="2" />
<text  x="1031.14" y="1455.5" ></text>
</g>
<g >
<title>_ext4_get_block (2,625,112,417 samples, 2.94%)</title><rect x="158.6" y="1253" width="34.7" height="15.0" fill="rgb(222,221,0)" rx="2" ry="2" />
<text  x="161.61" y="1263.5" >_e..</text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (8,138,525 samples, 0.01%)</title><rect x="184.4" y="1157" width="0.1" height="15.0" fill="rgb(240,46,17)" rx="2" ry="2" />
<text  x="187.42" y="1167.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (592,341,206 samples, 0.66%)</title><rect x="195.6" y="1221" width="7.8" height="15.0" fill="rgb(250,114,39)" rx="2" ry="2" />
<text  x="198.60" y="1231.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (17,770,105 samples, 0.02%)</title><rect x="148.1" y="1269" width="0.2" height="15.0" fill="rgb(249,83,49)" rx="2" ry="2" />
<text  x="151.10" y="1279.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (8,254,076 samples, 0.01%)</title><rect x="711.5" y="1397" width="0.1" height="15.0" fill="rgb(215,214,3)" rx="2" ry="2" />
<text  x="714.53" y="1407.5" ></text>
</g>
<g >
<title>luaL_pushresult (38,695,999 samples, 0.04%)</title><rect x="686.7" y="1621" width="0.5" height="15.0" fill="rgb(220,67,6)" rx="2" ry="2" />
<text  x="689.70" y="1631.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (77,988,404 samples, 0.09%)</title><rect x="1151.6" y="581" width="1.1" height="15.0" fill="rgb(248,78,12)" rx="2" ry="2" />
<text  x="1154.65" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1061" width="0.8" height="15.0" fill="rgb(251,24,30)" rx="2" ry="2" />
<text  x="101.56" y="1071.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::shared_ptr&lt;InotifySubscription&gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::shared_ptr&lt;InotifySubscription&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::equal_range (10,256,165 samples, 0.01%)</title><rect x="93.0" y="1605" width="0.2" height="15.0" fill="rgb(208,33,33)" rx="2" ry="2" />
<text  x="96.05" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1365" width="3.6" height="15.0" fill="rgb(206,79,35)" rx="2" ry="2" />
<text  x="109.59" y="1375.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (8,574,099 samples, 0.01%)</title><rect x="239.7" y="1301" width="0.2" height="15.0" fill="rgb(224,209,46)" rx="2" ry="2" />
<text  x="242.74" y="1311.5" ></text>
</g>
<g >
<title>worker_thread (26,619,934 samples, 0.03%)</title><rect x="45.2" y="1621" width="0.3" height="15.0" fill="rgb(229,155,36)" rx="2" ry="2" />
<text  x="48.15" y="1631.5" ></text>
</g>
<g >
<title>__schedule (10,905,451 samples, 0.01%)</title><rect x="13.3" y="1477" width="0.1" height="15.0" fill="rgb(236,78,34)" rx="2" ry="2" />
<text  x="16.29" y="1487.5" ></text>
</g>
<g >
<title>worker_thread (22,865,371 samples, 0.03%)</title><rect x="46.2" y="1621" width="0.3" height="15.0" fill="rgb(218,114,30)" rx="2" ry="2" />
<text  x="49.24" y="1631.5" ></text>
</g>
<g >
<title>__brelse (7,749,565 samples, 0.01%)</title><rect x="224.2" y="1253" width="0.1" height="15.0" fill="rgb(223,125,40)" rx="2" ry="2" />
<text  x="227.21" y="1263.5" ></text>
</g>
<g >
<title>local.runtime.goexit.abi0 (84,718,283 samples, 0.10%)</title><rect x="11.5" y="1653" width="1.1" height="15.0" fill="rgb(223,189,13)" rx="2" ry="2" />
<text  x="14.50" y="1663.5" ></text>
</g>
<g >
<title>__vfs_read (55,554,565 samples, 0.06%)</title><rect x="95.9" y="1509" width="0.7" height="15.0" fill="rgb(250,82,24)" rx="2" ry="2" />
<text  x="98.87" y="1519.5" ></text>
</g>
<g >
<title>__schedule (15,293,222 samples, 0.02%)</title><rect x="46.0" y="1589" width="0.2" height="15.0" fill="rgb(234,211,20)" rx="2" ry="2" />
<text  x="49.00" y="1599.5" ></text>
</g>
<g >
<title>l4proto_manip_pkt (8,950,239 samples, 0.01%)</title><rect x="1164.7" y="757" width="0.1" height="15.0" fill="rgb(215,145,10)" rx="2" ry="2" />
<text  x="1167.71" y="767.5" ></text>
</g>
<g >
<title>net_rx_action (20,202,872 samples, 0.02%)</title><rect x="591.9" y="1477" width="0.3" height="15.0" fill="rgb(235,30,51)" rx="2" ry="2" />
<text  x="594.89" y="1487.5" ></text>
</g>
<g >
<title>__inet_lookup_established (17,664,517 samples, 0.02%)</title><rect x="1172.4" y="949" width="0.2" height="15.0" fill="rgb(217,18,19)" rx="2" ry="2" />
<text  x="1175.39" y="959.5" ></text>
</g>
<g >
<title>tcp_in_window (33,455,418 samples, 0.04%)</title><rect x="1136.4" y="1125" width="0.4" height="15.0" fill="rgb(209,44,23)" rx="2" ry="2" />
<text  x="1139.40" y="1135.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1,091,256,585 samples, 1.22%)</title><rect x="729.0" y="1285" width="14.4" height="15.0" fill="rgb(219,144,49)" rx="2" ry="2" />
<text  x="731.99" y="1295.5" ></text>
</g>
<g >
<title>ip_sabotage_in (922,483,266 samples, 1.03%)</title><rect x="545.8" y="1205" width="12.2" height="15.0" fill="rgb(226,82,35)" rx="2" ry="2" />
<text  x="548.81" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,549,793 samples, 0.12%)</title><rect x="97.2" y="357" width="1.4" height="15.0" fill="rgb(225,49,27)" rx="2" ry="2" />
<text  x="100.15" y="367.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (726,870,214 samples, 0.82%)</title><rect x="731.9" y="1141" width="9.7" height="15.0" fill="rgb(206,185,9)" rx="2" ry="2" />
<text  x="734.94" y="1151.5" ></text>
</g>
<g >
<title>udp_tunnel_xmit_skb (157,797,535 samples, 0.18%)</title><rect x="734.0" y="677" width="2.1" height="15.0" fill="rgb(243,185,3)" rx="2" ry="2" />
<text  x="736.97" y="687.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (10,252,853 samples, 0.01%)</title><rect x="41.4" y="1397" width="0.1" height="15.0" fill="rgb(209,151,13)" rx="2" ry="2" />
<text  x="44.36" y="1407.5" ></text>
</g>
<g >
<title>fib_table_lookup (19,991,734 samples, 0.02%)</title><rect x="558.5" y="1301" width="0.2" height="15.0" fill="rgb(221,35,51)" rx="2" ry="2" />
<text  x="561.46" y="1311.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/vendor/github.com/hashicorp/memberlist.(*Memberlist).triggerFunc (9,245,114 samples, 0.01%)</title><rect x="11.8" y="1621" width="0.1" height="15.0" fill="rgb(240,158,5)" rx="2" ry="2" />
<text  x="14.78" y="1631.5" ></text>
</g>
<g >
<title>__fsnotify_parent (13,895,544 samples, 0.02%)</title><rect x="1125.2" y="1429" width="0.1" height="15.0" fill="rgb(206,148,14)" rx="2" ry="2" />
<text  x="1128.16" y="1439.5" ></text>
</g>
<g >
<title>_int_free (15,842,830 samples, 0.02%)</title><rect x="75.1" y="853" width="0.2" height="15.0" fill="rgb(247,96,44)" rx="2" ry="2" />
<text  x="78.11" y="863.5" ></text>
</g>
<g >
<title>_IO_no_init (17,982,938 samples, 0.02%)</title><rect x="1104.6" y="1461" width="0.2" height="15.0" fill="rgb(247,32,49)" rx="2" ry="2" />
<text  x="1107.59" y="1471.5" ></text>
</g>
<g >
<title>ip_finish_output2 (2,944,315,343 samples, 3.30%)</title><rect x="1142.3" y="1157" width="39.0" height="15.0" fill="rgb(229,49,42)" rx="2" ry="2" />
<text  x="1145.34" y="1167.5" >ip_..</text>
</g>
<g >
<title>process_one_work (8,574,260 samples, 0.01%)</title><rect x="46.6" y="1605" width="0.1" height="15.0" fill="rgb(245,192,45)" rx="2" ry="2" />
<text  x="49.56" y="1615.5" ></text>
</g>
<g >
<title>native_apic_mem_read (13,806,964 samples, 0.02%)</title><rect x="254.7" y="1365" width="0.2" height="15.0" fill="rgb(205,23,32)" rx="2" ry="2" />
<text  x="257.67" y="1375.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2,513,864,998 samples, 2.82%)</title><rect x="1142.9" y="1141" width="33.3" height="15.0" fill="rgb(225,118,28)" rx="2" ry="2" />
<text  x="1145.90" y="1151.5" >__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="933" width="0.3" height="15.0" fill="rgb(208,85,33)" rx="2" ry="2" />
<text  x="102.79" y="943.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (38,469,016 samples, 0.04%)</title><rect x="1184.1" y="1253" width="0.5" height="15.0" fill="rgb(208,17,49)" rx="2" ry="2" />
<text  x="1187.13" y="1263.5" ></text>
</g>
<g >
<title>Watcher::notify (123,018,267 samples, 0.14%)</title><rect x="93.5" y="1621" width="1.6" height="15.0" fill="rgb(229,106,21)" rx="2" ry="2" />
<text  x="96.47" y="1631.5" ></text>
</g>
<g >
<title>__libc_read (1,614,984,596 samples, 1.81%)</title><rect x="723.6" y="1525" width="21.4" height="15.0" fill="rgb(250,186,18)" rx="2" ry="2" />
<text  x="726.65" y="1535.5" >_..</text>
</g>
<g >
<title>__find_get_block (61,400,406 samples, 0.07%)</title><rect x="228.1" y="1221" width="0.8" height="15.0" fill="rgb(223,42,7)" rx="2" ry="2" />
<text  x="231.08" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1573" width="18.3" height="15.0" fill="rgb(236,164,51)" rx="2" ry="2" />
<text  x="113.16" y="1583.5" ></text>
</g>
<g >
<title>execute_shell_function (10,770,341 samples, 0.01%)</title><rect x="10.8" y="1141" width="0.1" height="15.0" fill="rgb(250,45,39)" rx="2" ry="2" />
<text  x="13.80" y="1151.5" ></text>
</g>
<g >
<title>netif_rx_internal (17,659,065 samples, 0.02%)</title><rect x="537.0" y="1029" width="0.3" height="15.0" fill="rgb(242,122,30)" rx="2" ry="2" />
<text  x="540.04" y="1039.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (57,824,154 samples, 0.06%)</title><rect x="140.2" y="1461" width="0.8" height="15.0" fill="rgb(252,51,25)" rx="2" ry="2" />
<text  x="143.20" y="1471.5" ></text>
</g>
<g >
<title>bio_init (15,591,582 samples, 0.02%)</title><rect x="21.5" y="1461" width="0.3" height="15.0" fill="rgb(227,53,54)" rx="2" ry="2" />
<text  x="24.54" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="405" width="18.3" height="15.0" fill="rgb(253,87,7)" rx="2" ry="2" />
<text  x="113.16" y="415.5" ></text>
</g>
<g >
<title>tcache_get (13,750,208 samples, 0.02%)</title><rect x="126.3" y="69" width="0.1" height="15.0" fill="rgb(222,1,4)" rx="2" ry="2" />
<text  x="129.25" y="79.5" ></text>
</g>
<g >
<title>local.runtime.systemstack.abi0 (69,215,992 samples, 0.08%)</title><rect x="13.5" y="1653" width="0.9" height="15.0" fill="rgb(242,135,29)" rx="2" ry="2" />
<text  x="16.46" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="565" width="3.6" height="15.0" fill="rgb(250,0,39)" rx="2" ry="2" />
<text  x="109.59" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="709" width="0.8" height="15.0" fill="rgb(253,172,20)" rx="2" ry="2" />
<text  x="101.56" y="719.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_pre_routing (15,677,701 samples, 0.02%)</title><rect x="532.6" y="1333" width="0.2" height="15.0" fill="rgb(206,10,38)" rx="2" ry="2" />
<text  x="535.64" y="1343.5" ></text>
</g>
<g >
<title>__blk_bios_map_sg (41,514,679 samples, 0.05%)</title><rect x="36.1" y="1205" width="0.6" height="15.0" fill="rgb(241,170,46)" rx="2" ry="2" />
<text  x="39.12" y="1215.5" ></text>
</g>
<g >
<title>std::string::rfind (9,684,807 samples, 0.01%)</title><rect x="87.5" y="1573" width="0.1" height="15.0" fill="rgb(210,77,15)" rx="2" ry="2" />
<text  x="90.49" y="1583.5" ></text>
</g>
<g >
<title>pick_next_task_fair (83,048,894 samples, 0.09%)</title><rect x="592.3" y="1557" width="1.1" height="15.0" fill="rgb(237,220,20)" rx="2" ry="2" />
<text  x="595.33" y="1567.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (29,720,136 samples, 0.03%)</title><rect x="734.4" y="597" width="0.4" height="15.0" fill="rgb(211,2,33)" rx="2" ry="2" />
<text  x="737.40" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="981" width="3.6" height="15.0" fill="rgb(226,51,12)" rx="2" ry="2" />
<text  x="109.59" y="991.5" ></text>
</g>
<g >
<title>skb_release_data (29,126,162 samples, 0.03%)</title><rect x="552.9" y="1013" width="0.4" height="15.0" fill="rgb(225,123,8)" rx="2" ry="2" />
<text  x="555.91" y="1023.5" ></text>
</g>
<g >
<title>string_quote_removal (8,212,682 samples, 0.01%)</title><rect x="11.0" y="1349" width="0.1" height="15.0" fill="rgb(253,171,50)" rx="2" ry="2" />
<text  x="13.95" y="1359.5" ></text>
</g>
<g >
<title>nf_xfrm_me_harder (11,998,809 samples, 0.01%)</title><rect x="1164.9" y="837" width="0.1" height="15.0" fill="rgb(216,31,12)" rx="2" ry="2" />
<text  x="1167.87" y="847.5" ></text>
</g>
<g >
<title>lj_alloc_free (16,411,568 samples, 0.02%)</title><rect x="1097.8" y="1477" width="0.2" height="15.0" fill="rgb(229,160,2)" rx="2" ry="2" />
<text  x="1100.77" y="1487.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,744,543,973 samples, 5.32%)</title><rect x="1124.2" y="1493" width="62.8" height="15.0" fill="rgb(212,125,1)" rx="2" ry="2" />
<text  x="1127.18" y="1503.5" >do_sys..</text>
</g>
<g >
<title>__wake_up_common_lock (91,529,736 samples, 0.10%)</title><rect x="554.2" y="949" width="1.2" height="15.0" fill="rgb(210,96,36)" rx="2" ry="2" />
<text  x="557.21" y="959.5" ></text>
</g>
<g >
<title>cpuidle_not_available (12,877,079 samples, 0.01%)</title><rect x="243.6" y="1605" width="0.1" height="15.0" fill="rgb(218,95,41)" rx="2" ry="2" />
<text  x="246.55" y="1615.5" ></text>
</g>
<g >
<title>mempool_alloc (101,782,861 samples, 0.11%)</title><rect x="30.5" y="1461" width="1.3" height="15.0" fill="rgb(222,119,8)" rx="2" ry="2" />
<text  x="33.45" y="1471.5" ></text>
</g>
<g >
<title>runc (12,727,187 samples, 0.01%)</title><rect x="241.5" y="1669" width="0.1" height="15.0" fill="rgb(215,67,50)" rx="2" ry="2" />
<text  x="244.45" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="949" width="0.3" height="15.0" fill="rgb(222,213,29)" rx="2" ry="2" />
<text  x="102.79" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="485" width="6.5" height="15.0" fill="rgb(206,17,9)" rx="2" ry="2" />
<text  x="103.13" y="495.5" ></text>
</g>
<g >
<title>operator new (12,540,530 samples, 0.01%)</title><rect x="78.8" y="1045" width="0.2" height="15.0" fill="rgb(217,185,18)" rx="2" ry="2" />
<text  x="81.83" y="1055.5" ></text>
</g>
<g >
<title>__cmd_record (7,636,897,497 samples, 8.56%)</title><rect x="139.2" y="1621" width="101.0" height="15.0" fill="rgb(223,205,6)" rx="2" ry="2" />
<text  x="142.16" y="1631.5" >__cmd_record</text>
</g>
<g >
<title>__ip_local_out (58,981,119 samples, 0.07%)</title><rect x="734.1" y="629" width="0.8" height="15.0" fill="rgb(229,92,36)" rx="2" ry="2" />
<text  x="737.13" y="639.5" ></text>
</g>
<g >
<title>process_one_work (13,911,758 samples, 0.02%)</title><rect x="46.9" y="1605" width="0.2" height="15.0" fill="rgb(221,71,11)" rx="2" ry="2" />
<text  x="49.91" y="1615.5" ></text>
</g>
<g >
<title>_dl_start_final (8,848,269 samples, 0.01%)</title><rect x="10.3" y="1621" width="0.1" height="15.0" fill="rgb(250,6,54)" rx="2" ry="2" />
<text  x="13.28" y="1631.5" ></text>
</g>
<g >
<title>br_nf_hook_thresh (91,233,535 samples, 0.10%)</title><rect x="41.7" y="1445" width="1.2" height="15.0" fill="rgb(244,2,7)" rx="2" ry="2" />
<text  x="44.68" y="1455.5" ></text>
</g>
<g >
<title>tcp_poll (15,999,022 samples, 0.02%)</title><rect x="750.0" y="1429" width="0.2" height="15.0" fill="rgb(207,18,22)" rx="2" ry="2" />
<text  x="752.96" y="1439.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (10,189,792 samples, 0.01%)</title><rect x="92.8" y="1589" width="0.1" height="15.0" fill="rgb(228,41,37)" rx="2" ry="2" />
<text  x="95.76" y="1599.5" ></text>
</g>
<g >
<title>[sshd] (28,499,758 samples, 0.03%)</title><rect x="242.0" y="1653" width="0.4" height="15.0" fill="rgb(205,92,51)" rx="2" ry="2" />
<text  x="244.99" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="213" width="0.8" height="15.0" fill="rgb(243,19,42)" rx="2" ry="2" />
<text  x="101.56" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (11,994,100 samples, 0.01%)</title><rect x="101.4" y="85" width="0.2" height="15.0" fill="rgb(248,169,35)" rx="2" ry="2" />
<text  x="104.42" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1461" width="3.0" height="15.0" fill="rgb(246,174,39)" rx="2" ry="2" />
<text  x="131.55" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1557" width="1.4" height="15.0" fill="rgb(248,140,49)" rx="2" ry="2" />
<text  x="100.15" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="261" width="0.3" height="15.0" fill="rgb(209,203,51)" rx="2" ry="2" />
<text  x="102.79" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="309" width="18.3" height="15.0" fill="rgb(205,92,39)" rx="2" ry="2" />
<text  x="113.16" y="319.5" ></text>
</g>
<g >
<title>mongo::WiredTigerUtil::exportTableToBSON (22,676,529 samples, 0.03%)</title><rect x="15.5" y="1461" width="0.3" height="15.0" fill="rgb(219,160,49)" rx="2" ry="2" />
<text  x="18.46" y="1471.5" ></text>
</g>
<g >
<title>ip_vs_conn_out_get_proto (14,491,749 samples, 0.02%)</title><rect x="1169.5" y="901" width="0.2" height="15.0" fill="rgb(250,131,31)" rx="2" ry="2" />
<text  x="1172.52" y="911.5" ></text>
</g>
<g >
<title>__slab_free (38,258,805 samples, 0.04%)</title><rect x="513.9" y="1253" width="0.5" height="15.0" fill="rgb(252,195,49)" rx="2" ry="2" />
<text  x="516.86" y="1263.5" ></text>
</g>
<g >
<title>alloc_page_buffers (269,453,637 samples, 0.30%)</title><rect x="154.4" y="1269" width="3.6" height="15.0" fill="rgb(233,124,4)" rx="2" ry="2" />
<text  x="157.39" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,549,793 samples, 0.12%)</title><rect x="97.2" y="549" width="1.4" height="15.0" fill="rgb(247,34,2)" rx="2" ry="2" />
<text  x="100.15" y="559.5" ></text>
</g>
<g >
<title>local.runtime.mstart0 (25,960,426 samples, 0.03%)</title><rect x="13.1" y="1637" width="0.4" height="15.0" fill="rgb(206,95,41)" rx="2" ry="2" />
<text  x="16.11" y="1647.5" ></text>
</g>
<g >
<title>br_nf_hook_thresh (30,999,286 samples, 0.03%)</title><rect x="251.2" y="1237" width="0.4" height="15.0" fill="rgb(243,82,54)" rx="2" ry="2" />
<text  x="254.19" y="1247.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (234,437,652 samples, 0.26%)</title><rect x="41.0" y="1589" width="3.1" height="15.0" fill="rgb(252,47,39)" rx="2" ry="2" />
<text  x="43.96" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="565" width="1.4" height="15.0" fill="rgb(221,211,8)" rx="2" ry="2" />
<text  x="100.15" y="575.5" ></text>
</g>
<g >
<title>finish_task_switch (7,856,268 samples, 0.01%)</title><rect x="135.5" y="1413" width="0.1" height="15.0" fill="rgb(227,224,32)" rx="2" ry="2" />
<text  x="138.54" y="1423.5" ></text>
</g>
<g >
<title>execute_command_internal (11,864,933 samples, 0.01%)</title><rect x="10.8" y="1237" width="0.1" height="15.0" fill="rgb(221,25,41)" rx="2" ry="2" />
<text  x="13.79" y="1247.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run (182,284,819 samples, 0.20%)</title><rect x="133.7" y="1605" width="2.4" height="15.0" fill="rgb(242,43,37)" rx="2" ry="2" />
<text  x="136.66" y="1615.5" ></text>
</g>
<g >
<title>node_page_state (20,527,727 samples, 0.02%)</title><rect x="201.6" y="1189" width="0.2" height="15.0" fill="rgb(243,47,48)" rx="2" ry="2" />
<text  x="204.58" y="1199.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (21,962,680 samples, 0.02%)</title><rect x="41.7" y="1221" width="0.3" height="15.0" fill="rgb(224,60,19)" rx="2" ry="2" />
<text  x="44.75" y="1231.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (12,124,456 samples, 0.01%)</title><rect x="568.6" y="1189" width="0.2" height="15.0" fill="rgb(244,7,7)" rx="2" ry="2" />
<text  x="571.60" y="1199.5" ></text>
</g>
<g >
<title>dbs_work_handler (7,689,678 samples, 0.01%)</title><rect x="46.9" y="1589" width="0.1" height="15.0" fill="rgb(252,105,30)" rx="2" ry="2" />
<text  x="49.93" y="1599.5" ></text>
</g>
<g >
<title>br_forward_finish (26,105,730 samples, 0.03%)</title><rect x="1180.7" y="1029" width="0.4" height="15.0" fill="rgb(240,24,1)" rx="2" ry="2" />
<text  x="1183.74" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1237" width="3.6" height="15.0" fill="rgb(248,138,4)" rx="2" ry="2" />
<text  x="109.59" y="1247.5" ></text>
</g>
<g >
<title>gen_exp (60,324,464 samples, 0.07%)</title><rect x="1187.2" y="1541" width="0.8" height="15.0" fill="rgb(253,130,35)" rx="2" ry="2" />
<text  x="1190.19" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,184,852 samples, 0.01%)</title><rect x="97.2" y="197" width="0.1" height="15.0" fill="rgb(239,82,51)" rx="2" ry="2" />
<text  x="100.15" y="207.5" ></text>
</g>
<g >
<title>_int_free (11,162,388 samples, 0.01%)</title><rect x="84.5" y="1365" width="0.2" height="15.0" fill="rgb(244,205,5)" rx="2" ry="2" />
<text  x="87.55" y="1375.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (21,421,288 samples, 0.02%)</title><rect x="1180.8" y="981" width="0.2" height="15.0" fill="rgb(225,229,11)" rx="2" ry="2" />
<text  x="1183.76" y="991.5" ></text>
</g>
<g >
<title>delay_request (150,644,463 samples, 0.17%)</title><rect x="698.9" y="1573" width="2.0" height="15.0" fill="rgb(242,224,7)" rx="2" ry="2" />
<text  x="701.92" y="1583.5" ></text>
</g>
<g >
<title>dev_queue_xmit (93,138,880 samples, 0.10%)</title><rect x="536.5" y="1109" width="1.2" height="15.0" fill="rgb(212,181,16)" rx="2" ry="2" />
<text  x="539.48" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="917" width="18.3" height="15.0" fill="rgb(222,204,51)" rx="2" ry="2" />
<text  x="113.16" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (473,675,089 samples, 0.53%)</title><rect x="100.1" y="181" width="6.3" height="15.0" fill="rgb(250,29,27)" rx="2" ry="2" />
<text  x="103.13" y="191.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (21,846,095 samples, 0.02%)</title><rect x="566.1" y="1221" width="0.3" height="15.0" fill="rgb(253,228,51)" rx="2" ry="2" />
<text  x="569.12" y="1231.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (142,976,998 samples, 0.16%)</title><rect x="527.8" y="1301" width="1.9" height="15.0" fill="rgb(215,66,6)" rx="2" ry="2" />
<text  x="530.80" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (524,520,871 samples, 0.59%)</title><rect x="61.8" y="501" width="6.9" height="15.0" fill="rgb(206,130,20)" rx="2" ry="2" />
<text  x="64.79" y="511.5" ></text>
</g>
<g >
<title>worker_thread (25,971,266 samples, 0.03%)</title><rect x="44.8" y="1621" width="0.3" height="15.0" fill="rgb(228,76,47)" rx="2" ry="2" />
<text  x="47.80" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="725" width="3.6" height="15.0" fill="rgb(244,42,23)" rx="2" ry="2" />
<text  x="109.59" y="735.5" ></text>
</g>
<g >
<title>sd_setup_read_write_cmnd (49,067,042 samples, 0.06%)</title><rect x="36.1" y="1253" width="0.7" height="15.0" fill="rgb(245,6,3)" rx="2" ry="2" />
<text  x="39.11" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15,868,607 samples, 0.02%)</title><rect x="62.7" y="213" width="0.2" height="15.0" fill="rgb(211,225,30)" rx="2" ry="2" />
<text  x="65.71" y="223.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (67,034,494 samples, 0.08%)</title><rect x="526.6" y="1317" width="0.9" height="15.0" fill="rgb(235,62,54)" rx="2" ry="2" />
<text  x="529.58" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (20,923,819 samples, 0.02%)</title><rect x="86.3" y="1429" width="0.3" height="15.0" fill="rgb(237,126,11)" rx="2" ry="2" />
<text  x="89.33" y="1439.5" ></text>
</g>
<g >
<title>perf_mmap__read_head (16,143,393 samples, 0.02%)</title><rect x="141.7" y="1557" width="0.2" height="15.0" fill="rgb(217,94,21)" rx="2" ry="2" />
<text  x="144.71" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="725" width="0.3" height="15.0" fill="rgb(227,53,38)" rx="2" ry="2" />
<text  x="102.79" y="735.5" ></text>
</g>
<g >
<title>br_nf_dev_queue_xmit (29,584,849 samples, 0.03%)</title><rect x="251.2" y="1173" width="0.4" height="15.0" fill="rgb(228,148,52)" rx="2" ry="2" />
<text  x="254.21" y="1183.5" ></text>
</g>
<g >
<title>leave_mm (36,589,865 samples, 0.04%)</title><rect x="489.1" y="1525" width="0.5" height="15.0" fill="rgb(241,100,9)" rx="2" ry="2" />
<text  x="492.12" y="1535.5" ></text>
</g>
<g >
<title>filename_lookup (115,171,631 samples, 0.13%)</title><rect x="88.5" y="1477" width="1.5" height="15.0" fill="rgb(234,144,26)" rx="2" ry="2" />
<text  x="91.46" y="1487.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (57,820,435 samples, 0.06%)</title><rect x="205.8" y="1221" width="0.8" height="15.0" fill="rgb(248,42,38)" rx="2" ry="2" />
<text  x="208.79" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1445" width="3.0" height="15.0" fill="rgb(213,165,53)" rx="2" ry="2" />
<text  x="131.55" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,579,320 samples, 0.01%)</title><rect x="51.3" y="1541" width="0.2" height="15.0" fill="rgb(250,119,40)" rx="2" ry="2" />
<text  x="54.34" y="1551.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (28,700,748 samples, 0.03%)</title><rect x="742.5" y="1125" width="0.3" height="15.0" fill="rgb(232,134,22)" rx="2" ry="2" />
<text  x="745.45" y="1135.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (48,244,068 samples, 0.05%)</title><rect x="1166.7" y="805" width="0.6" height="15.0" fill="rgb(224,168,6)" rx="2" ry="2" />
<text  x="1169.69" y="815.5" ></text>
</g>
<g >
<title>fib_validate_source (10,113,306 samples, 0.01%)</title><rect x="571.1" y="1317" width="0.1" height="15.0" fill="rgb(206,139,52)" rx="2" ry="2" />
<text  x="574.09" y="1327.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_fn (16,538,401 samples, 0.02%)</title><rect x="731.4" y="1173" width="0.2" height="15.0" fill="rgb(237,229,23)" rx="2" ry="2" />
<text  x="734.43" y="1183.5" ></text>
</g>
<g >
<title>___slab_alloc (17,685,985 samples, 0.02%)</title><rect x="33.0" y="1445" width="0.2" height="15.0" fill="rgb(240,219,24)" rx="2" ry="2" />
<text  x="35.98" y="1455.5" ></text>
</g>
<g >
<title>ext4_validate_block_bitmap (15,028,916 samples, 0.02%)</title><rect x="183.9" y="1125" width="0.2" height="15.0" fill="rgb(208,178,16)" rx="2" ry="2" />
<text  x="186.89" y="1135.5" ></text>
</g>
<g >
<title>usec_to_next_send (81,317,824 samples, 0.09%)</title><rect x="1187.1" y="1557" width="1.1" height="15.0" fill="rgb(233,113,16)" rx="2" ry="2" />
<text  x="1190.13" y="1567.5" ></text>
</g>
<g >
<title>__GI___strlen_sse2 (12,543,754 samples, 0.01%)</title><rect x="1122.1" y="1525" width="0.1" height="15.0" fill="rgb(245,49,47)" rx="2" ry="2" />
<text  x="1125.07" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1429" width="3.0" height="15.0" fill="rgb(222,56,18)" rx="2" ry="2" />
<text  x="131.55" y="1439.5" ></text>
</g>
<g >
<title>ip_route_input_noref (125,145,527 samples, 0.14%)</title><rect x="1170.7" y="965" width="1.6" height="15.0" fill="rgb(252,35,53)" rx="2" ry="2" />
<text  x="1173.68" y="975.5" ></text>
</g>
<g >
<title>__sprintf (206,578,751 samples, 0.23%)</title><rect x="678.0" y="1621" width="2.7" height="15.0" fill="rgb(243,49,44)" rx="2" ry="2" />
<text  x="681.01" y="1631.5" ></text>
</g>
<g >
<title>new_sync_write (75,360,066 samples, 0.08%)</title><rect x="239.0" y="1397" width="1.0" height="15.0" fill="rgb(227,64,14)" rx="2" ry="2" />
<text  x="242.02" y="1407.5" ></text>
</g>
<g >
<title>__virt_addr_valid (7,725,322 samples, 0.01%)</title><rect x="1127.7" y="1301" width="0.1" height="15.0" fill="rgb(213,214,30)" rx="2" ry="2" />
<text  x="1130.75" y="1311.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (54,001,886 samples, 0.06%)</title><rect x="42.1" y="1237" width="0.7" height="15.0" fill="rgb(216,69,19)" rx="2" ry="2" />
<text  x="45.11" y="1247.5" ></text>
</g>
<g >
<title>xas_clear_mark (10,216,395 samples, 0.01%)</title><rect x="32.4" y="1477" width="0.1" height="15.0" fill="rgb(212,132,32)" rx="2" ry="2" />
<text  x="35.40" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (18,274,654 samples, 0.02%)</title><rect x="58.2" y="1477" width="0.2" height="15.0" fill="rgb(211,97,18)" rx="2" ry="2" />
<text  x="61.17" y="1487.5" ></text>
</g>
<g >
<title>run_ksoftirqd (8,272,890 samples, 0.01%)</title><rect x="40.8" y="1605" width="0.1" height="15.0" fill="rgb(220,76,27)" rx="2" ry="2" />
<text  x="43.75" y="1615.5" ></text>
</g>
<g >
<title>try_to_wake_up (77,633,661 samples, 0.09%)</title><rect x="94.0" y="1461" width="1.0" height="15.0" fill="rgb(209,140,19)" rx="2" ry="2" />
<text  x="97.00" y="1471.5" ></text>
</g>
<g >
<title>__libc_read (28,839,946 samples, 0.03%)</title><rect x="14.5" y="1621" width="0.4" height="15.0" fill="rgb(217,10,51)" rx="2" ry="2" />
<text  x="17.52" y="1631.5" ></text>
</g>
<g >
<title>rcu_idle_enter (11,625,856 samples, 0.01%)</title><rect x="589.1" y="1589" width="0.1" height="15.0" fill="rgb(229,82,6)" rx="2" ry="2" />
<text  x="592.08" y="1599.5" ></text>
</g>
<g >
<title>handle_edge_irq (117,199,393 samples, 0.13%)</title><rect x="639.3" y="1365" width="1.6" height="15.0" fill="rgb(243,73,19)" rx="2" ry="2" />
<text  x="642.34" y="1375.5" ></text>
</g>
<g >
<title>clear_page_rep (290,483,231 samples, 0.33%)</title><rect x="197.1" y="1189" width="3.8" height="15.0" fill="rgb(205,12,5)" rx="2" ry="2" />
<text  x="200.10" y="1199.5" ></text>
</g>
<g >
<title>netif_rx_internal (34,318,372 samples, 0.04%)</title><rect x="1178.3" y="933" width="0.5" height="15.0" fill="rgb(207,130,52)" rx="2" ry="2" />
<text  x="1181.34" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1221" width="18.3" height="15.0" fill="rgb(216,131,23)" rx="2" ry="2" />
<text  x="113.16" y="1231.5" ></text>
</g>
<g >
<title>alloc_buffer_head (225,598,720 samples, 0.25%)</title><rect x="154.8" y="1253" width="3.0" height="15.0" fill="rgb(224,187,14)" rx="2" ry="2" />
<text  x="157.80" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="757" width="0.4" height="15.0" fill="rgb(246,13,31)" rx="2" ry="2" />
<text  x="56.54" y="767.5" ></text>
</g>
<g >
<title>_int_free (11,460,109 samples, 0.01%)</title><rect x="76.3" y="917" width="0.2" height="15.0" fill="rgb(214,144,38)" rx="2" ry="2" />
<text  x="79.34" y="927.5" ></text>
</g>
<g >
<title>br_forward_finish (241,305,980 samples, 0.27%)</title><rect x="733.2" y="837" width="3.2" height="15.0" fill="rgb(214,80,17)" rx="2" ry="2" />
<text  x="736.21" y="847.5" ></text>
</g>
<g >
<title>dst_cache_get_ip4 (14,716,800 samples, 0.02%)</title><rect x="1157.3" y="645" width="0.2" height="15.0" fill="rgb(211,121,8)" rx="2" ry="2" />
<text  x="1160.30" y="655.5" ></text>
</g>
<g >
<title>ip_finish_output2 (250,541,789 samples, 0.28%)</title><rect x="1153.0" y="565" width="3.3" height="15.0" fill="rgb(235,62,8)" rx="2" ry="2" />
<text  x="1156.00" y="575.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (122,461,497 samples, 0.14%)</title><rect x="251.1" y="1429" width="1.6" height="15.0" fill="rgb(232,182,48)" rx="2" ry="2" />
<text  x="254.05" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,159,636,873 samples, 1.30%)</title><rect x="60.4" y="933" width="15.3" height="15.0" fill="rgb(228,168,22)" rx="2" ry="2" />
<text  x="63.38" y="943.5" ></text>
</g>
<g >
<title>__fget_light (37,333,821 samples, 0.04%)</title><rect x="749.0" y="1461" width="0.5" height="15.0" fill="rgb(233,118,54)" rx="2" ry="2" />
<text  x="751.98" y="1471.5" ></text>
</g>
<g >
<title>v8::internal::KeyAccumulator::CollectOwnJSProxyKeys (10,460,137 samples, 0.01%)</title><rect x="52.8" y="1557" width="0.2" height="15.0" fill="rgb(243,124,40)" rx="2" ry="2" />
<text  x="55.83" y="1567.5" ></text>
</g>
<g >
<title>nf_confirm (7,661,225 samples, 0.01%)</title><rect x="1181.7" y="1157" width="0.1" height="15.0" fill="rgb(210,20,18)" rx="2" ry="2" />
<text  x="1184.74" y="1167.5" ></text>
</g>
<g >
<title>iov_iter_advance (24,513,435 samples, 0.03%)</title><rect x="230.0" y="1301" width="0.3" height="15.0" fill="rgb(228,176,37)" rx="2" ry="2" />
<text  x="232.96" y="1311.5" ></text>
</g>
<g >
<title>ip_queue_xmit (3,825,165,356 samples, 4.29%)</title><rect x="1132.3" y="1253" width="50.7" height="15.0" fill="rgb(216,11,1)" rx="2" ry="2" />
<text  x="1135.34" y="1263.5" >ip_qu..</text>
</g>
<g >
<title>nf_hook_slow (74,821,454 samples, 0.08%)</title><rect x="1181.6" y="1189" width="1.0" height="15.0" fill="rgb(244,50,39)" rx="2" ry="2" />
<text  x="1184.56" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="389" width="1.4" height="15.0" fill="rgb(242,210,7)" rx="2" ry="2" />
<text  x="100.15" y="399.5" ></text>
</g>
<g >
<title>sed (13,501,944 samples, 0.02%)</title><rect x="241.6" y="1669" width="0.2" height="15.0" fill="rgb(236,216,28)" rx="2" ry="2" />
<text  x="244.62" y="1679.5" ></text>
</g>
<g >
<title>ip_route_output_flow (83,505,020 samples, 0.09%)</title><rect x="1139.0" y="1141" width="1.1" height="15.0" fill="rgb(242,42,38)" rx="2" ry="2" />
<text  x="1141.97" y="1151.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (6,833,634,483 samples, 7.66%)</title><rect x="147.3" y="1349" width="90.4" height="15.0" fill="rgb(247,143,5)" rx="2" ry="2" />
<text  x="150.26" y="1359.5" >ext4_file_..</text>
</g>
<g >
<title>pagevec_lookup_range_tag (25,241,778 samples, 0.03%)</title><rect x="39.7" y="1525" width="0.3" height="15.0" fill="rgb(208,178,10)" rx="2" ry="2" />
<text  x="42.70" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,246,184 samples, 0.01%)</title><rect x="51.1" y="1509" width="0.1" height="15.0" fill="rgb(213,151,25)" rx="2" ry="2" />
<text  x="54.12" y="1519.5" ></text>
</g>
<g >
<title>uv_spawn (14,066,553 samples, 0.02%)</title><rect x="51.3" y="1605" width="0.2" height="15.0" fill="rgb(222,43,15)" rx="2" ry="2" />
<text  x="54.32" y="1615.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (114,670,320 samples, 0.13%)</title><rect x="639.4" y="1317" width="1.5" height="15.0" fill="rgb(228,45,45)" rx="2" ry="2" />
<text  x="642.36" y="1327.5" ></text>
</g>
<g >
<title>net_rx_action (4,335,734,928 samples, 4.86%)</title><rect x="518.2" y="1477" width="57.4" height="15.0" fill="rgb(230,99,20)" rx="2" ry="2" />
<text  x="521.20" y="1487.5" >net_rx..</text>
</g>
<g >
<title>menu_reflect (12,884,760 samples, 0.01%)</title><rect x="579.9" y="1573" width="0.2" height="15.0" fill="rgb(205,158,6)" rx="2" ry="2" />
<text  x="582.88" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1301" width="18.3" height="15.0" fill="rgb(215,133,28)" rx="2" ry="2" />
<text  x="113.16" y="1311.5" ></text>
</g>
<g >
<title>node::SpinEventLoop (25,996,559 samples, 0.03%)</title><rect x="137.8" y="1589" width="0.4" height="15.0" fill="rgb(234,144,23)" rx="2" ry="2" />
<text  x="140.81" y="1599.5" ></text>
</g>
<g >
<title>fast_mix (7,813,165 samples, 0.01%)</title><rect x="509.3" y="1461" width="0.1" height="15.0" fill="rgb(221,125,39)" rx="2" ry="2" />
<text  x="512.27" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="373" width="0.4" height="15.0" fill="rgb(205,174,45)" rx="2" ry="2" />
<text  x="56.54" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1077" width="0.9" height="15.0" fill="rgb(237,40,40)" rx="2" ry="2" />
<text  x="134.54" y="1087.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (61,034,692 samples, 0.07%)</title><rect x="727.5" y="1333" width="0.8" height="15.0" fill="rgb(222,88,51)" rx="2" ry="2" />
<text  x="730.54" y="1343.5" ></text>
</g>
<g >
<title>newtab (12,033,713 samples, 0.01%)</title><rect x="1098.2" y="1509" width="0.1" height="15.0" fill="rgb(217,184,5)" rx="2" ry="2" />
<text  x="1101.18" y="1519.5" ></text>
</g>
<g >
<title>br_nf_forward_finish (157,241,130 samples, 0.18%)</title><rect x="535.7" y="1221" width="2.1" height="15.0" fill="rgb(233,26,29)" rx="2" ry="2" />
<text  x="538.75" y="1231.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_out (15,201,392 samples, 0.02%)</title><rect x="564.4" y="1317" width="0.2" height="15.0" fill="rgb(230,226,12)" rx="2" ry="2" />
<text  x="567.43" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (218,675,947 samples, 0.25%)</title><rect x="62.3" y="341" width="2.9" height="15.0" fill="rgb(207,102,54)" rx="2" ry="2" />
<text  x="65.30" y="351.5" ></text>
</g>
<g >
<title>node (6,890,793,883 samples, 7.73%)</title><rect x="47.9" y="1669" width="91.2" height="15.0" fill="rgb(236,184,18)" rx="2" ry="2" />
<text  x="50.87" y="1679.5" >node</text>
</g>
<g >
<title>irq_exit (24,350,517 samples, 0.03%)</title><rect x="893.9" y="1429" width="0.3" height="15.0" fill="rgb(222,14,42)" rx="2" ry="2" />
<text  x="896.86" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1365" width="3.0" height="15.0" fill="rgb(225,167,34)" rx="2" ry="2" />
<text  x="131.55" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1013" width="0.9" height="15.0" fill="rgb(238,94,19)" rx="2" ry="2" />
<text  x="134.54" y="1023.5" ></text>
</g>
<g >
<title>nf_nat_inet_fn (22,393,768 samples, 0.03%)</title><rect x="560.7" y="1317" width="0.3" height="15.0" fill="rgb(208,197,6)" rx="2" ry="2" />
<text  x="563.71" y="1327.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (11,917,524 samples, 0.01%)</title><rect x="196.2" y="1205" width="0.2" height="15.0" fill="rgb(252,87,2)" rx="2" ry="2" />
<text  x="199.25" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="869" width="3.6" height="15.0" fill="rgb(237,118,29)" rx="2" ry="2" />
<text  x="109.59" y="879.5" ></text>
</g>
<g >
<title>iptable_filter_hook (8,968,468 samples, 0.01%)</title><rect x="1133.0" y="1189" width="0.1" height="15.0" fill="rgb(213,118,1)" rx="2" ry="2" />
<text  x="1135.96" y="1199.5" ></text>
</g>
<g >
<title>__lru_cache_add (15,582,746 samples, 0.02%)</title><rect x="210.3" y="1237" width="0.2" height="15.0" fill="rgb(235,174,17)" rx="2" ry="2" />
<text  x="213.28" y="1247.5" ></text>
</g>
<g >
<title>ip_queue_xmit (50,639,590 samples, 0.06%)</title><rect x="255.4" y="1349" width="0.7" height="15.0" fill="rgb(249,39,9)" rx="2" ry="2" />
<text  x="258.44" y="1359.5" ></text>
</g>
<g >
<title>kthread (23,644,822 samples, 0.03%)</title><rect x="45.9" y="1637" width="0.3" height="15.0" fill="rgb(235,92,30)" rx="2" ry="2" />
<text  x="48.90" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,996,284 samples, 0.01%)</title><rect x="98.3" y="165" width="0.1" height="15.0" fill="rgb(242,49,46)" rx="2" ry="2" />
<text  x="101.32" y="175.5" ></text>
</g>
<g >
<title>irq_exit (9,252,612 samples, 0.01%)</title><rect x="28.2" y="1349" width="0.1" height="15.0" fill="rgb(245,86,53)" rx="2" ry="2" />
<text  x="31.18" y="1359.5" ></text>
</g>
<g >
<title>gc_sweep (14,008,865 samples, 0.02%)</title><rect x="684.9" y="1541" width="0.1" height="15.0" fill="rgb(205,172,27)" rx="2" ry="2" />
<text  x="687.86" y="1551.5" ></text>
</g>
<g >
<title>bnx2_msi_1shot (20,812,201 samples, 0.02%)</title><rect x="509.0" y="1461" width="0.3" height="15.0" fill="rgb(222,74,44)" rx="2" ry="2" />
<text  x="511.99" y="1471.5" ></text>
</g>
<g >
<title>bnx2_poll_work (440,271,540 samples, 0.49%)</title><rect x="519.2" y="1445" width="5.9" height="15.0" fill="rgb(251,157,30)" rx="2" ry="2" />
<text  x="522.24" y="1455.5" ></text>
</g>
<g >
<title>find_next_bit (8,091,402 samples, 0.01%)</title><rect x="652.5" y="1445" width="0.1" height="15.0" fill="rgb(214,167,5)" rx="2" ry="2" />
<text  x="655.53" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="917" width="3.6" height="15.0" fill="rgb(234,42,6)" rx="2" ry="2" />
<text  x="109.59" y="927.5" ></text>
</g>
<g >
<title>try_to_wake_up (17,430,482 samples, 0.02%)</title><rect x="591.6" y="1397" width="0.2" height="15.0" fill="rgb(246,127,21)" rx="2" ry="2" />
<text  x="594.58" y="1407.5" ></text>
</g>
<g >
<title>ret_from_intr (9,878,419 samples, 0.01%)</title><rect x="28.2" y="1381" width="0.1" height="15.0" fill="rgb(231,180,17)" rx="2" ry="2" />
<text  x="31.17" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="677" width="0.4" height="15.0" fill="rgb(237,24,8)" rx="2" ry="2" />
<text  x="56.54" y="687.5" ></text>
</g>
<g >
<title>vfs_write (103,404,432 samples, 0.12%)</title><rect x="238.7" y="1429" width="1.4" height="15.0" fill="rgb(217,71,24)" rx="2" ry="2" />
<text  x="241.72" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="517" width="6.5" height="15.0" fill="rgb(220,26,45)" rx="2" ry="2" />
<text  x="103.13" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="565" width="0.3" height="15.0" fill="rgb(208,106,16)" rx="2" ry="2" />
<text  x="102.79" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,189,259,759 samples, 8.06%)</title><rect x="143.1" y="1461" width="95.2" height="15.0" fill="rgb(217,42,12)" rx="2" ry="2" />
<text  x="146.12" y="1471.5" >entry_SYSCA..</text>
</g>
<g >
<title>nf_nat_ipv4_local_fn (10,192,119 samples, 0.01%)</title><rect x="255.7" y="1269" width="0.1" height="15.0" fill="rgb(211,104,52)" rx="2" ry="2" />
<text  x="258.65" y="1279.5" ></text>
</g>
<g >
<title>ksys_read (1,554,104,720 samples, 1.74%)</title><rect x="724.2" y="1461" width="20.6" height="15.0" fill="rgb(220,216,8)" rx="2" ry="2" />
<text  x="727.25" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="965" width="6.5" height="15.0" fill="rgb(222,209,14)" rx="2" ry="2" />
<text  x="103.13" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="789" width="6.5" height="15.0" fill="rgb(224,131,37)" rx="2" ry="2" />
<text  x="103.13" y="799.5" ></text>
</g>
<g >
<title>tick_sched_timer (12,719,814 samples, 0.01%)</title><rect x="639.4" y="1237" width="0.2" height="15.0" fill="rgb(246,178,2)" rx="2" ry="2" />
<text  x="642.38" y="1247.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (15,824,098 samples, 0.02%)</title><rect x="52.3" y="1637" width="0.2" height="15.0" fill="rgb(223,35,22)" rx="2" ry="2" />
<text  x="55.30" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1045" width="0.9" height="15.0" fill="rgb(212,24,37)" rx="2" ry="2" />
<text  x="134.54" y="1055.5" ></text>
</g>
<g >
<title>generic_make_request (342,384,736 samples, 0.38%)</title><rect x="33.8" y="1461" width="4.5" height="15.0" fill="rgb(225,108,39)" rx="2" ry="2" />
<text  x="36.78" y="1471.5" ></text>
</g>
<g >
<title>rehashtab (52,156,315 samples, 0.06%)</title><rect x="1098.7" y="1509" width="0.7" height="15.0" fill="rgb(236,86,41)" rx="2" ry="2" />
<text  x="1101.74" y="1519.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;Watcher*, Watcher*, std::allocator&lt;Watcher*&gt;, std::__detail::_Identity, std::equal_to&lt;Watcher*&gt;, std::hash&lt;Watcher*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_node (10,944,466 samples, 0.01%)</title><rect x="92.9" y="1605" width="0.1" height="15.0" fill="rgb(241,189,23)" rx="2" ry="2" />
<text  x="95.90" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1285" width="0.4" height="15.0" fill="rgb(239,2,9)" rx="2" ry="2" />
<text  x="56.54" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,915,307 samples, 0.01%)</title><rect x="72.1" y="645" width="0.1" height="15.0" fill="rgb(211,8,33)" rx="2" ry="2" />
<text  x="75.07" y="655.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (9,282,896 samples, 0.01%)</title><rect x="1187.0" y="1509" width="0.1" height="15.0" fill="rgb(242,119,44)" rx="2" ry="2" />
<text  x="1189.99" y="1519.5" ></text>
</g>
<g >
<title>page_poisoning_enabled (9,355,970 samples, 0.01%)</title><rect x="201.8" y="1189" width="0.2" height="15.0" fill="rgb(219,119,50)" rx="2" ry="2" />
<text  x="204.85" y="1199.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (10,480,295 samples, 0.01%)</title><rect x="40.3" y="1525" width="0.1" height="15.0" fill="rgb(234,192,13)" rx="2" ry="2" />
<text  x="43.29" y="1535.5" ></text>
</g>
<g >
<title>__vfs_read (27,200,197 samples, 0.03%)</title><rect x="14.5" y="1525" width="0.4" height="15.0" fill="rgb(208,115,11)" rx="2" ry="2" />
<text  x="17.53" y="1535.5" ></text>
</g>
<g >
<title>process_backlog (2,438,494,482 samples, 2.73%)</title><rect x="1143.6" y="1061" width="32.2" height="15.0" fill="rgb(228,61,43)" rx="2" ry="2" />
<text  x="1146.57" y="1071.5" >pr..</text>
</g>
<g >
<title>new_slab (17,054,567 samples, 0.02%)</title><rect x="33.0" y="1429" width="0.2" height="15.0" fill="rgb(228,178,21)" rx="2" ry="2" />
<text  x="35.99" y="1439.5" ></text>
</g>
<g >
<title>dev_queue_xmit (321,532,836 samples, 0.36%)</title><rect x="1176.2" y="1141" width="4.2" height="15.0" fill="rgb(224,174,48)" rx="2" ry="2" />
<text  x="1179.16" y="1151.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (35,568,533 samples, 0.04%)</title><rect x="229.2" y="1253" width="0.4" height="15.0" fill="rgb(254,168,21)" rx="2" ry="2" />
<text  x="232.16" y="1263.5" ></text>
</g>
<g >
<title>skb_release_data (31,652,083 samples, 0.04%)</title><rect x="520.0" y="1381" width="0.5" height="15.0" fill="rgb(209,38,52)" rx="2" ry="2" />
<text  x="523.05" y="1391.5" ></text>
</g>
<g >
<title>netif_rx (37,181,168 samples, 0.04%)</title><rect x="1178.3" y="949" width="0.5" height="15.0" fill="rgb(253,77,53)" rx="2" ry="2" />
<text  x="1181.30" y="959.5" ></text>
</g>
<g >
<title>irq_exit (8,757,927 samples, 0.01%)</title><rect x="987.1" y="1477" width="0.2" height="15.0" fill="rgb(223,75,15)" rx="2" ry="2" />
<text  x="990.14" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1253" width="18.3" height="15.0" fill="rgb(253,168,39)" rx="2" ry="2" />
<text  x="113.16" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1013" width="1.4" height="15.0" fill="rgb(227,164,49)" rx="2" ry="2" />
<text  x="100.15" y="1023.5" ></text>
</g>
<g >
<title>tag_pages_for_writeback (7,565,359 samples, 0.01%)</title><rect x="40.0" y="1525" width="0.1" height="15.0" fill="rgb(209,92,22)" rx="2" ry="2" />
<text  x="43.05" y="1535.5" ></text>
</g>
<g >
<title>tick_do_broadcast (452,882,472 samples, 0.51%)</title><rect x="643.9" y="1349" width="6.0" height="15.0" fill="rgb(222,189,49)" rx="2" ry="2" />
<text  x="646.87" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1477" width="0.3" height="15.0" fill="rgb(240,46,38)" rx="2" ry="2" />
<text  x="102.79" y="1487.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (13,512,977 samples, 0.02%)</title><rect x="74.1" y="773" width="0.2" height="15.0" fill="rgb(247,8,0)" rx="2" ry="2" />
<text  x="77.11" y="783.5" ></text>
</g>
<g >
<title>lj_BC_CALLT (15,519,320 samples, 0.02%)</title><rect x="755.2" y="1541" width="0.2" height="15.0" fill="rgb(213,93,30)" rx="2" ry="2" />
<text  x="758.20" y="1551.5" ></text>
</g>
<g >
<title>psi_task_change (12,522,104 samples, 0.01%)</title><rect x="135.4" y="1397" width="0.1" height="15.0" fill="rgb(206,73,24)" rx="2" ry="2" />
<text  x="138.37" y="1407.5" ></text>
</g>
<g >
<title>ip_vs_conn_put (36,299,848 samples, 0.04%)</title><rect x="1161.6" y="901" width="0.5" height="15.0" fill="rgb(248,202,24)" rx="2" ry="2" />
<text  x="1164.59" y="911.5" ></text>
</g>
<g >
<title>readproc (41,660,760 samples, 0.05%)</title><rect x="240.5" y="1605" width="0.6" height="15.0" fill="rgb(242,37,35)" rx="2" ry="2" />
<text  x="243.54" y="1615.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1,638,523,283 samples, 1.84%)</title><rect x="540.0" y="1413" width="21.6" height="15.0" fill="rgb(235,168,45)" rx="2" ry="2" />
<text  x="542.97" y="1423.5" >_..</text>
</g>
<g >
<title>account_page_dirtied (118,688,216 samples, 0.13%)</title><rect x="221.4" y="1221" width="1.6" height="15.0" fill="rgb(232,202,17)" rx="2" ry="2" />
<text  x="224.41" y="1231.5" ></text>
</g>
<g >
<title>ip_output (171,803,930 samples, 0.19%)</title><rect x="562.4" y="1349" width="2.3" height="15.0" fill="rgb(225,4,13)" rx="2" ry="2" />
<text  x="565.40" y="1359.5" ></text>
</g>
<g >
<title>wrk (40,500,161,868 samples, 45.42%)</title><rect x="654.1" y="1669" width="535.9" height="15.0" fill="rgb(212,83,0)" rx="2" ry="2" />
<text  x="657.07" y="1679.5" >wrk</text>
</g>
<g >
<title>nf_nat_ipv4_manip_pkt (13,799,684 samples, 0.02%)</title><rect x="1164.7" y="773" width="0.2" height="15.0" fill="rgb(223,200,47)" rx="2" ry="2" />
<text  x="1167.68" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="549" width="0.4" height="15.0" fill="rgb(251,32,21)" rx="2" ry="2" />
<text  x="56.88" y="559.5" ></text>
</g>
<g >
<title>nf_conntrack_in (7,881,729 samples, 0.01%)</title><rect x="43.8" y="1461" width="0.1" height="15.0" fill="rgb(253,70,15)" rx="2" ry="2" />
<text  x="46.80" y="1471.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (13,859,136 samples, 0.02%)</title><rect x="219.8" y="1237" width="0.2" height="15.0" fill="rgb(245,55,22)" rx="2" ry="2" />
<text  x="222.82" y="1247.5" ></text>
</g>
<g >
<title>operator new (18,375,291 samples, 0.02%)</title><rect x="84.7" y="1365" width="0.2" height="15.0" fill="rgb(212,52,27)" rx="2" ry="2" />
<text  x="87.70" y="1375.5" ></text>
</g>
<g >
<title>ipt_do_table (17,155,870 samples, 0.02%)</title><rect x="531.1" y="1317" width="0.2" height="15.0" fill="rgb(222,109,30)" rx="2" ry="2" />
<text  x="534.11" y="1327.5" ></text>
</g>
<g >
<title>fsnotify (7,711,206 samples, 0.01%)</title><rect x="1186.2" y="1429" width="0.1" height="15.0" fill="rgb(216,138,9)" rx="2" ry="2" />
<text  x="1189.21" y="1439.5" ></text>
</g>
<g >
<title>dbs_irq_work (23,432,542 samples, 0.03%)</title><rect x="591.5" y="1477" width="0.3" height="15.0" fill="rgb(233,168,8)" rx="2" ry="2" />
<text  x="594.50" y="1487.5" ></text>
</g>
<g >
<title>poll_schedule_timeout.constprop.0 (110,526,680 samples, 0.12%)</title><rect x="134.4" y="1493" width="1.5" height="15.0" fill="rgb(251,99,46)" rx="2" ry="2" />
<text  x="137.41" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,582,576,871 samples, 1.77%)</title><rect x="59.5" y="1173" width="20.9" height="15.0" fill="rgb(216,97,24)" rx="2" ry="2" />
<text  x="62.47" y="1183.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (13,989,195 samples, 0.02%)</title><rect x="205.5" y="1221" width="0.2" height="15.0" fill="rgb(239,22,32)" rx="2" ry="2" />
<text  x="208.50" y="1231.5" ></text>
</g>
<g >
<title>delayed_initial_connect (14,303,553 samples, 0.02%)</title><rect x="700.9" y="1573" width="0.2" height="15.0" fill="rgb(237,11,31)" rx="2" ry="2" />
<text  x="703.92" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="357" width="3.6" height="15.0" fill="rgb(249,19,13)" rx="2" ry="2" />
<text  x="109.59" y="367.5" ></text>
</g>
<g >
<title>inet_addr_type_dev_table (64,411,272 samples, 0.07%)</title><rect x="1138.1" y="1141" width="0.9" height="15.0" fill="rgb(217,13,29)" rx="2" ry="2" />
<text  x="1141.12" y="1151.5" ></text>
</g>
<g >
<title>seq_read (25,918,388 samples, 0.03%)</title><rect x="14.5" y="1493" width="0.4" height="15.0" fill="rgb(217,204,36)" rx="2" ry="2" />
<text  x="17.54" y="1503.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (7,707,795 samples, 0.01%)</title><rect x="92.4" y="1605" width="0.1" height="15.0" fill="rgb(207,27,23)" rx="2" ry="2" />
<text  x="95.40" y="1615.5" ></text>
</g>
<g >
<title>nf_xfrm_me_harder (13,545,825 samples, 0.02%)</title><rect x="1182.3" y="1157" width="0.2" height="15.0" fill="rgb(228,1,51)" rx="2" ry="2" />
<text  x="1185.32" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="549" width="0.3" height="15.0" fill="rgb(222,51,30)" rx="2" ry="2" />
<text  x="102.79" y="559.5" ></text>
</g>
<g >
<title>sh (9,909,264 samples, 0.01%)</title><rect x="241.8" y="1669" width="0.1" height="15.0" fill="rgb(237,178,27)" rx="2" ry="2" />
<text  x="244.80" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="213" width="0.4" height="15.0" fill="rgb(211,228,21)" rx="2" ry="2" />
<text  x="56.54" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="645" width="3.0" height="15.0" fill="rgb(234,200,41)" rx="2" ry="2" />
<text  x="131.55" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1061" width="18.3" height="15.0" fill="rgb(206,227,9)" rx="2" ry="2" />
<text  x="113.16" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="773" width="0.4" height="15.0" fill="rgb(220,189,25)" rx="2" ry="2" />
<text  x="56.88" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="389" width="0.9" height="15.0" fill="rgb(239,209,53)" rx="2" ry="2" />
<text  x="134.54" y="399.5" ></text>
</g>
<g >
<title>ip_output (8,147,837 samples, 0.01%)</title><rect x="701.0" y="1333" width="0.1" height="15.0" fill="rgb(224,180,36)" rx="2" ry="2" />
<text  x="703.96" y="1343.5" ></text>
</g>
<g >
<title>irq_exit (17,066,837 samples, 0.02%)</title><rect x="899.0" y="1445" width="0.2" height="15.0" fill="rgb(228,52,10)" rx="2" ry="2" />
<text  x="902.00" y="1455.5" ></text>
</g>
<g >
<title>lj_BC_CAT (17,528,443,428 samples, 19.66%)</title><rect x="755.4" y="1541" width="232.0" height="15.0" fill="rgb(209,131,12)" rx="2" ry="2" />
<text  x="758.40" y="1551.5" >lj_BC_CAT</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1109" width="0.3" height="15.0" fill="rgb(233,160,54)" rx="2" ry="2" />
<text  x="102.79" y="1119.5" ></text>
</g>
<g >
<title>lj_str_new (10,171,942 samples, 0.01%)</title><rect x="683.8" y="1605" width="0.1" height="15.0" fill="rgb(240,125,6)" rx="2" ry="2" />
<text  x="686.79" y="1615.5" ></text>
</g>
<g >
<title>ksoftirqd/2 (11,059,992 samples, 0.01%)</title><rect x="40.7" y="1669" width="0.2" height="15.0" fill="rgb(227,196,7)" rx="2" ry="2" />
<text  x="43.75" y="1679.5" ></text>
</g>
<g >
<title>up_write (13,731,567 samples, 0.02%)</title><rect x="237.1" y="1301" width="0.1" height="15.0" fill="rgb(234,69,0)" rx="2" ry="2" />
<text  x="240.05" y="1311.5" ></text>
</g>
<g >
<title>try_to_wake_up (43,662,702 samples, 0.05%)</title><rect x="555.9" y="901" width="0.6" height="15.0" fill="rgb(211,161,36)" rx="2" ry="2" />
<text  x="558.92" y="911.5" ></text>
</g>
<g >
<title>_int_free (11,309,700 samples, 0.01%)</title><rect x="78.7" y="1045" width="0.1" height="15.0" fill="rgb(251,57,31)" rx="2" ry="2" />
<text  x="81.66" y="1055.5" ></text>
</g>
<g >
<title>gc_onestep (16,871,122 samples, 0.02%)</title><rect x="684.8" y="1557" width="0.2" height="15.0" fill="rgb(225,137,14)" rx="2" ry="2" />
<text  x="687.83" y="1567.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (110,692,547 samples, 0.12%)</title><rect x="1177.6" y="997" width="1.5" height="15.0" fill="rgb(216,153,22)" rx="2" ry="2" />
<text  x="1180.59" y="1007.5" ></text>
</g>
<g >
<title>dev_gro_receive (152,248,072 samples, 0.17%)</title><rect x="522.7" y="1397" width="2.0" height="15.0" fill="rgb(252,121,16)" rx="2" ry="2" />
<text  x="525.70" y="1407.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (44,292,218 samples, 0.05%)</title><rect x="584.5" y="1525" width="0.6" height="15.0" fill="rgb(244,63,54)" rx="2" ry="2" />
<text  x="587.53" y="1535.5" ></text>
</g>
<g >
<title>file_update_time (31,425,318 samples, 0.04%)</title><rect x="147.9" y="1317" width="0.5" height="15.0" fill="rgb(206,224,36)" rx="2" ry="2" />
<text  x="150.95" y="1327.5" ></text>
</g>
<g >
<title>pm_qos_request (24,794,961 samples, 0.03%)</title><rect x="583.7" y="1557" width="0.3" height="15.0" fill="rgb(219,49,35)" rx="2" ry="2" />
<text  x="586.68" y="1567.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (22,609,659 samples, 0.03%)</title><rect x="509.5" y="1493" width="0.3" height="15.0" fill="rgb(220,24,30)" rx="2" ry="2" />
<text  x="512.54" y="1503.5" ></text>
</g>
<g >
<title>dev_queue_xmit (57,039,555 samples, 0.06%)</title><rect x="543.7" y="949" width="0.7" height="15.0" fill="rgb(242,214,31)" rx="2" ry="2" />
<text  x="546.68" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1061" width="3.0" height="15.0" fill="rgb(217,66,30)" rx="2" ry="2" />
<text  x="131.55" y="1071.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (55,158,770 samples, 0.06%)</title><rect x="735.0" y="549" width="0.7" height="15.0" fill="rgb(244,115,17)" rx="2" ry="2" />
<text  x="738.01" y="559.5" ></text>
</g>
<g >
<title>blk_rq_map_sg (42,043,261 samples, 0.05%)</title><rect x="36.1" y="1221" width="0.6" height="15.0" fill="rgb(222,122,1)" rx="2" ry="2" />
<text  x="39.12" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="213" width="1.4" height="15.0" fill="rgb(243,201,23)" rx="2" ry="2" />
<text  x="100.15" y="223.5" ></text>
</g>
<g >
<title>schedule_idle (48,287,274 samples, 0.05%)</title><rect x="653.0" y="1525" width="0.6" height="15.0" fill="rgb(235,86,18)" rx="2" ry="2" />
<text  x="655.97" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1381" width="18.3" height="15.0" fill="rgb(243,89,26)" rx="2" ry="2" />
<text  x="113.16" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="389" width="6.5" height="15.0" fill="rgb(228,125,33)" rx="2" ry="2" />
<text  x="103.13" y="399.5" ></text>
</g>
<g >
<title>skb_release_all (54,497,863 samples, 0.06%)</title><rect x="726.4" y="1317" width="0.7" height="15.0" fill="rgb(232,107,7)" rx="2" ry="2" />
<text  x="729.41" y="1327.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (47,686,075 samples, 0.05%)</title><rect x="550.0" y="869" width="0.6" height="15.0" fill="rgb(233,148,49)" rx="2" ry="2" />
<text  x="552.98" y="879.5" ></text>
</g>
<g >
<title>kmem_cache_free (7,922,085 samples, 0.01%)</title><rect x="519.9" y="1381" width="0.1" height="15.0" fill="rgb(211,111,0)" rx="2" ry="2" />
<text  x="522.92" y="1391.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (68,672,313 samples, 0.08%)</title><rect x="239.1" y="1365" width="0.9" height="15.0" fill="rgb(238,220,45)" rx="2" ry="2" />
<text  x="242.06" y="1375.5" ></text>
</g>
<g >
<title>load_balance (43,786,979 samples, 0.05%)</title><rect x="253.0" y="1445" width="0.6" height="15.0" fill="rgb(208,15,5)" rx="2" ry="2" />
<text  x="255.97" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (8,208,817 samples, 0.01%)</title><rect x="66.3" y="341" width="0.1" height="15.0" fill="rgb(221,0,36)" rx="2" ry="2" />
<text  x="69.31" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1189" width="3.6" height="15.0" fill="rgb(228,24,28)" rx="2" ry="2" />
<text  x="109.59" y="1199.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (21,609,438 samples, 0.02%)</title><rect x="889.7" y="1397" width="0.3" height="15.0" fill="rgb(217,4,34)" rx="2" ry="2" />
<text  x="892.68" y="1407.5" ></text>
</g>
<g >
<title>intel_pmu_disable_all (10,124,739 samples, 0.01%)</title><rect x="590.5" y="1493" width="0.2" height="15.0" fill="rgb(248,219,53)" rx="2" ry="2" />
<text  x="593.53" y="1503.5" ></text>
</g>
<g >
<title>swapper (31,094,704,185 samples, 34.87%)</title><rect x="242.4" y="1669" width="411.5" height="15.0" fill="rgb(240,48,6)" rx="2" ry="2" />
<text  x="245.42" y="1679.5" >swapper</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="933" width="0.9" height="15.0" fill="rgb(233,161,20)" rx="2" ry="2" />
<text  x="134.54" y="943.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (15,243,791 samples, 0.02%)</title><rect x="98.1" y="165" width="0.2" height="15.0" fill="rgb(227,108,46)" rx="2" ry="2" />
<text  x="101.08" y="175.5" ></text>
</g>
<g >
<title>__ip_local_out (108,669,703 samples, 0.12%)</title><rect x="548.3" y="965" width="1.4" height="15.0" fill="rgb(239,112,12)" rx="2" ry="2" />
<text  x="551.27" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="373" width="1.4" height="15.0" fill="rgb(247,75,45)" rx="2" ry="2" />
<text  x="100.15" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="245" width="3.0" height="15.0" fill="rgb(217,162,51)" rx="2" ry="2" />
<text  x="131.55" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="181" width="0.8" height="15.0" fill="rgb(227,214,24)" rx="2" ry="2" />
<text  x="101.56" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1349" width="0.4" height="15.0" fill="rgb(248,132,1)" rx="2" ry="2" />
<text  x="56.88" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="869" width="0.4" height="15.0" fill="rgb(230,137,51)" rx="2" ry="2" />
<text  x="56.54" y="879.5" ></text>
</g>
<g >
<title>__GI___poll (127,983,891 samples, 0.14%)</title><rect x="139.3" y="1573" width="1.7" height="15.0" fill="rgb(241,62,38)" rx="2" ry="2" />
<text  x="142.31" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1237" width="1.4" height="15.0" fill="rgb(224,170,40)" rx="2" ry="2" />
<text  x="100.15" y="1247.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (846,843,884 samples, 0.95%)</title><rect x="702.5" y="1525" width="11.2" height="15.0" fill="rgb(239,201,49)" rx="2" ry="2" />
<text  x="705.51" y="1535.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (122,794,264 samples, 0.14%)</title><rect x="1170.7" y="949" width="1.6" height="15.0" fill="rgb(207,192,42)" rx="2" ry="2" />
<text  x="1173.68" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (259,239,129 samples, 0.29%)</title><rect x="106.6" y="229" width="3.4" height="15.0" fill="rgb(229,43,47)" rx="2" ry="2" />
<text  x="109.59" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="853" width="6.5" height="15.0" fill="rgb(243,128,34)" rx="2" ry="2" />
<text  x="103.13" y="863.5" ></text>
</g>
<g >
<title>seq_read (13,214,025 samples, 0.01%)</title><rect x="240.7" y="1445" width="0.2" height="15.0" fill="rgb(239,7,47)" rx="2" ry="2" />
<text  x="243.69" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="949" width="18.3" height="15.0" fill="rgb(229,84,11)" rx="2" ry="2" />
<text  x="113.16" y="959.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ZlibContext::DoThreadPoolWork (7,838,315 samples, 0.01%)</title><rect x="137.4" y="1605" width="0.1" height="15.0" fill="rgb(218,194,23)" rx="2" ry="2" />
<text  x="140.37" y="1615.5" ></text>
</g>
<g >
<title>ip_output (102,685,068 samples, 0.12%)</title><rect x="549.7" y="965" width="1.4" height="15.0" fill="rgb(237,128,34)" rx="2" ry="2" />
<text  x="552.71" y="975.5" ></text>
</g>
<g >
<title>gc_sweep (37,830,809 samples, 0.04%)</title><rect x="1097.5" y="1493" width="0.5" height="15.0" fill="rgb(249,167,52)" rx="2" ry="2" />
<text  x="1100.51" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="405" width="3.0" height="15.0" fill="rgb(228,72,50)" rx="2" ry="2" />
<text  x="131.55" y="415.5" ></text>
</g>
<g >
<title>tcp_send_ack (265,543,669 samples, 0.30%)</title><rect x="547.7" y="1061" width="3.5" height="15.0" fill="rgb(223,96,29)" rx="2" ry="2" />
<text  x="550.70" y="1071.5" ></text>
</g>
<g >
<title>ip_local_out (445,525,554 samples, 0.50%)</title><rect x="1150.8" y="629" width="5.9" height="15.0" fill="rgb(220,54,42)" rx="2" ry="2" />
<text  x="1153.83" y="639.5" ></text>
</g>
<g >
<title>nf_hook_slow (25,462,960 samples, 0.03%)</title><rect x="41.7" y="1381" width="0.4" height="15.0" fill="rgb(253,128,6)" rx="2" ry="2" />
<text  x="44.72" y="1391.5" ></text>
</g>
<g >
<title>tcp_v4_connect (12,086,191 samples, 0.01%)</title><rect x="700.9" y="1429" width="0.2" height="15.0" fill="rgb(246,161,20)" rx="2" ry="2" />
<text  x="703.93" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (8,742,491 samples, 0.01%)</title><rect x="132.2" y="181" width="0.2" height="15.0" fill="rgb(228,124,31)" rx="2" ry="2" />
<text  x="135.24" y="191.5" ></text>
</g>
<g >
<title>from_kprojid (8,179,625 samples, 0.01%)</title><rect x="174.5" y="1093" width="0.1" height="15.0" fill="rgb(243,163,22)" rx="2" ry="2" />
<text  x="177.50" y="1103.5" ></text>
</g>
<g >
<title>do_softirq.part.0 (2,492,224,593 samples, 2.79%)</title><rect x="1142.9" y="1125" width="33.0" height="15.0" fill="rgb(215,127,4)" rx="2" ry="2" />
<text  x="1145.93" y="1135.5" >do..</text>
</g>
<g >
<title>start_thread (9,585,215 samples, 0.01%)</title><rect x="47.7" y="1637" width="0.2" height="15.0" fill="rgb(223,12,21)" rx="2" ry="2" />
<text  x="50.74" y="1647.5" ></text>
</g>
<g >
<title>lj_BC_TGETS (1,252,806,452 samples, 1.40%)</title><rect x="1074.0" y="1541" width="16.6" height="15.0" fill="rgb(209,136,20)" rx="2" ry="2" />
<text  x="1077.00" y="1551.5" ></text>
</g>
<g >
<title>update_sd_lb_stats (13,534,966 samples, 0.02%)</title><rect x="712.1" y="1349" width="0.2" height="15.0" fill="rgb(229,71,26)" rx="2" ry="2" />
<text  x="715.09" y="1359.5" ></text>
</g>
<g >
<title>napi_complete_done (440,679,819 samples, 0.49%)</title><rect x="533.3" y="1445" width="5.8" height="15.0" fill="rgb(247,225,47)" rx="2" ry="2" />
<text  x="536.32" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1381" width="3.0" height="15.0" fill="rgb(212,150,52)" rx="2" ry="2" />
<text  x="131.55" y="1391.5" ></text>
</g>
<g >
<title>memset (8,472,104 samples, 0.01%)</title><rect x="1129.4" y="1269" width="0.1" height="15.0" fill="rgb(214,30,4)" rx="2" ry="2" />
<text  x="1132.36" y="1279.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (19,848,351 samples, 0.02%)</title><rect x="573.0" y="1349" width="0.3" height="15.0" fill="rgb(221,131,32)" rx="2" ry="2" />
<text  x="576.04" y="1359.5" ></text>
</g>
<g >
<title>__free_pages (16,758,278 samples, 0.02%)</title><rect x="514.1" y="1173" width="0.3" height="15.0" fill="rgb(235,172,17)" rx="2" ry="2" />
<text  x="517.13" y="1183.5" ></text>
</g>
<g >
<title>blk_mq_sched_insert_requests (71,027,149 samples, 0.08%)</title><rect x="35.9" y="1397" width="0.9" height="15.0" fill="rgb(226,111,18)" rx="2" ry="2" />
<text  x="38.89" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="805" width="6.5" height="15.0" fill="rgb(227,211,20)" rx="2" ry="2" />
<text  x="103.13" y="815.5" ></text>
</g>
<g >
<title>dev_queue_xmit (19,075,155 samples, 0.02%)</title><rect x="1163.9" y="805" width="0.3" height="15.0" fill="rgb(231,180,30)" rx="2" ry="2" />
<text  x="1166.93" y="815.5" ></text>
</g>
<g >
<title>setup_pre_routing (7,581,604 samples, 0.01%)</title><rect x="1158.8" y="965" width="0.1" height="15.0" fill="rgb(209,179,16)" rx="2" ry="2" />
<text  x="1161.83" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (8,669,236 samples, 0.01%)</title><rect x="62.8" y="197" width="0.1" height="15.0" fill="rgb(215,134,16)" rx="2" ry="2" />
<text  x="65.80" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1221" width="0.4" height="15.0" fill="rgb(248,174,42)" rx="2" ry="2" />
<text  x="56.54" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (87,894,289 samples, 0.10%)</title><rect x="66.4" y="421" width="1.2" height="15.0" fill="rgb(233,25,33)" rx="2" ry="2" />
<text  x="69.44" y="431.5" ></text>
</g>
<g >
<title>netif_rx_internal (13,339,088 samples, 0.01%)</title><rect x="563.3" y="1205" width="0.2" height="15.0" fill="rgb(227,57,46)" rx="2" ry="2" />
<text  x="566.33" y="1215.5" ></text>
</g>
<g >
<title>ext4_writepage (14,558,898 samples, 0.02%)</title><rect x="39.5" y="1525" width="0.2" height="15.0" fill="rgb(246,195,8)" rx="2" ry="2" />
<text  x="42.50" y="1535.5" ></text>
</g>
<g >
<title>skb_csum_hwoffload_help (50,201,189 samples, 0.06%)</title><rect x="1155.5" y="469" width="0.7" height="15.0" fill="rgb(237,68,54)" rx="2" ry="2" />
<text  x="1158.53" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (12,086,191 samples, 0.01%)</title><rect x="700.9" y="1509" width="0.2" height="15.0" fill="rgb(213,11,29)" rx="2" ry="2" />
<text  x="703.93" y="1519.5" ></text>
</g>
<g >
<title>___slab_alloc (433,468,169 samples, 0.49%)</title><rect x="22.4" y="1381" width="5.7" height="15.0" fill="rgb(210,207,30)" rx="2" ry="2" />
<text  x="25.40" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="1253" width="6.5" height="15.0" fill="rgb(248,78,4)" rx="2" ry="2" />
<text  x="103.13" y="1263.5" ></text>
</g>
<g >
<title>br_dev_queue_push_xmit (11,549,970 samples, 0.01%)</title><rect x="742.6" y="1029" width="0.1" height="15.0" fill="rgb(223,154,6)" rx="2" ry="2" />
<text  x="745.59" y="1039.5" ></text>
</g>
<g >
<title>expand_prompt_string (9,130,931 samples, 0.01%)</title><rect x="10.8" y="1029" width="0.1" height="15.0" fill="rgb(206,226,17)" rx="2" ry="2" />
<text  x="13.80" y="1039.5" ></text>
</g>
<g >
<title>nf_hook_slow (876,991,743 samples, 0.98%)</title><rect x="1146.8" y="885" width="11.6" height="15.0" fill="rgb(223,31,25)" rx="2" ry="2" />
<text  x="1149.76" y="895.5" ></text>
</g>
<g >
<title>lj_mem_realloc (8,873,634 samples, 0.01%)</title><rect x="685.5" y="1557" width="0.1" height="15.0" fill="rgb(228,219,50)" rx="2" ry="2" />
<text  x="688.51" y="1567.5" ></text>
</g>
<g >
<title>nf_nat_packet (11,543,200 samples, 0.01%)</title><rect x="557.7" y="1093" width="0.2" height="15.0" fill="rgb(241,175,5)" rx="2" ry="2" />
<text  x="560.71" y="1103.5" ></text>
</g>
<g >
<title>br_nf_dev_queue_xmit (194,916,951 samples, 0.22%)</title><rect x="542.3" y="1173" width="2.6" height="15.0" fill="rgb(242,98,1)" rx="2" ry="2" />
<text  x="545.27" y="1183.5" ></text>
</g>
<g >
<title>node::NodeMainInstance::Run (25,996,559 samples, 0.03%)</title><rect x="137.8" y="1605" width="0.4" height="15.0" fill="rgb(249,188,21)" rx="2" ry="2" />
<text  x="140.81" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1205" width="0.4" height="15.0" fill="rgb(241,100,24)" rx="2" ry="2" />
<text  x="56.54" y="1215.5" ></text>
</g>
<g >
<title>__thread_run (9,585,215 samples, 0.01%)</title><rect x="47.7" y="1621" width="0.2" height="15.0" fill="rgb(207,165,47)" rx="2" ry="2" />
<text  x="50.74" y="1631.5" ></text>
</g>
<g >
<title>__schedule (9,066,419 samples, 0.01%)</title><rect x="241.3" y="1573" width="0.1" height="15.0" fill="rgb(214,146,52)" rx="2" ry="2" />
<text  x="244.33" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="405" width="0.9" height="15.0" fill="rgb(248,161,7)" rx="2" ry="2" />
<text  x="134.54" y="415.5" ></text>
</g>
<g >
<title>nf_hook_slow (63,624,241 samples, 0.07%)</title><rect x="740.6" y="1013" width="0.9" height="15.0" fill="rgb(221,222,32)" rx="2" ry="2" />
<text  x="743.61" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1045" width="1.4" height="15.0" fill="rgb(217,197,36)" rx="2" ry="2" />
<text  x="100.15" y="1055.5" ></text>
</g>
<g >
<title>__alloc_skb (32,480,939 samples, 0.04%)</title><rect x="728.6" y="1285" width="0.4" height="15.0" fill="rgb(246,6,15)" rx="2" ry="2" />
<text  x="731.55" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="629" width="0.9" height="15.0" fill="rgb(234,72,28)" rx="2" ry="2" />
<text  x="134.54" y="639.5" ></text>
</g>
<g >
<title>__vfprintf_internal (145,949,618 samples, 0.16%)</title><rect x="678.8" y="1589" width="1.9" height="15.0" fill="rgb(249,91,26)" rx="2" ry="2" />
<text  x="681.80" y="1599.5" ></text>
</g>
<g >
<title>operator new (12,951,584 samples, 0.01%)</title><rect x="76.5" y="917" width="0.2" height="15.0" fill="rgb(230,10,27)" rx="2" ry="2" />
<text  x="79.51" y="927.5" ></text>
</g>
<g >
<title>xas_set_mark (8,509,307 samples, 0.01%)</title><rect x="223.1" y="1221" width="0.1" height="15.0" fill="rgb(236,197,22)" rx="2" ry="2" />
<text  x="226.07" y="1231.5" ></text>
</g>
<g >
<title>__netif_receive_skb (9,289,764 samples, 0.01%)</title><rect x="894.1" y="1365" width="0.1" height="15.0" fill="rgb(244,168,22)" rx="2" ry="2" />
<text  x="897.06" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (18,606,388 samples, 0.02%)</title><rect x="138.2" y="1653" width="0.2" height="15.0" fill="rgb(250,146,41)" rx="2" ry="2" />
<text  x="141.15" y="1663.5" ></text>
</g>
<g >
<title>memcmp (9,869,675 samples, 0.01%)</title><rect x="1146.4" y="901" width="0.2" height="15.0" fill="rgb(251,225,38)" rx="2" ry="2" />
<text  x="1149.43" y="911.5" ></text>
</g>
<g >
<title>__br_forward (34,120,655 samples, 0.04%)</title><rect x="251.2" y="1301" width="0.4" height="15.0" fill="rgb(213,78,48)" rx="2" ry="2" />
<text  x="254.17" y="1311.5" ></text>
</g>
<g >
<title>br_nf_pre_routing_finish (304,166,135 samples, 0.34%)</title><rect x="534.4" y="1333" width="4.0" height="15.0" fill="rgb(248,74,33)" rx="2" ry="2" />
<text  x="537.36" y="1343.5" ></text>
</g>
<g >
<title>dequeue_task_fair (19,794,762 samples, 0.02%)</title><rect x="140.3" y="1397" width="0.3" height="15.0" fill="rgb(246,25,46)" rx="2" ry="2" />
<text  x="143.34" y="1407.5" ></text>
</g>
<g >
<title>br_dev_queue_push_xmit (221,719,369 samples, 0.25%)</title><rect x="733.4" y="773" width="3.0" height="15.0" fill="rgb(229,120,39)" rx="2" ry="2" />
<text  x="736.43" y="783.5" ></text>
</g>
<g >
<title>ip_route_me_harder (74,589,585 samples, 0.08%)</title><rect x="565.6" y="1269" width="1.0" height="15.0" fill="rgb(207,152,2)" rx="2" ry="2" />
<text  x="568.65" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1493" width="1.4" height="15.0" fill="rgb(230,54,40)" rx="2" ry="2" />
<text  x="100.15" y="1503.5" ></text>
</g>
<g >
<title>vxlan_get_route (8,365,411 samples, 0.01%)</title><rect x="736.1" y="677" width="0.1" height="15.0" fill="rgb(241,40,37)" rx="2" ry="2" />
<text  x="739.13" y="687.5" ></text>
</g>
<g >
<title>nf_hook_slow (35,995,241 samples, 0.04%)</title><rect x="564.2" y="1333" width="0.4" height="15.0" fill="rgb(253,142,32)" rx="2" ry="2" />
<text  x="567.17" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="165" width="0.8" height="15.0" fill="rgb(247,33,45)" rx="2" ry="2" />
<text  x="101.56" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,376,539 samples, 0.03%)</title><rect x="132.5" y="1589" width="0.3" height="15.0" fill="rgb(237,97,15)" rx="2" ry="2" />
<text  x="135.49" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1365" width="1.4" height="15.0" fill="rgb(232,196,48)" rx="2" ry="2" />
<text  x="100.15" y="1375.5" ></text>
</g>
<g >
<title>ip_finish_output2 (833,162,463 samples, 0.93%)</title><rect x="731.8" y="1173" width="11.0" height="15.0" fill="rgb(223,199,39)" rx="2" ry="2" />
<text  x="734.82" y="1183.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (10,723,034 samples, 0.01%)</title><rect x="52.8" y="1621" width="0.2" height="15.0" fill="rgb(239,136,0)" rx="2" ry="2" />
<text  x="55.83" y="1631.5" ></text>
</g>
<g >
<title>_raw_spin_lock (24,534,468 samples, 0.03%)</title><rect x="506.2" y="1509" width="0.3" height="15.0" fill="rgb(209,66,3)" rx="2" ry="2" />
<text  x="509.18" y="1519.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (194,283,408 samples, 0.22%)</title><rect x="748.1" y="1525" width="2.6" height="15.0" fill="rgb(219,95,44)" rx="2" ry="2" />
<text  x="751.12" y="1535.5" ></text>
</g>
<g >
<title>lj_mem_realloc (12,817,163 samples, 0.01%)</title><rect x="894.2" y="1477" width="0.2" height="15.0" fill="rgb(229,20,27)" rx="2" ry="2" />
<text  x="897.24" y="1487.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (10,234,084 samples, 0.01%)</title><rect x="41.2" y="1461" width="0.1" height="15.0" fill="rgb(245,145,9)" rx="2" ry="2" />
<text  x="44.16" y="1471.5" ></text>
</g>
<g >
<title>local.runtime.epollwait.abi0 (12,293,948 samples, 0.01%)</title><rect x="12.7" y="1589" width="0.2" height="15.0" fill="rgb(242,137,26)" rx="2" ry="2" />
<text  x="15.70" y="1599.5" ></text>
</g>
<g >
<title>netif_rx (15,488,450 samples, 0.02%)</title><rect x="563.3" y="1221" width="0.2" height="15.0" fill="rgb(226,48,6)" rx="2" ry="2" />
<text  x="566.30" y="1231.5" ></text>
</g>
<g >
<title>do_syscall_64 (52,705,801 samples, 0.06%)</title><rect x="746.3" y="1509" width="0.7" height="15.0" fill="rgb(213,221,20)" rx="2" ry="2" />
<text  x="749.26" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1349" width="0.4" height="15.0" fill="rgb(215,59,3)" rx="2" ry="2" />
<text  x="56.54" y="1359.5" ></text>
</g>
<g >
<title>br_nf_forward_ip (187,944,784 samples, 0.21%)</title><rect x="535.6" y="1237" width="2.5" height="15.0" fill="rgb(234,74,37)" rx="2" ry="2" />
<text  x="538.60" y="1247.5" ></text>
</g>
<g >
<title>__default_send_IPI_dest_field (94,937,901 samples, 0.11%)</title><rect x="639.6" y="1221" width="1.3" height="15.0" fill="rgb(218,150,27)" rx="2" ry="2" />
<text  x="642.62" y="1231.5" ></text>
</g>
<g >
<title>mempool_alloc_slab (7,594,065 samples, 0.01%)</title><rect x="31.8" y="1461" width="0.1" height="15.0" fill="rgb(252,210,33)" rx="2" ry="2" />
<text  x="34.80" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="437" width="18.3" height="15.0" fill="rgb(215,66,8)" rx="2" ry="2" />
<text  x="113.16" y="447.5" ></text>
</g>
<g >
<title>br_forward_finish (23,997,224 samples, 0.03%)</title><rect x="41.7" y="1317" width="0.3" height="15.0" fill="rgb(246,64,10)" rx="2" ry="2" />
<text  x="44.73" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="661" width="1.4" height="15.0" fill="rgb(228,4,3)" rx="2" ry="2" />
<text  x="100.15" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="629" width="18.3" height="15.0" fill="rgb(206,70,44)" rx="2" ry="2" />
<text  x="113.16" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1221" width="3.0" height="15.0" fill="rgb(225,141,40)" rx="2" ry="2" />
<text  x="131.55" y="1231.5" ></text>
</g>
<g >
<title>net_rx_action (2,465,230,087 samples, 2.76%)</title><rect x="1143.2" y="1077" width="32.6" height="15.0" fill="rgb(229,205,37)" rx="2" ry="2" />
<text  x="1146.21" y="1087.5" >ne..</text>
</g>
<g >
<title>perf (7,662,001,862 samples, 8.59%)</title><rect x="139.1" y="1669" width="101.4" height="15.0" fill="rgb(228,178,2)" rx="2" ry="2" />
<text  x="142.08" y="1679.5" >perf</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="437" width="3.0" height="15.0" fill="rgb(243,84,20)" rx="2" ry="2" />
<text  x="131.55" y="447.5" ></text>
</g>
<g >
<title>ip_route_input_rcu (81,172,184 samples, 0.09%)</title><rect x="570.3" y="1349" width="1.0" height="15.0" fill="rgb(211,186,33)" rx="2" ry="2" />
<text  x="573.26" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (9,517,480 samples, 0.01%)</title><rect x="663.2" y="1605" width="0.1" height="15.0" fill="rgb(234,212,37)" rx="2" ry="2" />
<text  x="666.17" y="1615.5" ></text>
</g>
<g >
<title>ip_local_deliver (14,431,495 samples, 0.02%)</title><rect x="43.4" y="1477" width="0.2" height="15.0" fill="rgb(254,170,52)" rx="2" ry="2" />
<text  x="46.44" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1589" width="3.6" height="15.0" fill="rgb(235,111,8)" rx="2" ry="2" />
<text  x="109.59" y="1599.5" ></text>
</g>
<g >
<title>neigh_resolve_output (30,164,218 samples, 0.03%)</title><rect x="742.4" y="1157" width="0.4" height="15.0" fill="rgb(211,152,28)" rx="2" ry="2" />
<text  x="745.45" y="1167.5" ></text>
</g>
<g >
<title>iptable_filter_hook (7,760,187 samples, 0.01%)</title><rect x="1165.7" y="869" width="0.1" height="15.0" fill="rgb(222,151,28)" rx="2" ry="2" />
<text  x="1168.66" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="421" width="0.4" height="15.0" fill="rgb(248,51,30)" rx="2" ry="2" />
<text  x="56.54" y="431.5" ></text>
</g>
<g >
<title>__inet_dev_addr_type.isra.0 (15,246,929 samples, 0.02%)</title><rect x="730.8" y="1141" width="0.2" height="15.0" fill="rgb(211,205,10)" rx="2" ry="2" />
<text  x="733.75" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="693" width="1.4" height="15.0" fill="rgb(228,98,28)" rx="2" ry="2" />
<text  x="100.15" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1125" width="3.0" height="15.0" fill="rgb(236,8,53)" rx="2" ry="2" />
<text  x="131.55" y="1135.5" ></text>
</g>
<g >
<title>__libc_write (124,298,350 samples, 0.14%)</title><rect x="238.5" y="1525" width="1.7" height="15.0" fill="rgb(242,167,34)" rx="2" ry="2" />
<text  x="241.51" y="1535.5" ></text>
</g>
<g >
<title>create_empty_buffers (315,813,468 samples, 0.35%)</title><rect x="153.8" y="1285" width="4.2" height="15.0" fill="rgb(231,194,37)" rx="2" ry="2" />
<text  x="156.83" y="1295.5" ></text>
</g>
<g >
<title>csum_partial (7,820,939 samples, 0.01%)</title><rect x="1168.4" y="869" width="0.1" height="15.0" fill="rgb(230,84,10)" rx="2" ry="2" />
<text  x="1171.39" y="879.5" ></text>
</g>
<g >
<title>br_forward (16,765,659 samples, 0.02%)</title><rect x="742.6" y="1077" width="0.2" height="15.0" fill="rgb(217,74,53)" rx="2" ry="2" />
<text  x="745.56" y="1087.5" ></text>
</g>
<g >
<title>ret_from_intr (11,298,240 samples, 0.01%)</title><rect x="987.1" y="1509" width="0.2" height="15.0" fill="rgb(246,72,12)" rx="2" ry="2" />
<text  x="990.11" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="917" width="6.5" height="15.0" fill="rgb(248,52,33)" rx="2" ry="2" />
<text  x="103.13" y="927.5" ></text>
</g>
<g >
<title>dev_queue_xmit (21,831,139 samples, 0.02%)</title><rect x="1180.8" y="997" width="0.2" height="15.0" fill="rgb(238,43,23)" rx="2" ry="2" />
<text  x="1183.76" y="1007.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (17,657,617 samples, 0.02%)</title><rect x="546.9" y="1109" width="0.2" height="15.0" fill="rgb(208,186,23)" rx="2" ry="2" />
<text  x="549.87" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1317" width="3.6" height="15.0" fill="rgb(237,222,40)" rx="2" ry="2" />
<text  x="109.59" y="1327.5" ></text>
</g>
<g >
<title>scheduler_tick (19,241,955 samples, 0.02%)</title><rect x="249.5" y="1429" width="0.3" height="15.0" fill="rgb(213,31,42)" rx="2" ry="2" />
<text  x="252.53" y="1439.5" ></text>
</g>
<g >
<title>mutex_lock (7,632,246 samples, 0.01%)</title><rect x="705.2" y="1461" width="0.1" height="15.0" fill="rgb(228,48,24)" rx="2" ry="2" />
<text  x="708.20" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1301" width="3.6" height="15.0" fill="rgb(250,33,26)" rx="2" ry="2" />
<text  x="109.59" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1157" width="0.4" height="15.0" fill="rgb(242,74,16)" rx="2" ry="2" />
<text  x="56.88" y="1167.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,179,111 samples, 0.01%)</title><rect x="138.4" y="1637" width="0.1" height="15.0" fill="rgb(249,216,20)" rx="2" ry="2" />
<text  x="141.42" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="613" width="18.3" height="15.0" fill="rgb(232,52,44)" rx="2" ry="2" />
<text  x="113.16" y="623.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (53,658,069 samples, 0.06%)</title><rect x="42.1" y="1221" width="0.7" height="15.0" fill="rgb(232,137,34)" rx="2" ry="2" />
<text  x="45.12" y="1231.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (11,614,558 samples, 0.01%)</title><rect x="251.6" y="1141" width="0.2" height="15.0" fill="rgb(233,191,8)" rx="2" ry="2" />
<text  x="254.63" y="1151.5" ></text>
</g>
<g >
<title>netdev_core_pick_tx (13,366,813 samples, 0.01%)</title><rect x="1154.2" y="517" width="0.2" height="15.0" fill="rgb(223,188,13)" rx="2" ry="2" />
<text  x="1157.24" y="527.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/vendor/github.com/hashicorp/memberlist.(*Memberlist).probe-fm (9,245,114 samples, 0.01%)</title><rect x="11.8" y="1605" width="0.1" height="15.0" fill="rgb(250,65,5)" rx="2" ry="2" />
<text  x="14.78" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="1237" width="6.5" height="15.0" fill="rgb(205,175,36)" rx="2" ry="2" />
<text  x="103.13" y="1247.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (66,815,625 samples, 0.07%)</title><rect x="145.5" y="1301" width="0.9" height="15.0" fill="rgb(240,180,20)" rx="2" ry="2" />
<text  x="148.49" y="1311.5" ></text>
</g>
<g >
<title>update_sd_lb_stats (19,824,544 samples, 0.02%)</title><rect x="253.3" y="1413" width="0.2" height="15.0" fill="rgb(232,176,48)" rx="2" ry="2" />
<text  x="256.25" y="1423.5" ></text>
</g>
<g >
<title>ip_local_out (1,058,293,058 samples, 1.19%)</title><rect x="729.3" y="1237" width="14.0" height="15.0" fill="rgb(253,172,54)" rx="2" ry="2" />
<text  x="732.33" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,600,640 samples, 0.01%)</title><rect x="75.5" y="853" width="0.1" height="15.0" fill="rgb(212,160,15)" rx="2" ry="2" />
<text  x="78.49" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1301" width="3.0" height="15.0" fill="rgb(236,116,31)" rx="2" ry="2" />
<text  x="131.55" y="1311.5" ></text>
</g>
<g >
<title>__libc_start_main (48,650,346 samples, 0.05%)</title><rect x="10.6" y="1637" width="0.7" height="15.0" fill="rgb(236,27,5)" rx="2" ry="2" />
<text  x="13.62" y="1647.5" ></text>
</g>
<g >
<title>expand_string_to_string (9,130,931 samples, 0.01%)</title><rect x="10.8" y="1013" width="0.1" height="15.0" fill="rgb(242,7,49)" rx="2" ry="2" />
<text  x="13.80" y="1023.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1605" width="0.4" height="15.0" fill="rgb(213,57,42)" rx="2" ry="2" />
<text  x="56.88" y="1615.5" ></text>
</g>
<g >
<title>__fdget (37,648,174 samples, 0.04%)</title><rect x="749.0" y="1477" width="0.5" height="15.0" fill="rgb(235,18,29)" rx="2" ry="2" />
<text  x="751.98" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,045,333,184 samples, 1.17%)</title><rect x="60.7" y="821" width="13.8" height="15.0" fill="rgb(207,215,23)" rx="2" ry="2" />
<text  x="63.72" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,902,006,715 samples, 2.13%)</title><rect x="58.8" y="1349" width="25.2" height="15.0" fill="rgb(226,68,34)" rx="2" ry="2" />
<text  x="61.84" y="1359.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="997" width="0.4" height="15.0" fill="rgb(245,67,23)" rx="2" ry="2" />
<text  x="56.88" y="1007.5" ></text>
</g>
<g >
<title>security_inode_getattr (11,321,916 samples, 0.01%)</title><rect x="90.8" y="1477" width="0.1" height="15.0" fill="rgb(226,146,0)" rx="2" ry="2" />
<text  x="93.77" y="1487.5" ></text>
</g>
<g >
<title>apic_ack_edge (9,700,818 samples, 0.01%)</title><rect x="509.7" y="1477" width="0.1" height="15.0" fill="rgb(211,99,35)" rx="2" ry="2" />
<text  x="512.66" y="1487.5" ></text>
</g>
<g >
<title>do_idle (4,329,577,481 samples, 4.86%)</title><rect x="596.5" y="1541" width="57.3" height="15.0" fill="rgb(253,122,29)" rx="2" ry="2" />
<text  x="599.51" y="1551.5" >do_idle</text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (8,664,488 samples, 0.01%)</title><rect x="546.9" y="1093" width="0.1" height="15.0" fill="rgb(254,118,2)" rx="2" ry="2" />
<text  x="549.92" y="1103.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (24,068,508 samples, 0.03%)</title><rect x="531.7" y="1301" width="0.3" height="15.0" fill="rgb(206,132,17)" rx="2" ry="2" />
<text  x="534.65" y="1311.5" ></text>
</g>
<g >
<title>psi_task_change (11,265,852 samples, 0.01%)</title><rect x="556.3" y="853" width="0.1" height="15.0" fill="rgb(238,184,13)" rx="2" ry="2" />
<text  x="559.28" y="863.5" ></text>
</g>
<g >
<title>irq_work_interrupt (27,265,215 samples, 0.03%)</title><rect x="591.5" y="1541" width="0.3" height="15.0" fill="rgb(245,17,39)" rx="2" ry="2" />
<text  x="594.47" y="1551.5" ></text>
</g>
<g >
<title>__schedule (11,400,741 samples, 0.01%)</title><rect x="47.1" y="1589" width="0.2" height="15.0" fill="rgb(254,185,20)" rx="2" ry="2" />
<text  x="50.10" y="1599.5" ></text>
</g>
<g >
<title>load_balance (19,380,418 samples, 0.02%)</title><rect x="712.0" y="1381" width="0.3" height="15.0" fill="rgb(235,182,51)" rx="2" ry="2" />
<text  x="715.02" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (27,202,273 samples, 0.03%)</title><rect x="132.5" y="1605" width="0.4" height="15.0" fill="rgb(207,184,8)" rx="2" ry="2" />
<text  x="135.49" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (12,244,909 samples, 0.01%)</title><rect x="93.3" y="1589" width="0.2" height="15.0" fill="rgb(242,210,1)" rx="2" ry="2" />
<text  x="96.31" y="1599.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (66,356,553 samples, 0.07%)</title><rect x="642.3" y="1333" width="0.9" height="15.0" fill="rgb(246,132,15)" rx="2" ry="2" />
<text  x="645.29" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (88,289,506 samples, 0.10%)</title><rect x="71.1" y="677" width="1.2" height="15.0" fill="rgb(252,226,19)" rx="2" ry="2" />
<text  x="74.12" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="901" width="0.8" height="15.0" fill="rgb(236,169,6)" rx="2" ry="2" />
<text  x="101.56" y="911.5" ></text>
</g>
<g >
<title>expand_string_assignment (8,212,682 samples, 0.01%)</title><rect x="11.0" y="1333" width="0.1" height="15.0" fill="rgb(205,71,1)" rx="2" ry="2" />
<text  x="13.95" y="1343.5" ></text>
</g>
<g >
<title>vxlan_build_skb (14,130,578 samples, 0.02%)</title><rect x="1157.1" y="661" width="0.2" height="15.0" fill="rgb(249,93,39)" rx="2" ry="2" />
<text  x="1160.08" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="693" width="0.4" height="15.0" fill="rgb(238,19,32)" rx="2" ry="2" />
<text  x="56.88" y="703.5" ></text>
</g>
<g >
<title>_cond_resched (8,798,697 samples, 0.01%)</title><rect x="203.6" y="1221" width="0.1" height="15.0" fill="rgb(217,78,40)" rx="2" ry="2" />
<text  x="206.56" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="661" width="0.9" height="15.0" fill="rgb(247,166,2)" rx="2" ry="2" />
<text  x="134.54" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="293" width="3.6" height="15.0" fill="rgb(206,154,43)" rx="2" ry="2" />
<text  x="109.59" y="303.5" ></text>
</g>
<g >
<title>br_nf_pre_routing (15,340,605 samples, 0.02%)</title><rect x="41.3" y="1445" width="0.2" height="15.0" fill="rgb(206,177,48)" rx="2" ry="2" />
<text  x="44.32" y="1455.5" ></text>
</g>
<g >
<title>irq_exit (9,429,970 samples, 0.01%)</title><rect x="980.7" y="1429" width="0.1" height="15.0" fill="rgb(215,227,15)" rx="2" ry="2" />
<text  x="983.69" y="1439.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (72,796,060 samples, 0.08%)</title><rect x="1155.2" y="501" width="1.0" height="15.0" fill="rgb(232,75,51)" rx="2" ry="2" />
<text  x="1158.24" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="741" width="0.4" height="15.0" fill="rgb(247,32,37)" rx="2" ry="2" />
<text  x="56.88" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="741" width="0.9" height="15.0" fill="rgb(241,106,47)" rx="2" ry="2" />
<text  x="134.54" y="751.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (72,290,956 samples, 0.08%)</title><rect x="1135.9" y="1141" width="0.9" height="15.0" fill="rgb(226,92,13)" rx="2" ry="2" />
<text  x="1138.89" y="1151.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (306,721,140 samples, 0.34%)</title><rect x="219.4" y="1253" width="4.1" height="15.0" fill="rgb(214,38,44)" rx="2" ry="2" />
<text  x="222.41" y="1263.5" ></text>
</g>
<g >
<title>lj_meta_tget (21,101,854 samples, 0.02%)</title><rect x="1120.0" y="1525" width="0.3" height="15.0" fill="rgb(227,151,27)" rx="2" ry="2" />
<text  x="1123.00" y="1535.5" ></text>
</g>
<g >
<title>tcp_write_xmit (4,105,761,173 samples, 4.60%)</title><rect x="1130.9" y="1285" width="54.3" height="15.0" fill="rgb(248,212,29)" rx="2" ry="2" />
<text  x="1133.92" y="1295.5" >tcp_w..</text>
</g>
<g >
<title>x86_64_start_reservations (4,348,009,023 samples, 4.88%)</title><rect x="596.4" y="1621" width="57.5" height="15.0" fill="rgb(246,137,45)" rx="2" ry="2" />
<text  x="599.36" y="1631.5" >x86_64..</text>
</g>
<g >
<title>__softirqentry_text_start (8,757,927 samples, 0.01%)</title><rect x="987.1" y="1461" width="0.2" height="15.0" fill="rgb(205,145,51)" rx="2" ry="2" />
<text  x="990.14" y="1471.5" ></text>
</g>
<g >
<title>tcp_in_window (32,457,154 samples, 0.04%)</title><rect x="574.1" y="1333" width="0.4" height="15.0" fill="rgb(235,162,33)" rx="2" ry="2" />
<text  x="577.09" y="1343.5" ></text>
</g>
<g >
<title>execute_command (33,468,613 samples, 0.04%)</title><rect x="10.6" y="1541" width="0.5" height="15.0" fill="rgb(234,164,35)" rx="2" ry="2" />
<text  x="13.64" y="1551.5" ></text>
</g>
<g >
<title>tick_handle_oneshot_broadcast (113,849,731 samples, 0.13%)</title><rect x="639.4" y="1285" width="1.5" height="15.0" fill="rgb(237,227,23)" rx="2" ry="2" />
<text  x="642.37" y="1295.5" ></text>
</g>
<g >
<title>veth_xmit (13,408,649 samples, 0.02%)</title><rect x="741.9" y="981" width="0.2" height="15.0" fill="rgb(248,207,25)" rx="2" ry="2" />
<text  x="744.92" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,271,264 samples, 0.55%)</title><rect x="100.1" y="693" width="6.5" height="15.0" fill="rgb(215,202,12)" rx="2" ry="2" />
<text  x="103.13" y="703.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (146,131,610 samples, 0.16%)</title><rect x="572.8" y="1381" width="2.0" height="15.0" fill="rgb(227,45,33)" rx="2" ry="2" />
<text  x="575.84" y="1391.5" ></text>
</g>
<g >
<title>__fget_light (18,929,821 samples, 0.02%)</title><rect x="143.6" y="1381" width="0.2" height="15.0" fill="rgb(226,184,34)" rx="2" ry="2" />
<text  x="146.60" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="549" width="6.5" height="15.0" fill="rgb(251,103,45)" rx="2" ry="2" />
<text  x="103.13" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1509" width="0.4" height="15.0" fill="rgb(235,200,35)" rx="2" ry="2" />
<text  x="56.54" y="1519.5" ></text>
</g>
<g >
<title>tcp_data_ready (116,329,923 samples, 0.13%)</title><rect x="554.0" y="1061" width="1.5" height="15.0" fill="rgb(221,73,18)" rx="2" ry="2" />
<text  x="556.97" y="1071.5" ></text>
</g>
<g >
<title>ttwu_do_activate (14,484,615 samples, 0.02%)</title><rect x="591.6" y="1381" width="0.2" height="15.0" fill="rgb(233,146,16)" rx="2" ry="2" />
<text  x="594.61" y="1391.5" ></text>
</g>
<g >
<title>__ip_local_out (42,837,525 samples, 0.05%)</title><rect x="543.0" y="1013" width="0.6" height="15.0" fill="rgb(217,98,7)" rx="2" ry="2" />
<text  x="545.99" y="1023.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (40,891,714 samples, 0.05%)</title><rect x="602.4" y="1429" width="0.6" height="15.0" fill="rgb(249,70,31)" rx="2" ry="2" />
<text  x="605.41" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1413" width="3.0" height="15.0" fill="rgb(222,154,8)" rx="2" ry="2" />
<text  x="131.55" y="1423.5" ></text>
</g>
<g >
<title>dequeue_entity (18,482,026 samples, 0.02%)</title><rect x="140.3" y="1381" width="0.3" height="15.0" fill="rgb(238,121,6)" rx="2" ry="2" />
<text  x="143.35" y="1391.5" ></text>
</g>
<g >
<title>lj_meta_cat (16,792,512,811 samples, 18.83%)</title><rect x="765.0" y="1525" width="222.3" height="15.0" fill="rgb(239,47,50)" rx="2" ry="2" />
<text  x="768.05" y="1535.5" >lj_meta_cat</text>
</g>
<g >
<title>kworker/3:2-eve (25,158,394 samples, 0.03%)</title><rect x="45.9" y="1669" width="0.3" height="15.0" fill="rgb(219,64,22)" rx="2" ry="2" />
<text  x="48.88" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,154,290 samples, 0.01%)</title><rect x="74.3" y="773" width="0.2" height="15.0" fill="rgb(240,202,35)" rx="2" ry="2" />
<text  x="77.33" y="783.5" ></text>
</g>
<g >
<title>dev_queue_xmit (27,212,123 samples, 0.03%)</title><rect x="251.2" y="1141" width="0.4" height="15.0" fill="rgb(233,62,27)" rx="2" ry="2" />
<text  x="254.23" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="661" width="3.6" height="15.0" fill="rgb(217,113,36)" rx="2" ry="2" />
<text  x="109.59" y="671.5" ></text>
</g>
<g >
<title>lj_alloc_free (16,905,548 samples, 0.02%)</title><rect x="921.8" y="1461" width="0.2" height="15.0" fill="rgb(218,147,40)" rx="2" ry="2" />
<text  x="924.82" y="1471.5" ></text>
</g>
<g >
<title>__xfrm_decode_session (10,834,369 samples, 0.01%)</title><rect x="1166.1" y="837" width="0.2" height="15.0" fill="rgb(226,21,54)" rx="2" ry="2" />
<text  x="1169.11" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="261" width="3.0" height="15.0" fill="rgb(214,124,31)" rx="2" ry="2" />
<text  x="131.55" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="965" width="1.4" height="15.0" fill="rgb(252,3,39)" rx="2" ry="2" />
<text  x="100.15" y="975.5" ></text>
</g>
<g >
<title>br_nf_pre_routing (353,243,024 samples, 0.40%)</title><rect x="534.1" y="1349" width="4.7" height="15.0" fill="rgb(242,122,20)" rx="2" ry="2" />
<text  x="537.08" y="1359.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (58,544,903 samples, 0.07%)</title><rect x="727.5" y="1317" width="0.8" height="15.0" fill="rgb(253,192,16)" rx="2" ry="2" />
<text  x="730.55" y="1327.5" ></text>
</g>
<g >
<title>ipt_do_table (9,382,608 samples, 0.01%)</title><rect x="1151.3" y="565" width="0.1" height="15.0" fill="rgb(211,15,4)" rx="2" ry="2" />
<text  x="1154.26" y="575.5" ></text>
</g>
<g >
<title>interrupt_entry (12,513,481 samples, 0.01%)</title><rect x="577.8" y="1557" width="0.2" height="15.0" fill="rgb(242,156,3)" rx="2" ry="2" />
<text  x="580.83" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="885" width="1.4" height="15.0" fill="rgb(215,1,33)" rx="2" ry="2" />
<text  x="100.15" y="895.5" ></text>
</g>
<g >
<title>net_rx_action (225,737,277 samples, 0.25%)</title><rect x="41.0" y="1573" width="3.0" height="15.0" fill="rgb(214,228,35)" rx="2" ry="2" />
<text  x="43.98" y="1583.5" ></text>
</g>
<g >
<title>ep_modify (29,190,201 samples, 0.03%)</title><rect x="700.1" y="1477" width="0.4" height="15.0" fill="rgb(226,164,10)" rx="2" ry="2" />
<text  x="703.13" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="501" width="3.0" height="15.0" fill="rgb(230,179,14)" rx="2" ry="2" />
<text  x="131.55" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="309" width="0.4" height="15.0" fill="rgb(233,75,5)" rx="2" ry="2" />
<text  x="56.88" y="319.5" ></text>
</g>
<g >
<title>expand_word (8,748,644 samples, 0.01%)</title><rect x="10.6" y="1285" width="0.2" height="15.0" fill="rgb(225,145,33)" rx="2" ry="2" />
<text  x="13.64" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1573" width="0.4" height="15.0" fill="rgb(207,56,6)" rx="2" ry="2" />
<text  x="56.54" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="837" width="18.3" height="15.0" fill="rgb(244,6,49)" rx="2" ry="2" />
<text  x="113.16" y="847.5" ></text>
</g>
<g >
<title>ext4_end_bio (376,845,608 samples, 0.42%)</title><rect x="512.8" y="1365" width="5.0" height="15.0" fill="rgb(219,177,43)" rx="2" ry="2" />
<text  x="515.84" y="1375.5" ></text>
</g>
<g >
<title>lj_BC_FUNCF (13,597,329 samples, 0.02%)</title><rect x="1028.5" y="1541" width="0.2" height="15.0" fill="rgb(218,83,46)" rx="2" ry="2" />
<text  x="1031.52" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_futex (96,783,888 samples, 0.11%)</title><rect x="93.8" y="1525" width="1.3" height="15.0" fill="rgb(252,126,32)" rx="2" ry="2" />
<text  x="96.78" y="1535.5" ></text>
</g>
<g >
<title>ip_route_me_harder (27,378,325 samples, 0.03%)</title><rect x="569.3" y="1253" width="0.3" height="15.0" fill="rgb(233,96,8)" rx="2" ry="2" />
<text  x="572.29" y="1263.5" ></text>
</g>
<g >
<title>_int_malloc (120,282,243 samples, 0.13%)</title><rect x="107.8" y="117" width="1.6" height="15.0" fill="rgb(208,199,2)" rx="2" ry="2" />
<text  x="110.78" y="127.5" ></text>
</g>
<g >
<title>sock_poll (32,675,025 samples, 0.04%)</title><rect x="749.8" y="1445" width="0.4" height="15.0" fill="rgb(240,109,24)" rx="2" ry="2" />
<text  x="752.80" y="1455.5" ></text>
</g>
<g >
<title>__schedule (14,758,794 samples, 0.02%)</title><rect x="132.6" y="1477" width="0.2" height="15.0" fill="rgb(250,216,28)" rx="2" ry="2" />
<text  x="135.62" y="1487.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (52,464,064 samples, 0.06%)</title><rect x="136.5" y="1461" width="0.7" height="15.0" fill="rgb(249,222,16)" rx="2" ry="2" />
<text  x="139.46" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (9,109,783 samples, 0.01%)</title><rect x="79.2" y="1045" width="0.1" height="15.0" fill="rgb(240,49,44)" rx="2" ry="2" />
<text  x="82.17" y="1055.5" ></text>
</g>
<g >
<title>allocate_slab (38,317,531 samples, 0.04%)</title><rect x="155.8" y="1173" width="0.5" height="15.0" fill="rgb(246,2,51)" rx="2" ry="2" />
<text  x="158.81" y="1183.5" ></text>
</g>
<g >
<title>lj_alloc_free (15,193,909 samples, 0.02%)</title><rect x="893.5" y="1445" width="0.2" height="15.0" fill="rgb(254,117,25)" rx="2" ry="2" />
<text  x="896.54" y="1455.5" ></text>
</g>
<g >
<title>lj_BC_RET (213,392,022 samples, 0.24%)</title><rect x="1065.0" y="1541" width="2.9" height="15.0" fill="rgb(216,183,32)" rx="2" ry="2" />
<text  x="1068.03" y="1551.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (10,550,200 samples, 0.01%)</title><rect x="50.0" y="1637" width="0.2" height="15.0" fill="rgb(233,172,27)" rx="2" ry="2" />
<text  x="53.04" y="1647.5" ></text>
</g>
<g >
<title>nf_hook_slow (17,846,551 samples, 0.02%)</title><rect x="738.3" y="885" width="0.2" height="15.0" fill="rgb(240,66,51)" rx="2" ry="2" />
<text  x="741.30" y="895.5" ></text>
</g>
<g >
<title>__clone (92,280,596 samples, 0.10%)</title><rect x="15.1" y="1653" width="1.3" height="15.0" fill="rgb(254,211,10)" rx="2" ry="2" />
<text  x="18.14" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="981" width="0.4" height="15.0" fill="rgb(242,176,0)" rx="2" ry="2" />
<text  x="56.54" y="991.5" ></text>
</g>
<g >
<title>_int_realloc (53,409,308 samples, 0.06%)</title><rect x="751.7" y="1525" width="0.7" height="15.0" fill="rgb(243,0,12)" rx="2" ry="2" />
<text  x="754.68" y="1535.5" ></text>
</g>
<g >
<title>tcp_push (4,135,839,110 samples, 4.64%)</title><rect x="1130.5" y="1317" width="54.8" height="15.0" fill="rgb(233,107,8)" rx="2" ry="2" />
<text  x="1133.55" y="1327.5" >tcp_p..</text>
</g>
<g >
<title>ip_vs_in (26,122,340 samples, 0.03%)</title><rect x="252.0" y="1333" width="0.4" height="15.0" fill="rgb(231,86,35)" rx="2" ry="2" />
<text  x="255.02" y="1343.5" ></text>
</g>
<g >
<title>lua_rawgeti (15,288,442 samples, 0.02%)</title><rect x="687.2" y="1621" width="0.2" height="15.0" fill="rgb(207,73,29)" rx="2" ry="2" />
<text  x="690.21" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1141" width="3.0" height="15.0" fill="rgb(236,41,31)" rx="2" ry="2" />
<text  x="131.55" y="1151.5" ></text>
</g>
<g >
<title>__memset_sse2_unaligned_erms (29,514,202 samples, 0.03%)</title><rect x="722.5" y="1525" width="0.4" height="15.0" fill="rgb(214,50,39)" rx="2" ry="2" />
<text  x="725.52" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (52,788,754 samples, 0.06%)</title><rect x="131.5" y="165" width="0.7" height="15.0" fill="rgb(243,168,26)" rx="2" ry="2" />
<text  x="134.54" y="175.5" ></text>
</g>
<g >
<title>__ieee754_log_sse2 (19,338,422 samples, 0.02%)</title><rect x="1187.3" y="1525" width="0.3" height="15.0" fill="rgb(224,131,16)" rx="2" ry="2" />
<text  x="1190.34" y="1535.5" ></text>
</g>
<g >
<title>inet_stream_connect (12,086,191 samples, 0.01%)</title><rect x="700.9" y="1461" width="0.2" height="15.0" fill="rgb(252,123,43)" rx="2" ry="2" />
<text  x="703.93" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,318,551 samples, 0.04%)</title><rect x="53.9" y="725" width="0.4" height="15.0" fill="rgb(245,126,16)" rx="2" ry="2" />
<text  x="56.88" y="735.5" ></text>
</g>
<g >
<title>tcp_send_ack (1,137,388,901 samples, 1.28%)</title><rect x="728.5" y="1317" width="15.1" height="15.0" fill="rgb(225,150,20)" rx="2" ry="2" />
<text  x="731.52" y="1327.5" ></text>
</g>
<g >
<title>__ip_finish_output (101,744,573 samples, 0.11%)</title><rect x="1162.8" y="853" width="1.4" height="15.0" fill="rgb(209,106,51)" rx="2" ry="2" />
<text  x="1165.85" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="693" width="3.0" height="15.0" fill="rgb(234,136,14)" rx="2" ry="2" />
<text  x="131.55" y="703.5" ></text>
</g>
<g >
<title>ret_from_fork (26,223,180 samples, 0.03%)</title><rect x="44.8" y="1653" width="0.3" height="15.0" fill="rgb(207,145,49)" rx="2" ry="2" />
<text  x="47.80" y="1663.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (28,971,067 samples, 0.03%)</title><rect x="229.2" y="1237" width="0.4" height="15.0" fill="rgb(217,84,8)" rx="2" ry="2" />
<text  x="232.23" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,510,075 samples, 0.01%)</title><rect x="73.2" y="725" width="0.1" height="15.0" fill="rgb(230,152,50)" rx="2" ry="2" />
<text  x="76.23" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (112,691,293 samples, 0.13%)</title><rect x="95.5" y="1589" width="1.5" height="15.0" fill="rgb(211,197,24)" rx="2" ry="2" />
<text  x="98.49" y="1599.5" ></text>
</g>
<g >
<title>skb_entail (12,964,353 samples, 0.01%)</title><rect x="1130.3" y="1317" width="0.2" height="15.0" fill="rgb(224,107,20)" rx="2" ry="2" />
<text  x="1133.31" y="1327.5" ></text>
</g>
<g >
<title>gc_onestep (199,300,761 samples, 0.22%)</title><rect x="664.1" y="1637" width="2.7" height="15.0" fill="rgb(218,131,2)" rx="2" ry="2" />
<text  x="667.12" y="1647.5" ></text>
</g>
<g >
<title>security_file_permission (25,722,695 samples, 0.03%)</title><rect x="1186.4" y="1413" width="0.4" height="15.0" fill="rgb(234,128,17)" rx="2" ry="2" />
<text  x="1189.44" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1253" width="3.0" height="15.0" fill="rgb(230,115,23)" rx="2" ry="2" />
<text  x="131.55" y="1263.5" ></text>
</g>
<g >
<title>ip_finish_output (105,187,279 samples, 0.12%)</title><rect x="1162.8" y="869" width="1.4" height="15.0" fill="rgb(205,12,9)" rx="2" ry="2" />
<text  x="1165.82" y="879.5" ></text>
</g>
<g >
<title>ip_vs_in (657,752,143 samples, 0.74%)</title><rect x="1160.5" y="933" width="8.7" height="15.0" fill="rgb(245,169,44)" rx="2" ry="2" />
<text  x="1163.47" y="943.5" ></text>
</g>
<g >
<title>exit_mmap (7,865,736 samples, 0.01%)</title><rect x="138.4" y="1525" width="0.1" height="15.0" fill="rgb(250,140,17)" rx="2" ry="2" />
<text  x="141.42" y="1535.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (221,681,920 samples, 0.25%)</title><rect x="548.2" y="997" width="2.9" height="15.0" fill="rgb(210,25,32)" rx="2" ry="2" />
<text  x="551.18" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="949" width="3.6" height="15.0" fill="rgb(235,111,50)" rx="2" ry="2" />
<text  x="109.59" y="959.5" ></text>
</g>
<g >
<title>lj_str_new (4,812,093,046 samples, 5.40%)</title><rect x="922.4" y="1509" width="63.7" height="15.0" fill="rgb(233,160,42)" rx="2" ry="2" />
<text  x="925.42" y="1519.5" >lj_str..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="837" width="0.4" height="15.0" fill="rgb(245,190,40)" rx="2" ry="2" />
<text  x="56.88" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="677" width="6.5" height="15.0" fill="rgb(232,191,54)" rx="2" ry="2" />
<text  x="103.13" y="687.5" ></text>
</g>
<g >
<title>neigh_resolve_output (64,733,565 samples, 0.07%)</title><rect x="1180.4" y="1141" width="0.9" height="15.0" fill="rgb(228,39,6)" rx="2" ry="2" />
<text  x="1183.44" y="1151.5" ></text>
</g>
<g >
<title>ip_route_input_noref (83,160,732 samples, 0.09%)</title><rect x="570.3" y="1365" width="1.1" height="15.0" fill="rgb(244,166,54)" rx="2" ry="2" />
<text  x="573.26" y="1375.5" ></text>
</g>
<g >
<title>handle_edge_irq (130,636,560 samples, 0.15%)</title><rect x="508.1" y="1509" width="1.7" height="15.0" fill="rgb(236,44,10)" rx="2" ry="2" />
<text  x="511.11" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="629" width="0.4" height="15.0" fill="rgb(206,41,33)" rx="2" ry="2" />
<text  x="56.88" y="639.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (29,061,880 samples, 0.03%)</title><rect x="489.2" y="1493" width="0.4" height="15.0" fill="rgb(236,177,12)" rx="2" ry="2" />
<text  x="492.22" y="1503.5" ></text>
</g>
<g >
<title>rcu_gp_kthread (16,224,557 samples, 0.02%)</title><rect x="241.2" y="1621" width="0.3" height="15.0" fill="rgb(214,65,54)" rx="2" ry="2" />
<text  x="244.24" y="1631.5" ></text>
</g>
<g >
<title>tick_sched_timer (53,652,849 samples, 0.06%)</title><rect x="642.5" y="1317" width="0.7" height="15.0" fill="rgb(225,221,8)" rx="2" ry="2" />
<text  x="645.46" y="1327.5" ></text>
</g>
<g >
<title>br_handle_frame (1,593,206,894 samples, 1.79%)</title><rect x="540.5" y="1397" width="21.1" height="15.0" fill="rgb(230,13,3)" rx="2" ry="2" />
<text  x="543.53" y="1407.5" ></text>
</g>
<g >
<title>mongo::CmdServerStatus::run (43,722,701 samples, 0.05%)</title><rect x="15.2" y="1509" width="0.6" height="15.0" fill="rgb(250,90,37)" rx="2" ry="2" />
<text  x="18.20" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (850,880,820 samples, 0.95%)</title><rect x="61.0" y="725" width="11.3" height="15.0" fill="rgb(230,81,11)" rx="2" ry="2" />
<text  x="64.03" y="735.5" ></text>
</g>
<g >
<title>kfree (20,233,193 samples, 0.02%)</title><rect x="520.2" y="1349" width="0.3" height="15.0" fill="rgb(223,79,37)" rx="2" ry="2" />
<text  x="523.20" y="1359.5" ></text>
</g>
<g >
<title>execute_command_internal (10,085,220 samples, 0.01%)</title><rect x="10.6" y="1349" width="0.2" height="15.0" fill="rgb(219,180,48)" rx="2" ry="2" />
<text  x="13.64" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1397" width="18.3" height="15.0" fill="rgb(213,87,15)" rx="2" ry="2" />
<text  x="113.16" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (7,641,627,463 samples, 8.57%)</title><rect x="139.1" y="1653" width="101.2" height="15.0" fill="rgb(233,191,51)" rx="2" ry="2" />
<text  x="142.14" y="1663.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1477" width="0.4" height="15.0" fill="rgb(247,228,36)" rx="2" ry="2" />
<text  x="56.88" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="901" width="0.3" height="15.0" fill="rgb(207,209,32)" rx="2" ry="2" />
<text  x="102.79" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="709" width="6.5" height="15.0" fill="rgb(216,4,51)" rx="2" ry="2" />
<text  x="103.13" y="719.5" ></text>
</g>
<g >
<title>ip_finish_output (30,220,161 samples, 0.03%)</title><rect x="568.5" y="1269" width="0.4" height="15.0" fill="rgb(232,168,20)" rx="2" ry="2" />
<text  x="571.48" y="1279.5" ></text>
</g>
<g >
<title>tcp_ack (153,408,994 samples, 0.17%)</title><rect x="551.8" y="1077" width="2.0" height="15.0" fill="rgb(219,0,30)" rx="2" ry="2" />
<text  x="554.76" y="1087.5" ></text>
</g>
<g >
<title>operator new (18,079,402 samples, 0.02%)</title><rect x="86.1" y="1429" width="0.2" height="15.0" fill="rgb(211,21,17)" rx="2" ry="2" />
<text  x="89.08" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,621,857 samples, 0.55%)</title><rect x="100.1" y="1493" width="6.5" height="15.0" fill="rgb(240,127,26)" rx="2" ry="2" />
<text  x="103.13" y="1503.5" ></text>
</g>
<g >
<title>security_file_permission (22,078,945 samples, 0.02%)</title><rect x="237.9" y="1365" width="0.2" height="15.0" fill="rgb(237,211,2)" rx="2" ry="2" />
<text  x="240.85" y="1375.5" ></text>
</g>
<g >
<title>br_nf_pre_routing (1,062,431,044 samples, 1.19%)</title><rect x="1145.2" y="981" width="14.1" height="15.0" fill="rgb(224,158,19)" rx="2" ry="2" />
<text  x="1148.19" y="991.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1637" width="1.4" height="15.0" fill="rgb(239,160,35)" rx="2" ry="2" />
<text  x="100.15" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (91,610,365 samples, 0.10%)</title><rect x="127.1" y="101" width="1.2" height="15.0" fill="rgb(221,138,32)" rx="2" ry="2" />
<text  x="130.08" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (8,149,740 samples, 0.01%)</title><rect x="72.2" y="661" width="0.1" height="15.0" fill="rgb(213,221,30)" rx="2" ry="2" />
<text  x="75.18" y="671.5" ></text>
</g>
<g >
<title>interrupt_entry (11,648,256 samples, 0.01%)</title><rect x="242.8" y="1653" width="0.1" height="15.0" fill="rgb(232,153,48)" rx="2" ry="2" />
<text  x="245.75" y="1663.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2,489,451,986 samples, 2.79%)</title><rect x="1143.0" y="1109" width="32.9" height="15.0" fill="rgb(222,174,21)" rx="2" ry="2" />
<text  x="1145.97" y="1119.5" >do..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="613" width="3.0" height="15.0" fill="rgb(221,228,6)" rx="2" ry="2" />
<text  x="131.55" y="623.5" ></text>
</g>
<g >
<title>nf_hook_slow (142,612,029 samples, 0.16%)</title><rect x="531.0" y="1349" width="1.8" height="15.0" fill="rgb(220,125,34)" rx="2" ry="2" />
<text  x="533.96" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1637" width="3.0" height="15.0" fill="rgb(206,141,21)" rx="2" ry="2" />
<text  x="131.55" y="1647.5" ></text>
</g>
<g >
<title>irq_work_run (24,160,821 samples, 0.03%)</title><rect x="591.5" y="1509" width="0.3" height="15.0" fill="rgb(222,17,16)" rx="2" ry="2" />
<text  x="594.50" y="1519.5" ></text>
</g>
<g >
<title>xas_create (27,009,218 samples, 0.03%)</title><rect x="209.9" y="1205" width="0.3" height="15.0" fill="rgb(209,50,26)" rx="2" ry="2" />
<text  x="212.86" y="1215.5" ></text>
</g>
<g >
<title>InotifyBackend::start (182,284,819 samples, 0.20%)</title><rect x="133.7" y="1589" width="2.4" height="15.0" fill="rgb(223,224,21)" rx="2" ry="2" />
<text  x="136.66" y="1599.5" ></text>
</g>
<g >
<title>__ip_finish_output (78,196,777 samples, 0.09%)</title><rect x="549.8" y="933" width="1.0" height="15.0" fill="rgb(224,94,26)" rx="2" ry="2" />
<text  x="552.77" y="943.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (78,462,929 samples, 0.09%)</title><rect x="1139.0" y="1125" width="1.0" height="15.0" fill="rgb(210,39,50)" rx="2" ry="2" />
<text  x="1141.97" y="1135.5" ></text>
</g>
<g >
<title>copy_user_generic_string (392,235,287 samples, 0.44%)</title><rect x="230.6" y="1285" width="5.2" height="15.0" fill="rgb(213,223,11)" rx="2" ry="2" />
<text  x="233.57" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="469" width="0.8" height="15.0" fill="rgb(211,108,8)" rx="2" ry="2" />
<text  x="101.56" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,058,188,169 samples, 1.19%)</title><rect x="60.6" y="869" width="14.0" height="15.0" fill="rgb(252,22,22)" rx="2" ry="2" />
<text  x="63.56" y="879.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (16,918,671 samples, 0.02%)</title><rect x="741.2" y="965" width="0.2" height="15.0" fill="rgb(235,78,43)" rx="2" ry="2" />
<text  x="744.17" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="629" width="3.0" height="15.0" fill="rgb(219,40,3)" rx="2" ry="2" />
<text  x="131.55" y="639.5" ></text>
</g>
<g >
<title>__brelse (12,264,689 samples, 0.01%)</title><rect x="172.1" y="1109" width="0.1" height="15.0" fill="rgb(245,120,35)" rx="2" ry="2" />
<text  x="175.05" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1237" width="0.3" height="15.0" fill="rgb(243,117,2)" rx="2" ry="2" />
<text  x="102.79" y="1247.5" ></text>
</g>
<g >
<title>nf_nat_packet (22,670,671 samples, 0.03%)</title><rect x="1164.6" y="805" width="0.3" height="15.0" fill="rgb(228,200,42)" rx="2" ry="2" />
<text  x="1167.56" y="815.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (26,602,838 samples, 0.03%)</title><rect x="602.5" y="1349" width="0.4" height="15.0" fill="rgb(240,69,27)" rx="2" ry="2" />
<text  x="605.51" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="757" width="0.3" height="15.0" fill="rgb(231,190,5)" rx="2" ry="2" />
<text  x="102.79" y="767.5" ></text>
</g>
<g >
<title>skb_release_data (17,590,932 samples, 0.02%)</title><rect x="726.5" y="1301" width="0.2" height="15.0" fill="rgb(226,95,41)" rx="2" ry="2" />
<text  x="729.48" y="1311.5" ></text>
</g>
<g >
<title>skb_free_head (12,154,156 samples, 0.01%)</title><rect x="726.6" y="1285" width="0.1" height="15.0" fill="rgb(249,114,31)" rx="2" ry="2" />
<text  x="729.56" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,949,865 samples, 0.01%)</title><rect x="81.4" y="1157" width="0.1" height="15.0" fill="rgb(231,142,16)" rx="2" ry="2" />
<text  x="84.42" y="1167.5" ></text>
</g>
<g >
<title>lj_BC_TNEW (86,994,064 samples, 0.10%)</title><rect x="1097.2" y="1541" width="1.1" height="15.0" fill="rgb(232,215,13)" rx="2" ry="2" />
<text  x="1100.19" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="181" width="0.4" height="15.0" fill="rgb(238,55,27)" rx="2" ry="2" />
<text  x="56.54" y="191.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (9,200,049 samples, 0.01%)</title><rect x="1064.2" y="1509" width="0.1" height="15.0" fill="rgb(224,24,49)" rx="2" ry="2" />
<text  x="1067.18" y="1519.5" ></text>
</g>
<g >
<title>__free_pages_ok (16,531,075 samples, 0.02%)</title><rect x="514.1" y="1157" width="0.3" height="15.0" fill="rgb(235,136,17)" rx="2" ry="2" />
<text  x="517.13" y="1167.5" ></text>
</g>
<g >
<title>hash_conntrack_raw (7,678,247 samples, 0.01%)</title><rect x="1174.8" y="949" width="0.1" height="15.0" fill="rgb(221,79,9)" rx="2" ry="2" />
<text  x="1177.77" y="959.5" ></text>
</g>
<g >
<title>br_nf_pre_routing (107,687,140 samples, 0.12%)</title><rect x="41.6" y="1477" width="1.5" height="15.0" fill="rgb(245,74,40)" rx="2" ry="2" />
<text  x="44.65" y="1487.5" ></text>
</g>
<g >
<title>__mpn_mul_1 (12,584,420 samples, 0.01%)</title><rect x="1111.9" y="1413" width="0.1" height="15.0" fill="rgb(230,146,39)" rx="2" ry="2" />
<text  x="1114.88" y="1423.5" ></text>
</g>
<g >
<title>ksize (10,303,012 samples, 0.01%)</title><rect x="521.9" y="1365" width="0.1" height="15.0" fill="rgb(216,37,20)" rx="2" ry="2" />
<text  x="524.87" y="1375.5" ></text>
</g>
<g >
<title>irq_chip_ack_parent (7,563,527 samples, 0.01%)</title><rect x="510.1" y="1509" width="0.1" height="15.0" fill="rgb(216,62,18)" rx="2" ry="2" />
<text  x="513.07" y="1519.5" ></text>
</g>
<g >
<title>Glob::isIgnored (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1637" width="0.4" height="15.0" fill="rgb(211,51,24)" rx="2" ry="2" />
<text  x="56.54" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,448,485 samples, 0.55%)</title><rect x="100.1" y="1077" width="6.5" height="15.0" fill="rgb(225,171,12)" rx="2" ry="2" />
<text  x="103.13" y="1087.5" ></text>
</g>
<g >
<title>select_task_rq_fair (7,877,864 samples, 0.01%)</title><rect x="247.6" y="1429" width="0.1" height="15.0" fill="rgb(214,50,48)" rx="2" ry="2" />
<text  x="250.64" y="1439.5" ></text>
</g>
<g >
<title>ksoftirqd/0 (17,205,033 samples, 0.02%)</title><rect x="40.3" y="1669" width="0.2" height="15.0" fill="rgb(250,201,50)" rx="2" ry="2" />
<text  x="43.29" y="1679.5" ></text>
</g>
<g >
<title>pwcache_get_user (8,215,146 samples, 0.01%)</title><rect x="241.0" y="1557" width="0.1" height="15.0" fill="rgb(214,93,41)" rx="2" ry="2" />
<text  x="243.98" y="1567.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_manip_pkt (20,081,633 samples, 0.02%)</title><rect x="575.1" y="1301" width="0.3" height="15.0" fill="rgb(221,132,48)" rx="2" ry="2" />
<text  x="578.10" y="1311.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (43,949,750 samples, 0.05%)</title><rect x="642.6" y="1237" width="0.5" height="15.0" fill="rgb(244,154,13)" rx="2" ry="2" />
<text  x="645.57" y="1247.5" ></text>
</g>
<g >
<title>local.runtime.greyobject (12,206,372 samples, 0.01%)</title><rect x="14.2" y="1589" width="0.1" height="15.0" fill="rgb(238,114,43)" rx="2" ry="2" />
<text  x="17.17" y="1599.5" ></text>
</g>
<g >
<title>enqueue_task_fair (18,495,853 samples, 0.02%)</title><rect x="556.0" y="853" width="0.3" height="15.0" fill="rgb(242,120,43)" rx="2" ry="2" />
<text  x="559.04" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="277" width="6.5" height="15.0" fill="rgb(226,50,34)" rx="2" ry="2" />
<text  x="103.13" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="693" width="3.6" height="15.0" fill="rgb(241,156,32)" rx="2" ry="2" />
<text  x="109.59" y="703.5" ></text>
</g>
<g >
<title>run_timer_softirq (83,042,623 samples, 0.09%)</title><rect x="255.1" y="1477" width="1.1" height="15.0" fill="rgb(248,171,47)" rx="2" ry="2" />
<text  x="258.07" y="1487.5" ></text>
</g>
<g >
<title>tick_handle_oneshot_broadcast (26,374,496 samples, 0.03%)</title><rect x="602.5" y="1301" width="0.4" height="15.0" fill="rgb(246,216,42)" rx="2" ry="2" />
<text  x="605.52" y="1311.5" ></text>
</g>
<g >
<title>__set_page_dirty (240,504,032 samples, 0.27%)</title><rect x="220.0" y="1237" width="3.2" height="15.0" fill="rgb(251,66,42)" rx="2" ry="2" />
<text  x="223.00" y="1247.5" ></text>
</g>
<g >
<title>run_ksoftirqd (12,351,909 samples, 0.01%)</title><rect x="40.3" y="1605" width="0.2" height="15.0" fill="rgb(233,211,40)" rx="2" ry="2" />
<text  x="43.29" y="1615.5" ></text>
</g>
<g >
<title>__find_specmb (19,815,446 samples, 0.02%)</title><rect x="680.4" y="1573" width="0.3" height="15.0" fill="rgb(211,36,35)" rx="2" ry="2" />
<text  x="683.45" y="1583.5" ></text>
</g>
<g >
<title>[ps] (45,789,128 samples, 0.05%)</title><rect x="240.5" y="1621" width="0.6" height="15.0" fill="rgb(205,13,38)" rx="2" ry="2" />
<text  x="243.48" y="1631.5" ></text>
</g>
<g >
<title>vxlan_xmit_one (612,564,323 samples, 0.69%)</title><rect x="1149.4" y="677" width="8.1" height="15.0" fill="rgb(224,74,42)" rx="2" ry="2" />
<text  x="1152.42" y="687.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (228,236,392 samples, 0.26%)</title><rect x="88.1" y="1541" width="3.0" height="15.0" fill="rgb(249,42,41)" rx="2" ry="2" />
<text  x="91.07" y="1551.5" ></text>
</g>
<g >
<title>kworker/5:2-eve (22,650,575 samples, 0.03%)</title><rect x="46.5" y="1669" width="0.3" height="15.0" fill="rgb(218,110,31)" rx="2" ry="2" />
<text  x="49.54" y="1679.5" ></text>
</g>
<g >
<title>expand_string_to_string (8,435,251 samples, 0.01%)</title><rect x="10.6" y="1205" width="0.2" height="15.0" fill="rgb(242,215,40)" rx="2" ry="2" />
<text  x="13.65" y="1215.5" ></text>
</g>
<g >
<title>ep_autoremove_wake_function (44,660,736 samples, 0.05%)</title><rect x="555.9" y="933" width="0.6" height="15.0" fill="rgb(239,2,2)" rx="2" ry="2" />
<text  x="558.91" y="943.5" ></text>
</g>
<g >
<title>__GI___clone (312,697,571 samples, 0.35%)</title><rect x="133.6" y="1653" width="4.1" height="15.0" fill="rgb(229,152,17)" rx="2" ry="2" />
<text  x="136.59" y="1663.5" ></text>
</g>
<g >
<title>rb_next (10,252,245 samples, 0.01%)</title><rect x="585.0" y="1509" width="0.1" height="15.0" fill="rgb(238,124,46)" rx="2" ry="2" />
<text  x="587.97" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="277" width="0.8" height="15.0" fill="rgb(237,216,54)" rx="2" ry="2" />
<text  x="101.56" y="287.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (12,015,538 samples, 0.01%)</title><rect x="1017.2" y="1493" width="0.1" height="15.0" fill="rgb(246,118,33)" rx="2" ry="2" />
<text  x="1020.19" y="1503.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (14,078,988 samples, 0.02%)</title><rect x="548.8" y="901" width="0.2" height="15.0" fill="rgb(233,52,36)" rx="2" ry="2" />
<text  x="551.77" y="911.5" ></text>
</g>
<g >
<title>vxlan_xmit (19,894,798 samples, 0.02%)</title><rect x="41.8" y="1189" width="0.2" height="15.0" fill="rgb(209,213,33)" rx="2" ry="2" />
<text  x="44.76" y="1199.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (9,507,339 samples, 0.01%)</title><rect x="81.5" y="1173" width="0.2" height="15.0" fill="rgb(254,103,2)" rx="2" ry="2" />
<text  x="84.54" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1573" width="0.9" height="15.0" fill="rgb(216,203,20)" rx="2" ry="2" />
<text  x="134.54" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1317" width="3.0" height="15.0" fill="rgb(221,77,27)" rx="2" ry="2" />
<text  x="131.55" y="1327.5" ></text>
</g>
<g >
<title>dev_queue_xmit (62,780,370 samples, 0.07%)</title><rect x="549.9" y="901" width="0.8" height="15.0" fill="rgb(213,214,25)" rx="2" ry="2" />
<text  x="552.88" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (741,532,952 samples, 0.83%)</title><rect x="61.3" y="645" width="9.8" height="15.0" fill="rgb(212,88,40)" rx="2" ry="2" />
<text  x="64.30" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (211,819,750 samples, 0.24%)</title><rect x="62.4" y="309" width="2.8" height="15.0" fill="rgb(208,153,42)" rx="2" ry="2" />
<text  x="65.38" y="319.5" ></text>
</g>
<g >
<title>iptable_mangle_hook (10,375,013 samples, 0.01%)</title><rect x="564.2" y="1317" width="0.1" height="15.0" fill="rgb(209,45,49)" rx="2" ry="2" />
<text  x="567.20" y="1327.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (3,913,812,009 samples, 4.39%)</title><rect x="1131.6" y="1269" width="51.8" height="15.0" fill="rgb(211,130,52)" rx="2" ry="2" />
<text  x="1134.64" y="1279.5" >__tcp..</text>
</g>
<g >
<title>tcp_connect (11,484,522 samples, 0.01%)</title><rect x="700.9" y="1413" width="0.2" height="15.0" fill="rgb(227,194,8)" rx="2" ry="2" />
<text  x="703.94" y="1423.5" ></text>
</g>
<g >
<title>irq_work_run (17,074,977 samples, 0.02%)</title><rect x="253.9" y="1397" width="0.2" height="15.0" fill="rgb(243,122,44)" rx="2" ry="2" />
<text  x="256.88" y="1407.5" ></text>
</g>
<g >
<title>gc_onestep (50,539,824 samples, 0.06%)</title><rect x="1097.4" y="1509" width="0.6" height="15.0" fill="rgb(216,67,38)" rx="2" ry="2" />
<text  x="1100.36" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1397" width="0.4" height="15.0" fill="rgb(228,181,39)" rx="2" ry="2" />
<text  x="56.88" y="1407.5" ></text>
</g>
<g >
<title>_int_free (15,281,282 samples, 0.02%)</title><rect x="80.9" y="1173" width="0.2" height="15.0" fill="rgb(235,46,26)" rx="2" ry="2" />
<text  x="83.93" y="1183.5" ></text>
</g>
<g >
<title>activate_task (57,255,233 samples, 0.06%)</title><rect x="94.1" y="1429" width="0.8" height="15.0" fill="rgb(230,42,50)" rx="2" ry="2" />
<text  x="97.14" y="1439.5" ></text>
</g>
<g >
<title>__tick_broadcast_oneshot_control (15,325,059 samples, 0.02%)</title><rect x="488.9" y="1525" width="0.2" height="15.0" fill="rgb(238,208,9)" rx="2" ry="2" />
<text  x="491.92" y="1535.5" ></text>
</g>
<g >
<title>do_sys_poll (111,980,143 samples, 0.13%)</title><rect x="139.5" y="1509" width="1.5" height="15.0" fill="rgb(239,214,44)" rx="2" ry="2" />
<text  x="142.49" y="1519.5" ></text>
</g>
<g >
<title>gc_sweep (679,033,546 samples, 0.76%)</title><rect x="666.8" y="1637" width="8.9" height="15.0" fill="rgb(216,111,44)" rx="2" ry="2" />
<text  x="669.76" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,549,793 samples, 0.12%)</title><rect x="97.2" y="805" width="1.4" height="15.0" fill="rgb(221,5,48)" rx="2" ry="2" />
<text  x="100.15" y="815.5" ></text>
</g>
<g >
<title>__libc_write (9,517,480 samples, 0.01%)</title><rect x="663.2" y="1621" width="0.1" height="15.0" fill="rgb(239,7,22)" rx="2" ry="2" />
<text  x="666.17" y="1631.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (8,619,510 samples, 0.01%)</title><rect x="138.7" y="1621" width="0.2" height="15.0" fill="rgb(238,224,34)" rx="2" ry="2" />
<text  x="141.74" y="1631.5" ></text>
</g>
<g >
<title>__ip_local_out (25,732,388 samples, 0.03%)</title><rect x="255.4" y="1301" width="0.4" height="15.0" fill="rgb(222,70,54)" rx="2" ry="2" />
<text  x="258.45" y="1311.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (12,107,074 samples, 0.01%)</title><rect x="122.0" y="101" width="0.2" height="15.0" fill="rgb(233,221,19)" rx="2" ry="2" />
<text  x="124.99" y="111.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (17,464,091 samples, 0.02%)</title><rect x="550.2" y="741" width="0.3" height="15.0" fill="rgb(235,6,21)" rx="2" ry="2" />
<text  x="553.22" y="751.5" ></text>
</g>
<g >
<title>worker_thread (22,940,236 samples, 0.03%)</title><rect x="45.9" y="1621" width="0.3" height="15.0" fill="rgb(236,127,31)" rx="2" ry="2" />
<text  x="48.91" y="1631.5" ></text>
</g>
<g >
<title>ext4_write_checks (9,002,423 samples, 0.01%)</title><rect x="237.5" y="1333" width="0.1" height="15.0" fill="rgb(232,66,9)" rx="2" ry="2" />
<text  x="240.50" y="1343.5" ></text>
</g>
<g >
<title>inet_recvmsg (1,404,300,188 samples, 1.57%)</title><rect x="725.3" y="1365" width="18.6" height="15.0" fill="rgb(223,85,45)" rx="2" ry="2" />
<text  x="728.35" y="1375.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (20,034,904 samples, 0.02%)</title><rect x="568.6" y="1205" width="0.2" height="15.0" fill="rgb(219,152,53)" rx="2" ry="2" />
<text  x="571.55" y="1215.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash (16,010,064 samples, 0.02%)</title><rect x="739.0" y="837" width="0.2" height="15.0" fill="rgb(225,0,11)" rx="2" ry="2" />
<text  x="742.01" y="847.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (936,100,420 samples, 1.05%)</title><rect x="490.7" y="1477" width="12.4" height="15.0" fill="rgb(208,150,32)" rx="2" ry="2" />
<text  x="493.71" y="1487.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/vendor/github.com/hashicorp/memberlist.(*Memberlist).schedule.func2 (9,245,114 samples, 0.01%)</title><rect x="11.8" y="1637" width="0.1" height="15.0" fill="rgb(238,166,29)" rx="2" ry="2" />
<text  x="14.78" y="1647.5" ></text>
</g>
<g >
<title>DirTree::update (34,998,879 samples, 0.04%)</title><rect x="54.7" y="1589" width="0.5" height="15.0" fill="rgb(249,80,23)" rx="2" ry="2" />
<text  x="57.73" y="1599.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_fn (307,586,371 samples, 0.34%)</title><rect x="1137.5" y="1173" width="4.0" height="15.0" fill="rgb(231,135,16)" rx="2" ry="2" />
<text  x="1140.48" y="1183.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (16,752,842 samples, 0.02%)</title><rect x="222.8" y="1205" width="0.2" height="15.0" fill="rgb(242,222,23)" rx="2" ry="2" />
<text  x="225.76" y="1215.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.isra.0 (115,326,027 samples, 0.13%)</title><rect x="570.1" y="1381" width="1.5" height="15.0" fill="rgb(233,43,47)" rx="2" ry="2" />
<text  x="573.09" y="1391.5" ></text>
</g>
<g >
<title>luaL_addlstring (45,899,925 samples, 0.05%)</title><rect x="683.9" y="1621" width="0.6" height="15.0" fill="rgb(222,44,26)" rx="2" ry="2" />
<text  x="686.94" y="1631.5" ></text>
</g>
<g >
<title>shmem_mapping (58,126,813 samples, 0.07%)</title><rect x="212.3" y="1237" width="0.7" height="15.0" fill="rgb(219,71,37)" rx="2" ry="2" />
<text  x="215.27" y="1247.5" ></text>
</g>
<g >
<title>ret_from_intr (24,586,198 samples, 0.03%)</title><rect x="591.8" y="1541" width="0.4" height="15.0" fill="rgb(242,153,18)" rx="2" ry="2" />
<text  x="594.84" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="1189" width="6.5" height="15.0" fill="rgb(210,25,31)" rx="2" ry="2" />
<text  x="103.13" y="1199.5" ></text>
</g>
<g >
<title>__blk_mq_run_hw_queue (67,559,517 samples, 0.08%)</title><rect x="35.9" y="1349" width="0.9" height="15.0" fill="rgb(244,163,3)" rx="2" ry="2" />
<text  x="38.91" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1189" width="0.3" height="15.0" fill="rgb(209,123,25)" rx="2" ry="2" />
<text  x="102.79" y="1199.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (50,931,751 samples, 0.06%)</title><rect x="1180.5" y="1093" width="0.7" height="15.0" fill="rgb(225,11,52)" rx="2" ry="2" />
<text  x="1183.52" y="1103.5" ></text>
</g>
<g >
<title>udp4_lib_lookup2 (13,249,975 samples, 0.01%)</title><rect x="523.7" y="1301" width="0.2" height="15.0" fill="rgb(210,182,43)" rx="2" ry="2" />
<text  x="526.71" y="1311.5" ></text>
</g>
<g >
<title>tcp_send_ack (58,262,767 samples, 0.07%)</title><rect x="255.4" y="1397" width="0.7" height="15.0" fill="rgb(223,229,18)" rx="2" ry="2" />
<text  x="258.35" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="917" width="0.8" height="15.0" fill="rgb(239,38,7)" rx="2" ry="2" />
<text  x="101.56" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1205" width="3.6" height="15.0" fill="rgb(208,177,21)" rx="2" ry="2" />
<text  x="109.59" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="245" width="18.3" height="15.0" fill="rgb(231,23,40)" rx="2" ry="2" />
<text  x="113.16" y="255.5" ></text>
</g>
<g >
<title>ip_rcv_core.isra.0 (12,985,620 samples, 0.01%)</title><rect x="526.1" y="1365" width="0.2" height="15.0" fill="rgb(235,87,16)" rx="2" ry="2" />
<text  x="529.08" y="1375.5" ></text>
</g>
<g >
<title>nf_conntrack_udp_packet (15,132,579 samples, 0.02%)</title><rect x="1152.3" y="549" width="0.2" height="15.0" fill="rgb(220,204,16)" rx="2" ry="2" />
<text  x="1155.30" y="559.5" ></text>
</g>
<g >
<title>wake_up_q (80,148,117 samples, 0.09%)</title><rect x="94.0" y="1477" width="1.0" height="15.0" fill="rgb(212,138,40)" rx="2" ry="2" />
<text  x="96.97" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1509" width="1.4" height="15.0" fill="rgb(215,156,43)" rx="2" ry="2" />
<text  x="100.15" y="1519.5" ></text>
</g>
<g >
<title>_int_free (8,995,279 samples, 0.01%)</title><rect x="79.9" y="1109" width="0.1" height="15.0" fill="rgb(224,25,53)" rx="2" ry="2" />
<text  x="82.86" y="1119.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (16,704,126 samples, 0.02%)</title><rect x="41.3" y="1493" width="0.2" height="15.0" fill="rgb(233,85,33)" rx="2" ry="2" />
<text  x="44.31" y="1503.5" ></text>
</g>
<g >
<title>scsi_softirq_done (503,010,524 samples, 0.56%)</title><rect x="511.4" y="1461" width="6.6" height="15.0" fill="rgb(218,169,26)" rx="2" ry="2" />
<text  x="514.38" y="1471.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (26,978,531 samples, 0.03%)</title><rect x="251.2" y="1125" width="0.4" height="15.0" fill="rgb(232,87,36)" rx="2" ry="2" />
<text  x="254.23" y="1135.5" ></text>
</g>
<g >
<title>do_epoll_wait (24,447,667 samples, 0.03%)</title><rect x="132.5" y="1557" width="0.3" height="15.0" fill="rgb(248,115,39)" rx="2" ry="2" />
<text  x="135.51" y="1567.5" ></text>
</g>
<g >
<title>lj_meta_tget (16,582,924 samples, 0.02%)</title><rect x="1122.4" y="1525" width="0.2" height="15.0" fill="rgb(235,97,48)" rx="2" ry="2" />
<text  x="1125.37" y="1535.5" ></text>
</g>
<g >
<title>lj_mem_realloc (1,395,846,966 samples, 1.57%)</title><rect x="962.4" y="1493" width="18.5" height="15.0" fill="rgb(248,91,5)" rx="2" ry="2" />
<text  x="965.41" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1157" width="0.9" height="15.0" fill="rgb(213,89,52)" rx="2" ry="2" />
<text  x="134.54" y="1167.5" ></text>
</g>
<g >
<title>__switch_to (15,720,291 samples, 0.02%)</title><rect x="701.6" y="1557" width="0.2" height="15.0" fill="rgb(222,167,29)" rx="2" ry="2" />
<text  x="704.63" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (856,381,611 samples, 0.96%)</title><rect x="61.0" y="741" width="11.3" height="15.0" fill="rgb(212,81,16)" rx="2" ry="2" />
<text  x="63.96" y="751.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (41,776,237 samples, 0.05%)</title><rect x="563.0" y="1253" width="0.5" height="15.0" fill="rgb(226,94,6)" rx="2" ry="2" />
<text  x="565.99" y="1263.5" ></text>
</g>
<g >
<title>ret_from_fork (26,619,934 samples, 0.03%)</title><rect x="45.2" y="1653" width="0.3" height="15.0" fill="rgb(239,142,39)" rx="2" ry="2" />
<text  x="48.15" y="1663.5" ></text>
</g>
<g >
<title>alloc_pages_current (11,261,036 samples, 0.01%)</title><rect x="1128.5" y="1285" width="0.1" height="15.0" fill="rgb(250,25,51)" rx="2" ry="2" />
<text  x="1131.49" y="1295.5" ></text>
</g>
<g >
<title>operator new (15,060,174 samples, 0.02%)</title><rect x="71.8" y="661" width="0.2" height="15.0" fill="rgb(227,7,53)" rx="2" ry="2" />
<text  x="74.82" y="671.5" ></text>
</g>
<g >
<title>nf_nat_inet_fn (8,102,202 samples, 0.01%)</title><rect x="743.1" y="1157" width="0.1" height="15.0" fill="rgb(206,93,41)" rx="2" ry="2" />
<text  x="746.08" y="1167.5" ></text>
</g>
<g >
<title>__find_get_block (61,022,290 samples, 0.07%)</title><rect x="182.9" y="1109" width="0.9" height="15.0" fill="rgb(226,89,1)" rx="2" ry="2" />
<text  x="185.95" y="1119.5" ></text>
</g>
<g >
<title>__schedule (11,653,240 samples, 0.01%)</title><rect x="47.4" y="1589" width="0.2" height="15.0" fill="rgb(244,112,49)" rx="2" ry="2" />
<text  x="50.45" y="1599.5" ></text>
</g>
<g >
<title>sock_def_readable (61,187,086 samples, 0.07%)</title><rect x="555.7" y="1061" width="0.9" height="15.0" fill="rgb(236,108,18)" rx="2" ry="2" />
<text  x="558.74" y="1071.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (11,425,829 samples, 0.01%)</title><rect x="41.1" y="1493" width="0.2" height="15.0" fill="rgb(216,15,4)" rx="2" ry="2" />
<text  x="44.14" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (49,023,832 samples, 0.05%)</title><rect x="109.4" y="133" width="0.6" height="15.0" fill="rgb(230,221,37)" rx="2" ry="2" />
<text  x="112.37" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="677" width="0.3" height="15.0" fill="rgb(220,211,39)" rx="2" ry="2" />
<text  x="102.79" y="687.5" ></text>
</g>
<g >
<title>__GI__IO_file_open (8,725,765 samples, 0.01%)</title><rect x="51.1" y="1541" width="0.1" height="15.0" fill="rgb(205,121,20)" rx="2" ry="2" />
<text  x="54.12" y="1551.5" ></text>
</g>
<g >
<title>napi_complete_done (12,196,609 samples, 0.01%)</title><rect x="41.1" y="1541" width="0.2" height="15.0" fill="rgb(231,181,49)" rx="2" ry="2" />
<text  x="44.13" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1333" width="0.4" height="15.0" fill="rgb(250,204,2)" rx="2" ry="2" />
<text  x="56.54" y="1343.5" ></text>
</g>
<g >
<title>tcp_mt (15,752,124 samples, 0.02%)</title><rect x="1173.7" y="949" width="0.2" height="15.0" fill="rgb(247,167,23)" rx="2" ry="2" />
<text  x="1176.72" y="959.5" ></text>
</g>
<g >
<title>ttwu_do_activate (35,205,406 samples, 0.04%)</title><rect x="556.0" y="885" width="0.5" height="15.0" fill="rgb(220,77,4)" rx="2" ry="2" />
<text  x="559.01" y="895.5" ></text>
</g>
<g >
<title>gc_mark (35,485,329 samples, 0.04%)</title><rect x="663.6" y="1637" width="0.5" height="15.0" fill="rgb(233,208,10)" rx="2" ry="2" />
<text  x="666.65" y="1647.5" ></text>
</g>
<g >
<title>operator new (15,688,802 samples, 0.02%)</title><rect x="64.7" y="277" width="0.3" height="15.0" fill="rgb(244,96,13)" rx="2" ry="2" />
<text  x="67.74" y="287.5" ></text>
</g>
<g >
<title>__libc_enable_asynccancel (9,350,459 samples, 0.01%)</title><rect x="701.5" y="1557" width="0.1" height="15.0" fill="rgb(206,18,44)" rx="2" ry="2" />
<text  x="704.51" y="1567.5" ></text>
</g>
<g >
<title>common_file_perm (16,256,760 samples, 0.02%)</title><rect x="744.4" y="1381" width="0.2" height="15.0" fill="rgb(215,166,18)" rx="2" ry="2" />
<text  x="747.41" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="437" width="0.9" height="15.0" fill="rgb(223,50,41)" rx="2" ry="2" />
<text  x="134.54" y="447.5" ></text>
</g>
<g >
<title>all (89,171,865,146 samples, 100%)</title><rect x="10.0" y="1685" width="1180.0" height="15.0" fill="rgb(230,104,46)" rx="2" ry="2" />
<text  x="13.00" y="1695.5" ></text>
</g>
<g >
<title>gettimeofday (9,184,093 samples, 0.01%)</title><rect x="722.9" y="1525" width="0.1" height="15.0" fill="rgb(238,34,26)" rx="2" ry="2" />
<text  x="725.91" y="1535.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (105,818,782 samples, 0.12%)</title><rect x="134.5" y="1461" width="1.4" height="15.0" fill="rgb(211,21,34)" rx="2" ry="2" />
<text  x="137.46" y="1471.5" ></text>
</g>
<g >
<title>nf_conntrack_in (72,285,470 samples, 0.08%)</title><rect x="1151.7" y="565" width="0.9" height="15.0" fill="rgb(249,46,39)" rx="2" ry="2" />
<text  x="1154.68" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="757" width="0.4" height="15.0" fill="rgb(225,105,11)" rx="2" ry="2" />
<text  x="56.88" y="767.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (2,385,861,479 samples, 2.68%)</title><rect x="55.6" y="1557" width="31.5" height="15.0" fill="rgb(240,128,24)" rx="2" ry="2" />
<text  x="58.58" y="1567.5" >st..</text>
</g>
<g >
<title>__ksize (10,155,963 samples, 0.01%)</title><rect x="521.9" y="1349" width="0.1" height="15.0" fill="rgb(249,69,1)" rx="2" ry="2" />
<text  x="524.87" y="1359.5" ></text>
</g>
<g >
<title>ksoftirqd_running (17,023,878 samples, 0.02%)</title><rect x="1175.9" y="1125" width="0.3" height="15.0" fill="rgb(219,222,22)" rx="2" ry="2" />
<text  x="1178.93" y="1135.5" ></text>
</g>
<g >
<title>ip_output (63,359,640 samples, 0.07%)</title><rect x="737.7" y="901" width="0.8" height="15.0" fill="rgb(218,144,10)" rx="2" ry="2" />
<text  x="740.71" y="911.5" ></text>
</g>
<g >
<title>mempool_free (79,677,557 samples, 0.09%)</title><rect x="513.3" y="1301" width="1.1" height="15.0" fill="rgb(233,193,35)" rx="2" ry="2" />
<text  x="516.31" y="1311.5" ></text>
</g>
<g >
<title>run_rebalance_domains (36,452,483 samples, 0.04%)</title><rect x="507.3" y="1461" width="0.5" height="15.0" fill="rgb(231,26,22)" rx="2" ry="2" />
<text  x="510.31" y="1471.5" ></text>
</g>
<g >
<title>ksoftirqd_running (10,693,900 samples, 0.01%)</title><rect x="576.3" y="1509" width="0.2" height="15.0" fill="rgb(253,105,31)" rx="2" ry="2" />
<text  x="579.33" y="1519.5" ></text>
</g>
<g >
<title>ktime_get (8,391,630 samples, 0.01%)</title><rect x="37.7" y="1429" width="0.1" height="15.0" fill="rgb(251,171,36)" rx="2" ry="2" />
<text  x="40.69" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,596,175 samples, 0.02%)</title><rect x="106.4" y="197" width="0.2" height="15.0" fill="rgb(248,184,48)" rx="2" ry="2" />
<text  x="109.40" y="207.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (10,841,750 samples, 0.01%)</title><rect x="1123.7" y="1509" width="0.1" height="15.0" fill="rgb(238,133,14)" rx="2" ry="2" />
<text  x="1126.69" y="1519.5" ></text>
</g>
<g >
<title>tick_sched_handle (52,204,716 samples, 0.06%)</title><rect x="249.1" y="1461" width="0.7" height="15.0" fill="rgb(244,85,22)" rx="2" ry="2" />
<text  x="252.11" y="1471.5" ></text>
</g>
<g >
<title>ip_vs_in.part.0 (10,576,104 samples, 0.01%)</title><rect x="43.5" y="1413" width="0.1" height="15.0" fill="rgb(236,212,40)" rx="2" ry="2" />
<text  x="46.45" y="1423.5" ></text>
</g>
<g >
<title>vxlan_xmit (171,848,664 samples, 0.19%)</title><rect x="542.5" y="1093" width="2.2" height="15.0" fill="rgb(216,165,38)" rx="2" ry="2" />
<text  x="545.47" y="1103.5" ></text>
</g>
<g >
<title>process_backlog (702,210,666 samples, 0.79%)</title><rect x="732.2" y="1077" width="9.3" height="15.0" fill="rgb(216,81,50)" rx="2" ry="2" />
<text  x="735.24" y="1087.5" ></text>
</g>
<g >
<title>schedule (16,171,533 samples, 0.02%)</title><rect x="45.3" y="1605" width="0.2" height="15.0" fill="rgb(253,77,25)" rx="2" ry="2" />
<text  x="48.28" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="181" width="0.3" height="15.0" fill="rgb(222,127,14)" rx="2" ry="2" />
<text  x="102.79" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,654,256 samples, 0.01%)</title><rect x="242.0" y="1525" width="0.1" height="15.0" fill="rgb(208,180,42)" rx="2" ry="2" />
<text  x="245.03" y="1535.5" ></text>
</g>
<g >
<title>clockevents_switch_state (88,809,215 samples, 0.10%)</title><rect x="503.2" y="1493" width="1.2" height="15.0" fill="rgb(242,33,27)" rx="2" ry="2" />
<text  x="506.18" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="309" width="3.6" height="15.0" fill="rgb(209,70,6)" rx="2" ry="2" />
<text  x="109.59" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_lock (15,743,167 samples, 0.02%)</title><rect x="224.3" y="1253" width="0.3" height="15.0" fill="rgb(227,21,34)" rx="2" ry="2" />
<text  x="227.35" y="1263.5" ></text>
</g>
<g >
<title>nf_nat_inet_fn (24,130,276 samples, 0.03%)</title><rect x="1164.5" y="821" width="0.4" height="15.0" fill="rgb(239,1,46)" rx="2" ry="2" />
<text  x="1167.54" y="831.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4,905,572,291 samples, 5.50%)</title><rect x="510.9" y="1493" width="64.9" height="15.0" fill="rgb(228,228,29)" rx="2" ry="2" />
<text  x="513.89" y="1503.5" >__softi..</text>
</g>
<g >
<title>kworker/2:1-eve (26,893,915 samples, 0.03%)</title><rect x="45.5" y="1669" width="0.4" height="15.0" fill="rgb(213,76,54)" rx="2" ry="2" />
<text  x="48.53" y="1679.5" ></text>
</g>
<g >
<title>thread_main (37,466,601,292 samples, 42.02%)</title><rect x="692.6" y="1621" width="495.8" height="15.0" fill="rgb(250,103,4)" rx="2" ry="2" />
<text  x="695.63" y="1631.5" >thread_main</text>
</g>
<g >
<title>allocate_slab (33,220,493 samples, 0.04%)</title><rect x="31.0" y="1365" width="0.4" height="15.0" fill="rgb(235,88,12)" rx="2" ry="2" />
<text  x="33.96" y="1375.5" ></text>
</g>
<g >
<title>ext4_do_update_inode (199,016,608 samples, 0.22%)</title><rect x="224.6" y="1253" width="2.6" height="15.0" fill="rgb(227,148,40)" rx="2" ry="2" />
<text  x="227.56" y="1263.5" ></text>
</g>
<g >
<title>__next_zones_zonelist (9,169,566 samples, 0.01%)</title><rect x="203.4" y="1221" width="0.2" height="15.0" fill="rgb(217,213,32)" rx="2" ry="2" />
<text  x="206.43" y="1231.5" ></text>
</g>
<g >
<title>secondary_startup_64 (31,039,612,152 samples, 34.81%)</title><rect x="243.1" y="1653" width="410.8" height="15.0" fill="rgb(234,229,9)" rx="2" ry="2" />
<text  x="246.15" y="1663.5" >secondary_startup_64</text>
</g>
<g >
<title>longest_match (10,801,333 samples, 0.01%)</title><rect x="16.2" y="1477" width="0.1" height="15.0" fill="rgb(233,76,53)" rx="2" ry="2" />
<text  x="19.19" y="1487.5" ></text>
</g>
<g >
<title>xas_start (8,743,692 samples, 0.01%)</title><rect x="208.4" y="1205" width="0.2" height="15.0" fill="rgb(229,73,4)" rx="2" ry="2" />
<text  x="211.44" y="1215.5" ></text>
</g>
<g >
<title>process_backlog (124,169,729 samples, 0.14%)</title><rect x="251.0" y="1461" width="1.7" height="15.0" fill="rgb(224,18,43)" rx="2" ry="2" />
<text  x="254.04" y="1471.5" ></text>
</g>
<g >
<title>find_busiest_group (16,401,324 samples, 0.02%)</title><rect x="712.0" y="1365" width="0.3" height="15.0" fill="rgb(234,111,13)" rx="2" ry="2" />
<text  x="715.05" y="1375.5" ></text>
</g>
<g >
<title>wait_for_stable_page (13,479,449 samples, 0.02%)</title><rect x="215.0" y="1285" width="0.1" height="15.0" fill="rgb(235,120,43)" rx="2" ry="2" />
<text  x="217.95" y="1295.5" ></text>
</g>
<g >
<title>nf_nat_inet_fn (13,202,308 samples, 0.01%)</title><rect x="557.7" y="1109" width="0.2" height="15.0" fill="rgb(253,116,29)" rx="2" ry="2" />
<text  x="560.69" y="1119.5" ></text>
</g>
<g >
<title>_int_free (52,388,201 samples, 0.06%)</title><rect x="48.7" y="1637" width="0.7" height="15.0" fill="rgb(221,89,2)" rx="2" ry="2" />
<text  x="51.75" y="1647.5" ></text>
</g>
<g >
<title>ksoftirqd/7 (9,559,394 samples, 0.01%)</title><rect x="44.7" y="1669" width="0.1" height="15.0" fill="rgb(227,3,0)" rx="2" ry="2" />
<text  x="47.66" y="1679.5" ></text>
</g>
<g >
<title>ip_route_input_noref (31,807,044 samples, 0.04%)</title><rect x="740.0" y="981" width="0.4" height="15.0" fill="rgb(223,134,8)" rx="2" ry="2" />
<text  x="743.01" y="991.5" ></text>
</g>
<g >
<title>__lock_text_start (19,401,269 samples, 0.02%)</title><rect x="253.9" y="1445" width="0.2" height="15.0" fill="rgb(237,203,9)" rx="2" ry="2" />
<text  x="256.86" y="1455.5" ></text>
</g>
<g >
<title>__dquot_alloc_space (36,883,277 samples, 0.04%)</title><rect x="169.9" y="1173" width="0.5" height="15.0" fill="rgb(212,189,1)" rx="2" ry="2" />
<text  x="172.87" y="1183.5" ></text>
</g>
<g >
<title>rebalance_domains (19,525,138 samples, 0.02%)</title><rect x="640.9" y="1365" width="0.3" height="15.0" fill="rgb(212,85,13)" rx="2" ry="2" />
<text  x="643.95" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (422,086,473 samples, 0.47%)</title><rect x="62.0" y="453" width="5.6" height="15.0" fill="rgb(231,35,9)" rx="2" ry="2" />
<text  x="65.02" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="357" width="0.4" height="15.0" fill="rgb(206,99,35)" rx="2" ry="2" />
<text  x="56.54" y="367.5" ></text>
</g>
<g >
<title>ion (7,257,361,351 samples, 8.14%)</title><rect x="142.3" y="1509" width="96.1" height="15.0" fill="rgb(252,53,1)" rx="2" ry="2" />
<text  x="145.33" y="1519.5" >ion</text>
</g>
<g >
<title>_int_malloc (35,491,146 samples, 0.04%)</title><rect x="57.0" y="1509" width="0.5" height="15.0" fill="rgb(215,120,33)" rx="2" ry="2" />
<text  x="60.01" y="1519.5" ></text>
</g>
<g >
<title>__x64_sys_write (112,651,945 samples, 0.13%)</title><rect x="238.6" y="1461" width="1.5" height="15.0" fill="rgb(220,124,26)" rx="2" ry="2" />
<text  x="241.60" y="1471.5" ></text>
</g>
<g >
<title>ipv4_conntrack_in (7,919,408 samples, 0.01%)</title><rect x="252.6" y="1381" width="0.1" height="15.0" fill="rgb(234,14,5)" rx="2" ry="2" />
<text  x="255.55" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="517" width="0.9" height="15.0" fill="rgb(216,204,45)" rx="2" ry="2" />
<text  x="134.54" y="527.5" ></text>
</g>
<g >
<title>mempool_alloc_slab (91,142,694 samples, 0.10%)</title><rect x="30.6" y="1445" width="1.2" height="15.0" fill="rgb(210,16,40)" rx="2" ry="2" />
<text  x="33.58" y="1455.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (61,885,054 samples, 0.07%)</title><rect x="1180.4" y="1109" width="0.9" height="15.0" fill="rgb(228,168,9)" rx="2" ry="2" />
<text  x="1183.44" y="1119.5" ></text>
</g>
<g >
<title>start_this_handle (96,257,019 samples, 0.11%)</title><rect x="152.3" y="1253" width="1.2" height="15.0" fill="rgb(251,163,51)" rx="2" ry="2" />
<text  x="155.27" y="1263.5" ></text>
</g>
<g >
<title>ip_finish_output2 (113,482,862 samples, 0.13%)</title><rect x="562.6" y="1301" width="1.5" height="15.0" fill="rgb(247,50,32)" rx="2" ry="2" />
<text  x="565.60" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1237" width="18.3" height="15.0" fill="rgb(206,228,44)" rx="2" ry="2" />
<text  x="113.16" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="997" width="0.8" height="15.0" fill="rgb(240,166,18)" rx="2" ry="2" />
<text  x="101.56" y="1007.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (107,573,289 samples, 0.12%)</title><rect x="247.5" y="1477" width="1.5" height="15.0" fill="rgb(215,196,35)" rx="2" ry="2" />
<text  x="250.53" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (109,308,884 samples, 0.12%)</title><rect x="100.1" y="133" width="1.5" height="15.0" fill="rgb(237,21,11)" rx="2" ry="2" />
<text  x="103.13" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (105,682,256 samples, 0.12%)</title><rect x="100.2" y="101" width="1.4" height="15.0" fill="rgb(252,113,6)" rx="2" ry="2" />
<text  x="103.18" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="357" width="0.3" height="15.0" fill="rgb(241,84,41)" rx="2" ry="2" />
<text  x="102.79" y="367.5" ></text>
</g>
<g >
<title>lj_meta_cat (29,789,147 samples, 0.03%)</title><rect x="658.1" y="1637" width="0.4" height="15.0" fill="rgb(213,226,39)" rx="2" ry="2" />
<text  x="661.11" y="1647.5" ></text>
</g>
<g >
<title>ip_vs_conn_out_get (15,507,238 samples, 0.02%)</title><rect x="567.2" y="1285" width="0.2" height="15.0" fill="rgb(233,141,43)" rx="2" ry="2" />
<text  x="570.16" y="1295.5" ></text>
</g>
<g >
<title>emptybuffer (37,144,781 samples, 0.04%)</title><rect x="686.7" y="1605" width="0.5" height="15.0" fill="rgb(220,168,32)" rx="2" ry="2" />
<text  x="689.70" y="1615.5" ></text>
</g>
<g >
<title>memset (18,334,439 samples, 0.02%)</title><rect x="157.4" y="1237" width="0.2" height="15.0" fill="rgb(222,207,45)" rx="2" ry="2" />
<text  x="160.40" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="261" width="6.5" height="15.0" fill="rgb(226,123,22)" rx="2" ry="2" />
<text  x="103.13" y="271.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (8,848,269 samples, 0.01%)</title><rect x="10.3" y="1605" width="0.1" height="15.0" fill="rgb(210,197,23)" rx="2" ry="2" />
<text  x="13.28" y="1615.5" ></text>
</g>
<g >
<title>__GI___xstat (252,403,889 samples, 0.28%)</title><rect x="87.8" y="1589" width="3.4" height="15.0" fill="rgb(243,67,27)" rx="2" ry="2" />
<text  x="90.82" y="1599.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (4,348,009,023 samples, 4.88%)</title><rect x="596.4" y="1637" width="57.5" height="15.0" fill="rgb(250,56,47)" rx="2" ry="2" />
<text  x="599.36" y="1647.5" >x86_64..</text>
</g>
<g >
<title>update_load_avg (15,063,523 samples, 0.02%)</title><rect x="135.1" y="1365" width="0.2" height="15.0" fill="rgb(231,54,13)" rx="2" ry="2" />
<text  x="138.15" y="1375.5" ></text>
</g>
<g >
<title>__vsprintf_internal (190,119,517 samples, 0.21%)</title><rect x="678.2" y="1605" width="2.5" height="15.0" fill="rgb(229,120,7)" rx="2" ry="2" />
<text  x="681.22" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1301" width="0.4" height="15.0" fill="rgb(233,162,6)" rx="2" ry="2" />
<text  x="56.88" y="1311.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (600,343,374 samples, 0.67%)</title><rect x="641.9" y="1397" width="8.0" height="15.0" fill="rgb(220,194,13)" rx="2" ry="2" />
<text  x="644.92" y="1407.5" ></text>
</g>
<g >
<title>ext4_init_io_end (51,257,671 samples, 0.06%)</title><rect x="32.7" y="1493" width="0.7" height="15.0" fill="rgb(239,50,2)" rx="2" ry="2" />
<text  x="35.72" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,246,184 samples, 0.01%)</title><rect x="51.1" y="1493" width="0.1" height="15.0" fill="rgb(223,40,36)" rx="2" ry="2" />
<text  x="54.12" y="1503.5" ></text>
</g>
<g >
<title>__log (8,165,238 samples, 0.01%)</title><rect x="1187.6" y="1525" width="0.1" height="15.0" fill="rgb(238,16,54)" rx="2" ry="2" />
<text  x="1190.60" y="1535.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2,413,648,757 samples, 2.71%)</title><rect x="1143.8" y="1045" width="32.0" height="15.0" fill="rgb(227,117,17)" rx="2" ry="2" />
<text  x="1146.85" y="1055.5" >__..</text>
</g>
<g >
<title>br_nf_pre_routing_finish (991,866,315 samples, 1.11%)</title><rect x="1145.5" y="965" width="13.1" height="15.0" fill="rgb(246,190,25)" rx="2" ry="2" />
<text  x="1148.47" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1477" width="3.0" height="15.0" fill="rgb(250,125,34)" rx="2" ry="2" />
<text  x="131.55" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="357" width="3.0" height="15.0" fill="rgb(238,113,1)" rx="2" ry="2" />
<text  x="131.55" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="613" width="0.4" height="15.0" fill="rgb(214,223,37)" rx="2" ry="2" />
<text  x="56.88" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,141,662 samples, 0.01%)</title><rect x="61.5" y="581" width="0.1" height="15.0" fill="rgb(208,172,54)" rx="2" ry="2" />
<text  x="64.47" y="591.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_manip_pkt (12,642,677 samples, 0.01%)</title><rect x="560.8" y="1269" width="0.2" height="15.0" fill="rgb(237,212,32)" rx="2" ry="2" />
<text  x="563.83" y="1279.5" ></text>
</g>
<g >
<title>nf_hook_slow (57,172,764 samples, 0.06%)</title><rect x="1164.3" y="869" width="0.7" height="15.0" fill="rgb(231,193,48)" rx="2" ry="2" />
<text  x="1167.27" y="879.5" ></text>
</g>
<g >
<title>socket_readable (2,028,567,418 samples, 2.27%)</title><rect x="718.2" y="1573" width="26.8" height="15.0" fill="rgb(206,29,18)" rx="2" ry="2" />
<text  x="721.18" y="1583.5" >s..</text>
</g>
<g >
<title>__libc_read (1,619,719,723 samples, 1.82%)</title><rect x="723.6" y="1541" width="21.4" height="15.0" fill="rgb(253,84,24)" rx="2" ry="2" />
<text  x="726.58" y="1551.5" >_..</text>
</g>
<g >
<title>__br_forward (30,533,119 samples, 0.03%)</title><rect x="1180.7" y="1045" width="0.4" height="15.0" fill="rgb(213,12,26)" rx="2" ry="2" />
<text  x="1183.70" y="1055.5" ></text>
</g>
<g >
<title>deactivate_task (226,684,319 samples, 0.25%)</title><rect x="708.1" y="1413" width="3.0" height="15.0" fill="rgb(244,5,37)" rx="2" ry="2" />
<text  x="711.14" y="1423.5" ></text>
</g>
<g >
<title>__GI___libc_read (15,210,041 samples, 0.02%)</title><rect x="240.7" y="1557" width="0.2" height="15.0" fill="rgb(219,141,50)" rx="2" ry="2" />
<text  x="243.68" y="1567.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (61,433,254 samples, 0.07%)</title><rect x="549.9" y="885" width="0.8" height="15.0" fill="rgb(215,152,2)" rx="2" ry="2" />
<text  x="552.88" y="895.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/vendor/github.com/hashicorp/memberlist.(*Memberlist).probe (9,245,114 samples, 0.01%)</title><rect x="11.8" y="1589" width="0.1" height="15.0" fill="rgb(215,206,50)" rx="2" ry="2" />
<text  x="14.78" y="1599.5" ></text>
</g>
<g >
<title>gc_sweep (5,750,933,807 samples, 6.45%)</title><rect x="818.1" y="1477" width="76.1" height="15.0" fill="rgb(227,37,48)" rx="2" ry="2" />
<text  x="821.10" y="1487.5" >gc_sweep</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1029" width="1.4" height="15.0" fill="rgb(237,167,19)" rx="2" ry="2" />
<text  x="100.15" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1525" width="0.4" height="15.0" fill="rgb(227,202,14)" rx="2" ry="2" />
<text  x="56.54" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="293" width="0.8" height="15.0" fill="rgb(236,126,10)" rx="2" ry="2" />
<text  x="101.56" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="1061" width="6.5" height="15.0" fill="rgb(251,114,49)" rx="2" ry="2" />
<text  x="103.13" y="1071.5" ></text>
</g>
<g >
<title>__libc_disable_asynccancel (9,200,253 samples, 0.01%)</title><rect x="701.4" y="1557" width="0.1" height="15.0" fill="rgb(251,142,52)" rx="2" ry="2" />
<text  x="704.39" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,472,309,925 samples, 1.65%)</title><rect x="59.8" y="1077" width="19.5" height="15.0" fill="rgb(231,180,42)" rx="2" ry="2" />
<text  x="62.80" y="1087.5" ></text>
</g>
<g >
<title>intel_idle (18,916,516,363 samples, 21.21%)</title><rect x="256.4" y="1541" width="250.3" height="15.0" fill="rgb(206,149,49)" rx="2" ry="2" />
<text  x="259.41" y="1551.5" >intel_idle</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1077" width="0.4" height="15.0" fill="rgb(217,1,32)" rx="2" ry="2" />
<text  x="56.88" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="981" width="0.9" height="15.0" fill="rgb(245,166,19)" rx="2" ry="2" />
<text  x="134.54" y="991.5" ></text>
</g>
<g >
<title>epoll_wait (985,788,141 samples, 1.11%)</title><rect x="701.1" y="1573" width="13.0" height="15.0" fill="rgb(229,96,36)" rx="2" ry="2" />
<text  x="704.11" y="1583.5" ></text>
</g>
<g >
<title>br_pass_frame_up (62,077,193 samples, 0.07%)</title><rect x="42.1" y="1413" width="0.8" height="15.0" fill="rgb(219,197,39)" rx="2" ry="2" />
<text  x="45.07" y="1423.5" ></text>
</g>
<g >
<title>blk_mq_flush_plug_list (71,930,549 samples, 0.08%)</title><rect x="35.9" y="1413" width="0.9" height="15.0" fill="rgb(210,166,7)" rx="2" ry="2" />
<text  x="38.88" y="1423.5" ></text>
</g>
<g >
<title>ip_local_deliver (228,840,030 samples, 0.26%)</title><rect x="527.7" y="1333" width="3.1" height="15.0" fill="rgb(241,218,21)" rx="2" ry="2" />
<text  x="530.73" y="1343.5" ></text>
</g>
<g >
<title>worker_thread (28,799,252 samples, 0.03%)</title><rect x="46.9" y="1621" width="0.4" height="15.0" fill="rgb(220,37,15)" rx="2" ry="2" />
<text  x="49.90" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,266,538,783 samples, 1.42%)</title><rect x="60.2" y="981" width="16.7" height="15.0" fill="rgb(212,109,46)" rx="2" ry="2" />
<text  x="63.16" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1317" width="0.9" height="15.0" fill="rgb(210,38,45)" rx="2" ry="2" />
<text  x="134.54" y="1327.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (13,053,574 samples, 0.01%)</title><rect x="569.4" y="1205" width="0.2" height="15.0" fill="rgb(247,91,46)" rx="2" ry="2" />
<text  x="572.44" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1445" width="0.4" height="15.0" fill="rgb(231,142,40)" rx="2" ry="2" />
<text  x="56.54" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="645" width="3.6" height="15.0" fill="rgb(253,161,48)" rx="2" ry="2" />
<text  x="109.59" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,448,485 samples, 0.55%)</title><rect x="100.1" y="1013" width="6.5" height="15.0" fill="rgb(248,32,20)" rx="2" ry="2" />
<text  x="103.13" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1253" width="0.4" height="15.0" fill="rgb(240,220,41)" rx="2" ry="2" />
<text  x="56.54" y="1263.5" ></text>
</g>
<g >
<title>lj_alloc_malloc (12,432,029 samples, 0.01%)</title><rect x="687.0" y="1541" width="0.2" height="15.0" fill="rgb(221,138,51)" rx="2" ry="2" />
<text  x="690.01" y="1551.5" ></text>
</g>
<g >
<title>mptsas_qcmd (9,551,524 samples, 0.01%)</title><rect x="36.0" y="1269" width="0.1" height="15.0" fill="rgb(225,44,16)" rx="2" ry="2" />
<text  x="38.98" y="1279.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (18,191,985 samples, 0.02%)</title><rect x="1128.4" y="1301" width="0.3" height="15.0" fill="rgb(242,205,24)" rx="2" ry="2" />
<text  x="1131.41" y="1311.5" ></text>
</g>
<g >
<title>up_write (17,991,729 samples, 0.02%)</title><rect x="193.1" y="1237" width="0.2" height="15.0" fill="rgb(213,224,47)" rx="2" ry="2" />
<text  x="196.11" y="1247.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (12,860,843 samples, 0.01%)</title><rect x="180.1" y="1141" width="0.1" height="15.0" fill="rgb(232,3,27)" rx="2" ry="2" />
<text  x="183.05" y="1151.5" ></text>
</g>
<g >
<title>[unknown] (55,262,108 samples, 0.06%)</title><rect x="14.4" y="1653" width="0.7" height="15.0" fill="rgb(213,205,41)" rx="2" ry="2" />
<text  x="17.41" y="1663.5" ></text>
</g>
<g >
<title>execute_command (10,770,341 samples, 0.01%)</title><rect x="10.8" y="1173" width="0.1" height="15.0" fill="rgb(227,126,41)" rx="2" ry="2" />
<text  x="13.80" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="917" width="0.3" height="15.0" fill="rgb(236,216,43)" rx="2" ry="2" />
<text  x="102.79" y="927.5" ></text>
</g>
<g >
<title>ip_route_output_flow (16,010,064 samples, 0.02%)</title><rect x="739.0" y="853" width="0.2" height="15.0" fill="rgb(223,161,39)" rx="2" ry="2" />
<text  x="742.01" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="1109" width="6.5" height="15.0" fill="rgb(233,222,4)" rx="2" ry="2" />
<text  x="103.13" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="981" width="0.3" height="15.0" fill="rgb(208,90,27)" rx="2" ry="2" />
<text  x="102.79" y="991.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (14,637,587 samples, 0.02%)</title><rect x="551.4" y="1013" width="0.2" height="15.0" fill="rgb(243,204,48)" rx="2" ry="2" />
<text  x="554.43" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (74,209,790 samples, 0.08%)</title><rect x="128.6" y="85" width="1.0" height="15.0" fill="rgb(206,27,11)" rx="2" ry="2" />
<text  x="131.58" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="373" width="0.8" height="15.0" fill="rgb(205,112,5)" rx="2" ry="2" />
<text  x="101.56" y="383.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (9,231,037 samples, 0.01%)</title><rect x="544.3" y="901" width="0.1" height="15.0" fill="rgb(216,23,43)" rx="2" ry="2" />
<text  x="547.28" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="741" width="0.8" height="15.0" fill="rgb(252,66,33)" rx="2" ry="2" />
<text  x="101.56" y="751.5" ></text>
</g>
<g >
<title>execute_shell_function (12,397,920 samples, 0.01%)</title><rect x="10.8" y="1365" width="0.2" height="15.0" fill="rgb(225,173,52)" rx="2" ry="2" />
<text  x="13.79" y="1375.5" ></text>
</g>
<g >
<title>irq_exit (13,122,198 samples, 0.01%)</title><rect x="1064.4" y="1477" width="0.1" height="15.0" fill="rgb(246,22,19)" rx="2" ry="2" />
<text  x="1067.37" y="1487.5" ></text>
</g>
<g >
<title>__inet_stream_connect (12,086,191 samples, 0.01%)</title><rect x="700.9" y="1445" width="0.2" height="15.0" fill="rgb(216,190,36)" rx="2" ry="2" />
<text  x="703.93" y="1455.5" ></text>
</g>
<g >
<title>kthread (22,981,556 samples, 0.03%)</title><rect x="46.2" y="1637" width="0.3" height="15.0" fill="rgb(228,180,38)" rx="2" ry="2" />
<text  x="49.23" y="1647.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (185,221,026 samples, 0.21%)</title><rect x="227.3" y="1269" width="2.5" height="15.0" fill="rgb(219,17,31)" rx="2" ry="2" />
<text  x="230.32" y="1279.5" ></text>
</g>
<g >
<title>br_forward (33,862,276 samples, 0.04%)</title><rect x="741.8" y="1093" width="0.5" height="15.0" fill="rgb(212,117,42)" rx="2" ry="2" />
<text  x="744.82" y="1103.5" ></text>
</g>
<g >
<title>do_csum (7,864,969 samples, 0.01%)</title><rect x="523.5" y="1317" width="0.1" height="15.0" fill="rgb(225,191,3)" rx="2" ry="2" />
<text  x="526.49" y="1327.5" ></text>
</g>
<g >
<title>schedule_timeout (10,079,647 samples, 0.01%)</title><rect x="241.3" y="1605" width="0.2" height="15.0" fill="rgb(245,174,37)" rx="2" ry="2" />
<text  x="244.32" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="581" width="0.4" height="15.0" fill="rgb(231,15,24)" rx="2" ry="2" />
<text  x="56.54" y="591.5" ></text>
</g>
<g >
<title>gro_cell_poll (19,983,730 samples, 0.02%)</title><rect x="41.3" y="1557" width="0.3" height="15.0" fill="rgb(231,215,1)" rx="2" ry="2" />
<text  x="44.30" y="1567.5" ></text>
</g>
<g >
<title>_int_free (14,287,510 samples, 0.02%)</title><rect x="77.4" y="981" width="0.2" height="15.0" fill="rgb(224,155,49)" rx="2" ry="2" />
<text  x="80.41" y="991.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (41,060,079 samples, 0.05%)</title><rect x="51.0" y="1637" width="0.5" height="15.0" fill="rgb(224,1,13)" rx="2" ry="2" />
<text  x="53.98" y="1647.5" ></text>
</g>
<g >
<title>alloc_slab_page (21,804,081 samples, 0.02%)</title><rect x="156.0" y="1157" width="0.3" height="15.0" fill="rgb(245,172,5)" rx="2" ry="2" />
<text  x="158.99" y="1167.5" ></text>
</g>
<g >
<title>default_wake_function (57,802,641 samples, 0.06%)</title><rect x="145.6" y="1253" width="0.7" height="15.0" fill="rgb(225,80,34)" rx="2" ry="2" />
<text  x="148.58" y="1263.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (11,312,360 samples, 0.01%)</title><rect x="592.0" y="1429" width="0.2" height="15.0" fill="rgb(250,186,44)" rx="2" ry="2" />
<text  x="595.01" y="1439.5" ></text>
</g>
<g >
<title>dbs_update_util_handler (24,707,122 samples, 0.03%)</title><rect x="254.6" y="1429" width="0.4" height="15.0" fill="rgb(212,179,13)" rx="2" ry="2" />
<text  x="257.63" y="1439.5" ></text>
</g>
<g >
<title>schedule_idle (361,127,855 samples, 0.40%)</title><rect x="589.5" y="1589" width="4.8" height="15.0" fill="rgb(240,91,33)" rx="2" ry="2" />
<text  x="592.52" y="1599.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (9,492,017 samples, 0.01%)</title><rect x="68.3" y="453" width="0.2" height="15.0" fill="rgb(207,223,35)" rx="2" ry="2" />
<text  x="71.34" y="463.5" ></text>
</g>
<g >
<title>x86_pmu_disable (12,021,538 samples, 0.01%)</title><rect x="590.5" y="1509" width="0.2" height="15.0" fill="rgb(214,84,37)" rx="2" ry="2" />
<text  x="593.50" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="261" width="0.4" height="15.0" fill="rgb(226,96,8)" rx="2" ry="2" />
<text  x="56.54" y="271.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (52,781,980 samples, 0.06%)</title><rect x="650.3" y="1429" width="0.7" height="15.0" fill="rgb(252,114,19)" rx="2" ry="2" />
<text  x="653.31" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1429" width="0.9" height="15.0" fill="rgb(208,143,34)" rx="2" ry="2" />
<text  x="134.54" y="1439.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (31,929,265 samples, 0.04%)</title><rect x="706.7" y="1445" width="0.5" height="15.0" fill="rgb(225,214,7)" rx="2" ry="2" />
<text  x="709.73" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="837" width="0.3" height="15.0" fill="rgb(230,204,20)" rx="2" ry="2" />
<text  x="102.79" y="847.5" ></text>
</g>
<g >
<title>do_syscall_64 (110,643,771 samples, 0.12%)</title><rect x="95.5" y="1573" width="1.5" height="15.0" fill="rgb(221,52,43)" rx="2" ry="2" />
<text  x="98.52" y="1583.5" ></text>
</g>
<g >
<title>psi_task_change (20,879,528 samples, 0.02%)</title><rect x="555.0" y="837" width="0.3" height="15.0" fill="rgb(245,220,31)" rx="2" ry="2" />
<text  x="557.99" y="847.5" ></text>
</g>
<g >
<title>operator new (10,657,657 samples, 0.01%)</title><rect x="68.3" y="469" width="0.2" height="15.0" fill="rgb(226,150,22)" rx="2" ry="2" />
<text  x="71.33" y="479.5" ></text>
</g>
<g >
<title>tick_nohz_tick_stopped (9,758,522 samples, 0.01%)</title><rect x="588.6" y="1573" width="0.1" height="15.0" fill="rgb(241,163,9)" rx="2" ry="2" />
<text  x="591.55" y="1583.5" ></text>
</g>
<g >
<title>__GI__IO_default_xsputn (17,374,931 samples, 0.02%)</title><rect x="1106.8" y="1445" width="0.3" height="15.0" fill="rgb(218,145,4)" rx="2" ry="2" />
<text  x="1109.82" y="1455.5" ></text>
</g>
<g >
<title>neigh_resolve_output (17,682,209 samples, 0.02%)</title><rect x="563.9" y="1285" width="0.2" height="15.0" fill="rgb(234,58,43)" rx="2" ry="2" />
<text  x="566.86" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1573" width="0.4" height="15.0" fill="rgb(231,63,15)" rx="2" ry="2" />
<text  x="56.88" y="1583.5" ></text>
</g>
<g >
<title>mongo::FTDCCompressor::addSample (12,178,046 samples, 0.01%)</title><rect x="15.8" y="1541" width="0.2" height="15.0" fill="rgb(246,205,44)" rx="2" ry="2" />
<text  x="18.81" y="1551.5" ></text>
</g>
<g >
<title>submit_bio (367,300,630 samples, 0.41%)</title><rect x="33.5" y="1477" width="4.8" height="15.0" fill="rgb(232,51,20)" rx="2" ry="2" />
<text  x="36.46" y="1487.5" ></text>
</g>
<g >
<title>lj_alloc_f (62,880,897 samples, 0.07%)</title><rect x="852.5" y="1461" width="0.9" height="15.0" fill="rgb(213,60,4)" rx="2" ry="2" />
<text  x="855.54" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,685,735,313 samples, 1.89%)</title><rect x="59.4" y="1205" width="22.3" height="15.0" fill="rgb(233,94,41)" rx="2" ry="2" />
<text  x="62.36" y="1215.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1157" width="0.4" height="15.0" fill="rgb(232,64,33)" rx="2" ry="2" />
<text  x="56.54" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="597" width="3.0" height="15.0" fill="rgb(241,163,23)" rx="2" ry="2" />
<text  x="131.55" y="607.5" ></text>
</g>
<g >
<title>mempool_free (37,127,882 samples, 0.04%)</title><rect x="514.4" y="1317" width="0.5" height="15.0" fill="rgb(224,141,28)" rx="2" ry="2" />
<text  x="517.41" y="1327.5" ></text>
</g>
<g >
<title>__es_remove_extent (28,163,530 samples, 0.03%)</title><rect x="163.3" y="1205" width="0.4" height="15.0" fill="rgb(207,38,42)" rx="2" ry="2" />
<text  x="166.30" y="1215.5" ></text>
</g>
<g >
<title>propagatemark (1,599,603,109 samples, 1.79%)</title><rect x="899.2" y="1493" width="21.2" height="15.0" fill="rgb(236,59,50)" rx="2" ry="2" />
<text  x="902.25" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11,272,399 samples, 0.01%)</title><rect x="1189.5" y="1653" width="0.2" height="15.0" fill="rgb(228,16,31)" rx="2" ry="2" />
<text  x="1192.53" y="1663.5" ></text>
</g>
<g >
<title>__udp4_lib_lookup (9,133,730 samples, 0.01%)</title><rect x="528.1" y="1253" width="0.2" height="15.0" fill="rgb(243,183,2)" rx="2" ry="2" />
<text  x="531.13" y="1263.5" ></text>
</g>
<g >
<title>handle_irq_event (10,826,025 samples, 0.01%)</title><rect x="509.8" y="1493" width="0.2" height="15.0" fill="rgb(235,37,8)" rx="2" ry="2" />
<text  x="512.84" y="1503.5" ></text>
</g>
<g >
<title>nf_hook_slow (142,676,195 samples, 0.16%)</title><rect x="535.9" y="1173" width="1.9" height="15.0" fill="rgb(216,10,40)" rx="2" ry="2" />
<text  x="538.92" y="1183.5" ></text>
</g>
<g >
<title>memset (21,134,265 samples, 0.02%)</title><rect x="31.5" y="1429" width="0.3" height="15.0" fill="rgb(246,35,34)" rx="2" ry="2" />
<text  x="34.48" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="997" width="18.3" height="15.0" fill="rgb(228,3,31)" rx="2" ry="2" />
<text  x="113.16" y="1007.5" ></text>
</g>
<g >
<title>__inet_lookup_established (13,246,104 samples, 0.01%)</title><rect x="571.4" y="1349" width="0.2" height="15.0" fill="rgb(228,19,54)" rx="2" ry="2" />
<text  x="574.40" y="1359.5" ></text>
</g>
<g >
<title>vxlan_get_route (20,163,017 samples, 0.02%)</title><rect x="1157.3" y="661" width="0.2" height="15.0" fill="rgb(238,169,51)" rx="2" ry="2" />
<text  x="1160.26" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="277" width="1.4" height="15.0" fill="rgb(241,48,36)" rx="2" ry="2" />
<text  x="100.15" y="287.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (1,257,924,301 samples, 1.41%)</title><rect x="541.5" y="1333" width="16.7" height="15.0" fill="rgb(213,155,15)" rx="2" ry="2" />
<text  x="544.51" y="1343.5" ></text>
</g>
<g >
<title>schedule (11,721,854 samples, 0.01%)</title><rect x="13.3" y="1493" width="0.1" height="15.0" fill="rgb(235,45,27)" rx="2" ry="2" />
<text  x="16.29" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="693" width="0.9" height="15.0" fill="rgb(219,116,29)" rx="2" ry="2" />
<text  x="134.54" y="703.5" ></text>
</g>
<g >
<title>timer_interrupt (114,670,320 samples, 0.13%)</title><rect x="639.4" y="1301" width="1.5" height="15.0" fill="rgb(253,130,39)" rx="2" ry="2" />
<text  x="642.36" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1157" width="1.4" height="15.0" fill="rgb(231,71,27)" rx="2" ry="2" />
<text  x="100.15" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1173" width="0.8" height="15.0" fill="rgb(244,19,19)" rx="2" ry="2" />
<text  x="101.56" y="1183.5" ></text>
</g>
<g >
<title>_IO_no_init (14,062,518 samples, 0.02%)</title><rect x="678.4" y="1589" width="0.2" height="15.0" fill="rgb(237,39,47)" rx="2" ry="2" />
<text  x="681.40" y="1599.5" ></text>
</g>
<g >
<title>socket_writeable (33,490,860,127 samples, 37.56%)</title><rect x="745.0" y="1573" width="443.2" height="15.0" fill="rgb(241,100,54)" rx="2" ry="2" />
<text  x="748.02" y="1583.5" >socket_writeable</text>
</g>
<g >
<title>rcu_idle_enter (9,504,504 samples, 0.01%)</title><rect x="595.8" y="1605" width="0.1" height="15.0" fill="rgb(246,103,0)" rx="2" ry="2" />
<text  x="598.77" y="1615.5" ></text>
</g>
<g >
<title>lua_pushlstring (35,732,762 samples, 0.04%)</title><rect x="686.7" y="1589" width="0.5" height="15.0" fill="rgb(226,194,32)" rx="2" ry="2" />
<text  x="689.72" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1493" width="0.9" height="15.0" fill="rgb(232,89,3)" rx="2" ry="2" />
<text  x="134.54" y="1503.5" ></text>
</g>
<g >
<title>br_dev_queue_push_xmit (24,629,927 samples, 0.03%)</title><rect x="550.2" y="789" width="0.3" height="15.0" fill="rgb(253,36,24)" rx="2" ry="2" />
<text  x="553.18" y="799.5" ></text>
</g>
<g >
<title>udp_gro_receive (99,189,218 samples, 0.11%)</title><rect x="523.3" y="1349" width="1.3" height="15.0" fill="rgb(231,69,35)" rx="2" ry="2" />
<text  x="526.28" y="1359.5" ></text>
</g>
<g >
<title>lj_BC_JFUNCV (43,518,528 samples, 0.05%)</title><rect x="1030.3" y="1541" width="0.6" height="15.0" fill="rgb(249,103,43)" rx="2" ry="2" />
<text  x="1033.30" y="1551.5" ></text>
</g>
<g >
<title>ttwu_do_activate (42,339,543 samples, 0.05%)</title><rect x="145.8" y="1221" width="0.5" height="15.0" fill="rgb(231,180,37)" rx="2" ry="2" />
<text  x="148.76" y="1231.5" ></text>
</g>
<g >
<title>br_fdb_find_rcu (8,358,033 samples, 0.01%)</title><rect x="541.7" y="1317" width="0.1" height="15.0" fill="rgb(249,79,14)" rx="2" ry="2" />
<text  x="544.68" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="501" width="0.8" height="15.0" fill="rgb(240,203,11)" rx="2" ry="2" />
<text  x="101.56" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="213" width="18.3" height="15.0" fill="rgb(235,61,26)" rx="2" ry="2" />
<text  x="113.16" y="223.5" ></text>
</g>
<g >
<title>run_rebalance_domains (171,815,583 samples, 0.19%)</title><rect x="252.8" y="1477" width="2.3" height="15.0" fill="rgb(251,62,51)" rx="2" ry="2" />
<text  x="255.79" y="1487.5" ></text>
</g>
<g >
<title>__mpn_rshift (11,325,992 samples, 0.01%)</title><rect x="1112.0" y="1429" width="0.2" height="15.0" fill="rgb(215,58,12)" rx="2" ry="2" />
<text  x="1115.05" y="1439.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (11,414,979 samples, 0.01%)</title><rect x="123.8" y="85" width="0.2" height="15.0" fill="rgb(238,125,5)" rx="2" ry="2" />
<text  x="126.82" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="661" width="0.3" height="15.0" fill="rgb(248,26,19)" rx="2" ry="2" />
<text  x="102.79" y="671.5" ></text>
</g>
<g >
<title>_dl_start (8,848,269 samples, 0.01%)</title><rect x="10.3" y="1637" width="0.1" height="15.0" fill="rgb(245,10,1)" rx="2" ry="2" />
<text  x="13.28" y="1647.5" ></text>
</g>
<g >
<title>gc_mark_gcroot (45,765,845 samples, 0.05%)</title><rect x="817.5" y="1477" width="0.6" height="15.0" fill="rgb(225,197,30)" rx="2" ry="2" />
<text  x="820.49" y="1487.5" ></text>
</g>
<g >
<title>blk_mq_run_hw_queue (69,362,889 samples, 0.08%)</title><rect x="35.9" y="1381" width="0.9" height="15.0" fill="rgb(236,83,1)" rx="2" ry="2" />
<text  x="38.89" y="1391.5" ></text>
</g>
<g >
<title>_int_free (10,169,162 samples, 0.01%)</title><rect x="72.8" y="725" width="0.2" height="15.0" fill="rgb(223,8,49)" rx="2" ry="2" />
<text  x="75.84" y="735.5" ></text>
</g>
<g >
<title>execute_command (11,864,933 samples, 0.01%)</title><rect x="10.8" y="1221" width="0.1" height="15.0" fill="rgb(215,116,46)" rx="2" ry="2" />
<text  x="13.79" y="1231.5" ></text>
</g>
<g >
<title>ip_rcv (58,912,310 samples, 0.07%)</title><rect x="42.1" y="1333" width="0.8" height="15.0" fill="rgb(254,130,31)" rx="2" ry="2" />
<text  x="45.10" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="741" width="18.3" height="15.0" fill="rgb(249,110,17)" rx="2" ry="2" />
<text  x="113.16" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="837" width="1.4" height="15.0" fill="rgb(222,136,25)" rx="2" ry="2" />
<text  x="100.15" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="597" width="0.8" height="15.0" fill="rgb(213,169,36)" rx="2" ry="2" />
<text  x="101.56" y="607.5" ></text>
</g>
<g >
<title>ip_route_me_harder (109,475,572 samples, 0.12%)</title><rect x="1166.0" y="853" width="1.5" height="15.0" fill="rgb(226,152,26)" rx="2" ry="2" />
<text  x="1169.02" y="863.5" ></text>
</g>
<g >
<title>ip_route_output_key_hash_rcu (25,757,244 samples, 0.03%)</title><rect x="731.0" y="1125" width="0.3" height="15.0" fill="rgb(236,155,42)" rx="2" ry="2" />
<text  x="733.97" y="1135.5" ></text>
</g>
<g >
<title>operator new (14,291,223 samples, 0.02%)</title><rect x="92.7" y="1605" width="0.2" height="15.0" fill="rgb(251,149,24)" rx="2" ry="2" />
<text  x="95.71" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="485" width="0.8" height="15.0" fill="rgb(235,162,53)" rx="2" ry="2" />
<text  x="101.56" y="495.5" ></text>
</g>
<g >
<title>dev_queue_xmit (715,933,845 samples, 0.80%)</title><rect x="1148.3" y="741" width="9.5" height="15.0" fill="rgb(239,40,30)" rx="2" ry="2" />
<text  x="1151.31" y="751.5" ></text>
</g>
<g >
<title>ip_vs_proto_data_get (12,558,845 samples, 0.01%)</title><rect x="1169.8" y="901" width="0.1" height="15.0" fill="rgb(224,40,30)" rx="2" ry="2" />
<text  x="1172.75" y="911.5" ></text>
</g>
<g >
<title>lj_str_fromnum (899,397,525 samples, 1.01%)</title><rect x="1104.0" y="1525" width="11.9" height="15.0" fill="rgb(246,16,47)" rx="2" ry="2" />
<text  x="1107.00" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1333" width="18.3" height="15.0" fill="rgb(218,80,47)" rx="2" ry="2" />
<text  x="113.16" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="309" width="0.4" height="15.0" fill="rgb(229,78,48)" rx="2" ry="2" />
<text  x="56.54" y="319.5" ></text>
</g>
<g >
<title>find_next_bit (50,583,981 samples, 0.06%)</title><rect x="587.0" y="1509" width="0.7" height="15.0" fill="rgb(209,106,14)" rx="2" ry="2" />
<text  x="590.03" y="1519.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (38,025,745 samples, 0.04%)</title><rect x="180.4" y="1141" width="0.5" height="15.0" fill="rgb(243,86,21)" rx="2" ry="2" />
<text  x="183.39" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="581" width="6.5" height="15.0" fill="rgb(230,218,33)" rx="2" ry="2" />
<text  x="103.13" y="591.5" ></text>
</g>
<g >
<title>process_backlog (11,498,099 samples, 0.01%)</title><rect x="592.0" y="1461" width="0.2" height="15.0" fill="rgb(231,132,15)" rx="2" ry="2" />
<text  x="595.00" y="1471.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (41,772,674 samples, 0.05%)</title><rect x="179.7" y="1157" width="0.6" height="15.0" fill="rgb(219,179,27)" rx="2" ry="2" />
<text  x="182.70" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="485" width="0.9" height="15.0" fill="rgb(213,219,31)" rx="2" ry="2" />
<text  x="134.54" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="981" width="0.8" height="15.0" fill="rgb(226,105,11)" rx="2" ry="2" />
<text  x="101.56" y="991.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (27,536,471 samples, 0.03%)</title><rect x="594.7" y="1589" width="0.4" height="15.0" fill="rgb(214,64,53)" rx="2" ry="2" />
<text  x="597.73" y="1599.5" ></text>
</g>
<g >
<title>getname_flags (52,468,625 samples, 0.06%)</title><rect x="90.0" y="1477" width="0.7" height="15.0" fill="rgb(220,138,11)" rx="2" ry="2" />
<text  x="92.98" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1461" width="0.3" height="15.0" fill="rgb(223,183,22)" rx="2" ry="2" />
<text  x="102.79" y="1471.5" ></text>
</g>
<g >
<title>pick_next_task_fair (8,609,301 samples, 0.01%)</title><rect x="44.2" y="1573" width="0.1" height="15.0" fill="rgb(251,180,53)" rx="2" ry="2" />
<text  x="47.22" y="1583.5" ></text>
</g>
<g >
<title>ep_modify (15,934,623 samples, 0.02%)</title><rect x="746.7" y="1477" width="0.2" height="15.0" fill="rgb(227,8,0)" rx="2" ry="2" />
<text  x="749.66" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (473,675,089 samples, 0.53%)</title><rect x="100.1" y="165" width="6.3" height="15.0" fill="rgb(247,123,41)" rx="2" ry="2" />
<text  x="103.13" y="175.5" ></text>
</g>
<g >
<title>jbd2__journal_start (8,559,746 samples, 0.01%)</title><rect x="239.2" y="1301" width="0.1" height="15.0" fill="rgb(216,223,24)" rx="2" ry="2" />
<text  x="242.17" y="1311.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (25,782,780 samples, 0.03%)</title><rect x="1151.8" y="549" width="0.4" height="15.0" fill="rgb(253,75,13)" rx="2" ry="2" />
<text  x="1154.82" y="559.5" ></text>
</g>
<g >
<title>schedule (435,968,929 samples, 0.49%)</title><rect x="707.2" y="1445" width="5.8" height="15.0" fill="rgb(244,23,20)" rx="2" ry="2" />
<text  x="710.19" y="1455.5" ></text>
</g>
<g >
<title>deflate (19,265,537 samples, 0.02%)</title><rect x="16.1" y="1509" width="0.2" height="15.0" fill="rgb(235,204,43)" rx="2" ry="2" />
<text  x="19.08" y="1519.5" ></text>
</g>
<g >
<title>br_handle_frame (60,229,576 samples, 0.07%)</title><rect x="251.1" y="1397" width="0.8" height="15.0" fill="rgb(239,188,1)" rx="2" ry="2" />
<text  x="254.09" y="1407.5" ></text>
</g>
<g >
<title>lapic_timer_shutdown (25,451,432 samples, 0.03%)</title><rect x="504.0" y="1477" width="0.4" height="15.0" fill="rgb(223,188,37)" rx="2" ry="2" />
<text  x="507.01" y="1487.5" ></text>
</g>
<g >
<title>__vfprintf_internal (736,001,767 samples, 0.83%)</title><rect x="1105.2" y="1461" width="9.8" height="15.0" fill="rgb(244,166,6)" rx="2" ry="2" />
<text  x="1108.24" y="1471.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (14,614,454 samples, 0.02%)</title><rect x="702.0" y="1557" width="0.2" height="15.0" fill="rgb(230,94,25)" rx="2" ry="2" />
<text  x="704.96" y="1567.5" ></text>
</g>
<g >
<title>mongo::FTDCBSONUtil::extractMetricsFromDocument (10,911,326 samples, 0.01%)</title><rect x="15.8" y="1525" width="0.2" height="15.0" fill="rgb(225,212,1)" rx="2" ry="2" />
<text  x="18.83" y="1535.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (10,177,762 samples, 0.01%)</title><rect x="700.9" y="1397" width="0.2" height="15.0" fill="rgb(254,39,20)" rx="2" ry="2" />
<text  x="703.94" y="1407.5" ></text>
</g>
<g >
<title>string_quote_removal (9,130,931 samples, 0.01%)</title><rect x="10.8" y="1061" width="0.1" height="15.0" fill="rgb(247,68,35)" rx="2" ry="2" />
<text  x="13.80" y="1071.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (85,149,495 samples, 0.10%)</title><rect x="206.6" y="1221" width="1.1" height="15.0" fill="rgb(235,183,8)" rx="2" ry="2" />
<text  x="209.55" y="1231.5" ></text>
</g>
<g >
<title>ip_forward (24,931,568 samples, 0.03%)</title><rect x="43.1" y="1477" width="0.3" height="15.0" fill="rgb(219,38,16)" rx="2" ry="2" />
<text  x="46.11" y="1487.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (19,324,615 samples, 0.02%)</title><rect x="1180.8" y="965" width="0.2" height="15.0" fill="rgb(225,163,27)" rx="2" ry="2" />
<text  x="1183.76" y="975.5" ></text>
</g>
<g >
<title>__inet_lookup_established (19,581,206 samples, 0.02%)</title><rect x="546.5" y="1109" width="0.3" height="15.0" fill="rgb(240,118,17)" rx="2" ry="2" />
<text  x="549.53" y="1119.5" ></text>
</g>
<g >
<title>nf_hook_slow (51,407,858 samples, 0.06%)</title><rect x="738.6" y="901" width="0.7" height="15.0" fill="rgb(219,162,46)" rx="2" ry="2" />
<text  x="741.64" y="911.5" ></text>
</g>
<g >
<title>execute_command_internal (32,101,929 samples, 0.04%)</title><rect x="10.6" y="1429" width="0.5" height="15.0" fill="rgb(220,40,17)" rx="2" ry="2" />
<text  x="13.64" y="1439.5" ></text>
</g>
<g >
<title>validate_xmit_skb (7,859,071 samples, 0.01%)</title><rect x="544.3" y="885" width="0.1" height="15.0" fill="rgb(233,74,34)" rx="2" ry="2" />
<text  x="547.30" y="895.5" ></text>
</g>
<g >
<title>memset (8,136,476 samples, 0.01%)</title><rect x="1130.1" y="1285" width="0.1" height="15.0" fill="rgb(252,37,52)" rx="2" ry="2" />
<text  x="1133.08" y="1295.5" ></text>
</g>
<g >
<title>udp_set_csum (13,489,324 samples, 0.02%)</title><rect x="1156.9" y="645" width="0.2" height="15.0" fill="rgb(225,121,50)" rx="2" ry="2" />
<text  x="1159.90" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="325" width="6.5" height="15.0" fill="rgb(205,220,53)" rx="2" ry="2" />
<text  x="103.13" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1013" width="3.0" height="15.0" fill="rgb(217,213,0)" rx="2" ry="2" />
<text  x="131.55" y="1023.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (541,670,072 samples, 0.61%)</title><rect x="705.8" y="1477" width="7.2" height="15.0" fill="rgb(246,85,40)" rx="2" ry="2" />
<text  x="708.79" y="1487.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (23,543,568 samples, 0.03%)</title><rect x="1129.6" y="1285" width="0.3" height="15.0" fill="rgb(232,135,45)" rx="2" ry="2" />
<text  x="1132.57" y="1295.5" ></text>
</g>
<g >
<title>__alloc_skb (109,449,543 samples, 0.12%)</title><rect x="1128.8" y="1301" width="1.4" height="15.0" fill="rgb(221,19,53)" rx="2" ry="2" />
<text  x="1131.76" y="1311.5" ></text>
</g>
<g >
<title>activate_task (82,807,809 samples, 0.09%)</title><rect x="247.8" y="1413" width="1.1" height="15.0" fill="rgb(243,102,50)" rx="2" ry="2" />
<text  x="250.76" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="885" width="0.4" height="15.0" fill="rgb(216,157,25)" rx="2" ry="2" />
<text  x="56.54" y="895.5" ></text>
</g>
<g >
<title>deactivate_task (32,975,813 samples, 0.04%)</title><rect x="140.3" y="1413" width="0.4" height="15.0" fill="rgb(254,133,53)" rx="2" ry="2" />
<text  x="143.31" y="1423.5" ></text>
</g>
<g >
<title>unlock_page (8,453,621 samples, 0.01%)</title><rect x="38.3" y="1493" width="0.2" height="15.0" fill="rgb(242,73,30)" rx="2" ry="2" />
<text  x="41.34" y="1503.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (430,897,924 samples, 0.48%)</title><rect x="533.4" y="1413" width="5.7" height="15.0" fill="rgb(227,120,2)" rx="2" ry="2" />
<text  x="536.41" y="1423.5" ></text>
</g>
<g >
<title>ext4_es_insert_extent (209,881,568 samples, 0.24%)</title><rect x="161.9" y="1221" width="2.8" height="15.0" fill="rgb(234,67,48)" rx="2" ry="2" />
<text  x="164.94" y="1231.5" ></text>
</g>
<g >
<title>__tick_broadcast_oneshot_control (65,151,304 samples, 0.07%)</title><rect x="638.0" y="1445" width="0.9" height="15.0" fill="rgb(219,29,0)" rx="2" ry="2" />
<text  x="641.03" y="1455.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (585,928,772 samples, 0.66%)</title><rect x="525.4" y="1413" width="7.7" height="15.0" fill="rgb(247,187,23)" rx="2" ry="2" />
<text  x="528.36" y="1423.5" ></text>
</g>
<g >
<title>ip_queue_xmit (223,439,200 samples, 0.25%)</title><rect x="548.2" y="1013" width="2.9" height="15.0" fill="rgb(246,191,43)" rx="2" ry="2" />
<text  x="551.18" y="1023.5" ></text>
</g>
<g >
<title>validate_xmit_skb (32,542,269 samples, 0.04%)</title><rect x="1179.9" y="1109" width="0.4" height="15.0" fill="rgb(231,33,33)" rx="2" ry="2" />
<text  x="1182.91" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (90,116,906 samples, 0.10%)</title><rect x="82.8" y="1317" width="1.2" height="15.0" fill="rgb(247,168,45)" rx="2" ry="2" />
<text  x="85.81" y="1327.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (7,782,451 samples, 0.01%)</title><rect x="136.1" y="1589" width="0.2" height="15.0" fill="rgb(236,187,23)" rx="2" ry="2" />
<text  x="139.15" y="1599.5" ></text>
</g>
<g >
<title>br_pass_frame_up (13,881,874 samples, 0.02%)</title><rect x="251.6" y="1317" width="0.2" height="15.0" fill="rgb(220,203,51)" rx="2" ry="2" />
<text  x="254.62" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="325" width="0.8" height="15.0" fill="rgb(219,113,9)" rx="2" ry="2" />
<text  x="101.56" y="335.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (8,443,168 samples, 0.01%)</title><rect x="221.3" y="1205" width="0.1" height="15.0" fill="rgb(222,157,5)" rx="2" ry="2" />
<text  x="224.30" y="1215.5" ></text>
</g>
<g >
<title>vxlan_xmit (24,480,733 samples, 0.03%)</title><rect x="251.3" y="1093" width="0.3" height="15.0" fill="rgb(233,50,37)" rx="2" ry="2" />
<text  x="254.25" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1109" width="0.8" height="15.0" fill="rgb(206,144,49)" rx="2" ry="2" />
<text  x="101.56" y="1119.5" ></text>
</g>
<g >
<title>[sshd] (28,499,758 samples, 0.03%)</title><rect x="242.0" y="1605" width="0.4" height="15.0" fill="rgb(228,129,31)" rx="2" ry="2" />
<text  x="244.99" y="1615.5" ></text>
</g>
<g >
<title>_int_free (11,431,007 samples, 0.01%)</title><rect x="97.9" y="181" width="0.2" height="15.0" fill="rgb(218,217,39)" rx="2" ry="2" />
<text  x="100.91" y="191.5" ></text>
</g>
<g >
<title>_start (11,220,815 samples, 0.01%)</title><rect x="1188.5" y="1653" width="0.2" height="15.0" fill="rgb(242,4,34)" rx="2" ry="2" />
<text  x="1191.51" y="1663.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (10,197,262 samples, 0.01%)</title><rect x="184.6" y="1157" width="0.1" height="15.0" fill="rgb(231,2,17)" rx="2" ry="2" />
<text  x="187.60" y="1167.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (242,339,847 samples, 0.27%)</title><rect x="171.8" y="1125" width="3.2" height="15.0" fill="rgb(216,78,26)" rx="2" ry="2" />
<text  x="174.81" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="501" width="0.4" height="15.0" fill="rgb(240,80,5)" rx="2" ry="2" />
<text  x="56.54" y="511.5" ></text>
</g>
<g >
<title>ip_sabotage_in (12,965,109 samples, 0.01%)</title><rect x="251.6" y="1205" width="0.2" height="15.0" fill="rgb(218,225,18)" rx="2" ry="2" />
<text  x="254.63" y="1215.5" ></text>
</g>
<g >
<title>[perf-11814.map] (116,919,708 samples, 0.13%)</title><rect x="51.6" y="1653" width="1.6" height="15.0" fill="rgb(213,132,13)" rx="2" ry="2" />
<text  x="54.62" y="1663.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (13,442,238 samples, 0.02%)</title><rect x="64.8" y="261" width="0.2" height="15.0" fill="rgb(244,160,20)" rx="2" ry="2" />
<text  x="67.77" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,621,857 samples, 0.55%)</title><rect x="100.1" y="1301" width="6.5" height="15.0" fill="rgb(248,189,18)" rx="2" ry="2" />
<text  x="103.13" y="1311.5" ></text>
</g>
<g >
<title>lapic_timer_shutdown (11,315,638 samples, 0.01%)</title><rect x="504.7" y="1493" width="0.2" height="15.0" fill="rgb(238,128,27)" rx="2" ry="2" />
<text  x="507.72" y="1503.5" ></text>
</g>
<g >
<title>tcp_poll (9,848,073 samples, 0.01%)</title><rect x="700.3" y="1429" width="0.1" height="15.0" fill="rgb(222,151,52)" rx="2" ry="2" />
<text  x="703.31" y="1439.5" ></text>
</g>
<g >
<title>lapic_timer_broadcast (24,442,687 samples, 0.03%)</title><rect x="602.5" y="1269" width="0.4" height="15.0" fill="rgb(234,179,48)" rx="2" ry="2" />
<text  x="605.54" y="1279.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (10,177,762 samples, 0.01%)</title><rect x="700.9" y="1365" width="0.2" height="15.0" fill="rgb(222,201,51)" rx="2" ry="2" />
<text  x="703.94" y="1375.5" ></text>
</g>
<g >
<title>__wake_up (67,133,850 samples, 0.08%)</title><rect x="145.5" y="1317" width="0.9" height="15.0" fill="rgb(230,124,51)" rx="2" ry="2" />
<text  x="148.49" y="1327.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (15,000,344 samples, 0.02%)</title><rect x="171.0" y="1125" width="0.2" height="15.0" fill="rgb(217,168,4)" rx="2" ry="2" />
<text  x="174.05" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="693" width="18.3" height="15.0" fill="rgb(232,121,46)" rx="2" ry="2" />
<text  x="113.16" y="703.5" ></text>
</g>
<g >
<title>execute_command_internal (11,864,933 samples, 0.01%)</title><rect x="10.8" y="1205" width="0.1" height="15.0" fill="rgb(253,18,36)" rx="2" ry="2" />
<text  x="13.79" y="1215.5" ></text>
</g>
<g >
<title>nf_conntrack_in (19,026,654 samples, 0.02%)</title><rect x="543.2" y="965" width="0.3" height="15.0" fill="rgb(215,163,47)" rx="2" ry="2" />
<text  x="546.21" y="975.5" ></text>
</g>
<g >
<title>jbd2/sda1-8 (1,800,516,281 samples, 2.02%)</title><rect x="16.5" y="1669" width="23.8" height="15.0" fill="rgb(252,38,33)" rx="2" ry="2" />
<text  x="19.45" y="1679.5" >j..</text>
</g>
<g >
<title>zmalloc (23,194,116 samples, 0.03%)</title><rect x="747.1" y="1541" width="0.4" height="15.0" fill="rgb(245,159,40)" rx="2" ry="2" />
<text  x="750.14" y="1551.5" ></text>
</g>
<g >
<title>__fget_light (20,988,110 samples, 0.02%)</title><rect x="699.8" y="1461" width="0.2" height="15.0" fill="rgb(228,2,36)" rx="2" ry="2" />
<text  x="702.77" y="1471.5" ></text>
</g>
<g >
<title>native_write_msr (9,944,172 samples, 0.01%)</title><rect x="243.0" y="1653" width="0.1" height="15.0" fill="rgb(247,39,33)" rx="2" ry="2" />
<text  x="245.96" y="1663.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (17,342,109 samples, 0.02%)</title><rect x="20.1" y="1461" width="0.3" height="15.0" fill="rgb(215,51,5)" rx="2" ry="2" />
<text  x="23.14" y="1471.5" ></text>
</g>
<g >
<title>uv__stream_io (12,738,243 samples, 0.01%)</title><rect x="133.4" y="1621" width="0.2" height="15.0" fill="rgb(223,92,36)" rx="2" ry="2" />
<text  x="136.38" y="1631.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (40,177,056 samples, 0.05%)</title><rect x="185.9" y="1173" width="0.6" height="15.0" fill="rgb(212,70,39)" rx="2" ry="2" />
<text  x="188.95" y="1183.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (159,591,469 samples, 0.18%)</title><rect x="155.0" y="1237" width="2.1" height="15.0" fill="rgb(227,172,43)" rx="2" ry="2" />
<text  x="158.01" y="1247.5" ></text>
</g>
<g >
<title>__check_object_size (19,185,763 samples, 0.02%)</title><rect x="727.7" y="1285" width="0.2" height="15.0" fill="rgb(212,124,43)" rx="2" ry="2" />
<text  x="730.66" y="1295.5" ></text>
</g>
<g >
<title>netif_skb_features (9,425,891 samples, 0.01%)</title><rect x="1155.4" y="469" width="0.1" height="15.0" fill="rgb(230,96,43)" rx="2" ry="2" />
<text  x="1158.38" y="479.5" ></text>
</g>
<g >
<title>node::EmitToJSStreamListener::OnStreamRead (7,960,953 samples, 0.01%)</title><rect x="133.4" y="1573" width="0.1" height="15.0" fill="rgb(238,2,18)" rx="2" ry="2" />
<text  x="136.40" y="1583.5" ></text>
</g>
<g >
<title>__dev_forward_skb (8,011,776 samples, 0.01%)</title><rect x="550.3" y="709" width="0.1" height="15.0" fill="rgb(224,199,34)" rx="2" ry="2" />
<text  x="553.28" y="719.5" ></text>
</g>
<g >
<title>lj_alloc_f (112,596,274 samples, 0.13%)</title><rect x="965.3" y="1477" width="1.5" height="15.0" fill="rgb(241,217,46)" rx="2" ry="2" />
<text  x="968.33" y="1487.5" ></text>
</g>
<g >
<title>mongo::FTDCBSONUtil::(anonymous namespace)::extractMetricsFromDocument (10,505,036 samples, 0.01%)</title><rect x="15.8" y="1477" width="0.2" height="15.0" fill="rgb(237,197,39)" rx="2" ry="2" />
<text  x="18.83" y="1487.5" ></text>
</g>
<g >
<title>__wake_up_common (13,901,581 samples, 0.02%)</title><rect x="217.3" y="1221" width="0.2" height="15.0" fill="rgb(215,110,23)" rx="2" ry="2" />
<text  x="220.33" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1141" width="18.3" height="15.0" fill="rgb(220,65,42)" rx="2" ry="2" />
<text  x="113.16" y="1151.5" ></text>
</g>
<g >
<title>__x64_sys_poll (115,119,898 samples, 0.13%)</title><rect x="139.5" y="1525" width="1.5" height="15.0" fill="rgb(226,168,16)" rx="2" ry="2" />
<text  x="142.47" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (8,406,058 samples, 0.01%)</title><rect x="76.8" y="917" width="0.1" height="15.0" fill="rgb(246,26,27)" rx="2" ry="2" />
<text  x="79.80" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="581" width="0.8" height="15.0" fill="rgb(243,76,4)" rx="2" ry="2" />
<text  x="101.56" y="591.5" ></text>
</g>
<g >
<title>lj_math_random_step (511,438,758 samples, 0.57%)</title><rect x="1021.2" y="1509" width="6.8" height="15.0" fill="rgb(238,221,11)" rx="2" ry="2" />
<text  x="1024.24" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="341" width="1.4" height="15.0" fill="rgb(235,136,33)" rx="2" ry="2" />
<text  x="100.15" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1141" width="0.3" height="15.0" fill="rgb(250,25,31)" rx="2" ry="2" />
<text  x="102.79" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="293" width="0.3" height="15.0" fill="rgb(238,191,38)" rx="2" ry="2" />
<text  x="102.79" y="303.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (16,598,927 samples, 0.02%)</title><rect x="41.3" y="1477" width="0.2" height="15.0" fill="rgb(211,20,37)" rx="2" ry="2" />
<text  x="44.31" y="1487.5" ></text>
</g>
<g >
<title>local.runtime.mstart1 (25,960,426 samples, 0.03%)</title><rect x="13.1" y="1621" width="0.4" height="15.0" fill="rgb(224,171,26)" rx="2" ry="2" />
<text  x="16.11" y="1631.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_pre_routing (27,402,875 samples, 0.03%)</title><rect x="560.7" y="1349" width="0.3" height="15.0" fill="rgb(222,23,47)" rx="2" ry="2" />
<text  x="563.68" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1349" width="3.6" height="15.0" fill="rgb(208,141,8)" rx="2" ry="2" />
<text  x="109.59" y="1359.5" ></text>
</g>
<g >
<title>ext4_journal_check_start (12,729,597 samples, 0.01%)</title><rect x="150.7" y="1269" width="0.2" height="15.0" fill="rgb(225,174,16)" rx="2" ry="2" />
<text  x="153.71" y="1279.5" ></text>
</g>
<g >
<title>operator new (13,663,436 samples, 0.02%)</title><rect x="80.0" y="1109" width="0.2" height="15.0" fill="rgb(216,67,42)" rx="2" ry="2" />
<text  x="82.99" y="1119.5" ></text>
</g>
<g >
<title>get_page_from_freelist (21,727,661 samples, 0.02%)</title><rect x="31.1" y="1301" width="0.3" height="15.0" fill="rgb(217,180,10)" rx="2" ry="2" />
<text  x="34.09" y="1311.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (72,349,585 samples, 0.08%)</title><rect x="88.7" y="1445" width="1.0" height="15.0" fill="rgb(234,97,1)" rx="2" ry="2" />
<text  x="91.72" y="1455.5" ></text>
</g>
<g >
<title>start_thread (312,697,571 samples, 0.35%)</title><rect x="133.6" y="1637" width="4.1" height="15.0" fill="rgb(226,23,39)" rx="2" ry="2" />
<text  x="136.59" y="1647.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (73,199,546 samples, 0.08%)</title><rect x="239.0" y="1381" width="1.0" height="15.0" fill="rgb(212,144,33)" rx="2" ry="2" />
<text  x="242.03" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (95,140,174 samples, 0.11%)</title><rect x="68.7" y="549" width="1.3" height="15.0" fill="rgb(217,99,21)" rx="2" ry="2" />
<text  x="71.75" y="559.5" ></text>
</g>
<g >
<title>ip_queue_xmit (14,901,521 samples, 0.02%)</title><rect x="42.3" y="1109" width="0.2" height="15.0" fill="rgb(206,161,33)" rx="2" ry="2" />
<text  x="45.28" y="1119.5" ></text>
</g>
<g >
<title>down_write (14,591,835 samples, 0.02%)</title><rect x="223.6" y="1285" width="0.1" height="15.0" fill="rgb(226,207,13)" rx="2" ry="2" />
<text  x="226.55" y="1295.5" ></text>
</g>
<g >
<title>[anon] (113,443,922 samples, 0.13%)</title><rect x="48.2" y="1653" width="1.6" height="15.0" fill="rgb(235,96,32)" rx="2" ry="2" />
<text  x="51.25" y="1663.5" ></text>
</g>
<g >
<title>try_to_wake_up (104,353,057 samples, 0.12%)</title><rect x="247.6" y="1445" width="1.4" height="15.0" fill="rgb(221,226,14)" rx="2" ry="2" />
<text  x="250.57" y="1455.5" ></text>
</g>
<g >
<title>ext4_write_end (1,113,711,631 samples, 1.25%)</title><rect x="215.1" y="1301" width="14.8" height="15.0" fill="rgb(230,83,13)" rx="2" ry="2" />
<text  x="218.13" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1349" width="1.4" height="15.0" fill="rgb(218,189,46)" rx="2" ry="2" />
<text  x="100.15" y="1359.5" ></text>
</g>
<g >
<title>__sb_start_write (10,410,113 samples, 0.01%)</title><rect x="146.9" y="1381" width="0.2" height="15.0" fill="rgb(218,203,14)" rx="2" ry="2" />
<text  x="149.94" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1029" width="0.8" height="15.0" fill="rgb(231,32,4)" rx="2" ry="2" />
<text  x="101.56" y="1039.5" ></text>
</g>
<g >
<title>proc_single_show (12,207,431 samples, 0.01%)</title><rect x="240.7" y="1429" width="0.2" height="15.0" fill="rgb(239,54,13)" rx="2" ry="2" />
<text  x="243.71" y="1439.5" ></text>
</g>
<g >
<title>__ip_vs_get_out_rt (20,529,555 samples, 0.02%)</title><rect x="1162.4" y="885" width="0.3" height="15.0" fill="rgb(237,186,44)" rx="2" ry="2" />
<text  x="1165.39" y="895.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (1,135,212,745 samples, 1.27%)</title><rect x="728.5" y="1301" width="15.1" height="15.0" fill="rgb(218,20,16)" rx="2" ry="2" />
<text  x="731.53" y="1311.5" ></text>
</g>
<g >
<title>ext4_put_io_end_defer (30,118,044 samples, 0.03%)</title><rect x="517.4" y="1349" width="0.4" height="15.0" fill="rgb(206,47,51)" rx="2" ry="2" />
<text  x="520.40" y="1359.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,745,795 samples, 0.01%)</title><rect x="242.2" y="1557" width="0.1" height="15.0" fill="rgb(233,160,24)" rx="2" ry="2" />
<text  x="245.19" y="1567.5" ></text>
</g>
<g >
<title>aeProcessEvents (37,459,361,797 samples, 42.01%)</title><rect x="692.7" y="1589" width="495.7" height="15.0" fill="rgb(234,144,46)" rx="2" ry="2" />
<text  x="695.73" y="1599.5" >aeProcessEvents</text>
</g>
<g >
<title>alloc_slab_page (10,551,796 samples, 0.01%)</title><rect x="33.0" y="1397" width="0.2" height="15.0" fill="rgb(205,54,22)" rx="2" ry="2" />
<text  x="36.05" y="1407.5" ></text>
</g>
<g >
<title>ip_vs_reply4 (12,904,439 samples, 0.01%)</title><rect x="43.2" y="1445" width="0.2" height="15.0" fill="rgb(246,91,46)" rx="2" ry="2" />
<text  x="46.25" y="1455.5" ></text>
</g>
<g >
<title>ip_vs_local_reply4 (8,413,361 samples, 0.01%)</title><rect x="1132.8" y="1189" width="0.1" height="15.0" fill="rgb(239,27,28)" rx="2" ry="2" />
<text  x="1135.79" y="1199.5" ></text>
</g>
<g >
<title>br_forward (32,469,659 samples, 0.04%)</title><rect x="550.1" y="837" width="0.5" height="15.0" fill="rgb(229,17,51)" rx="2" ry="2" />
<text  x="553.13" y="847.5" ></text>
</g>
<g >
<title>futex_abstimed_wait_cancelable (72,063,472 samples, 0.08%)</title><rect x="136.3" y="1557" width="1.0" height="15.0" fill="rgb(246,2,12)" rx="2" ry="2" />
<text  x="139.32" y="1567.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (26,096,040 samples, 0.03%)</title><rect x="525.7" y="1381" width="0.3" height="15.0" fill="rgb(214,176,33)" rx="2" ry="2" />
<text  x="528.67" y="1391.5" ></text>
</g>
<g >
<title>nf_hook_slow (101,127,142 samples, 0.11%)</title><rect x="548.4" y="949" width="1.3" height="15.0" fill="rgb(220,21,33)" rx="2" ry="2" />
<text  x="551.36" y="959.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (734,215,429 samples, 0.82%)</title><rect x="547.2" y="1109" width="9.7" height="15.0" fill="rgb(222,51,13)" rx="2" ry="2" />
<text  x="550.15" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1509" width="0.3" height="15.0" fill="rgb(224,35,15)" rx="2" ry="2" />
<text  x="102.79" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="1381" width="0.3" height="15.0" fill="rgb(252,151,4)" rx="2" ry="2" />
<text  x="102.79" y="1391.5" ></text>
</g>
<g >
<title>kmem_cache_free (11,094,317 samples, 0.01%)</title><rect x="726.9" y="1269" width="0.1" height="15.0" fill="rgb(232,128,2)" rx="2" ry="2" />
<text  x="729.86" y="1279.5" ></text>
</g>
<g >
<title>__x64_sys_connect (12,086,191 samples, 0.01%)</title><rect x="700.9" y="1493" width="0.2" height="15.0" fill="rgb(232,138,27)" rx="2" ry="2" />
<text  x="703.93" y="1503.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (176,160,524 samples, 0.20%)</title><rect x="542.4" y="1109" width="2.4" height="15.0" fill="rgb(252,49,19)" rx="2" ry="2" />
<text  x="545.43" y="1119.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (448,814,765 samples, 0.50%)</title><rect x="204.3" y="1237" width="5.9" height="15.0" fill="rgb(213,104,18)" rx="2" ry="2" />
<text  x="207.28" y="1247.5" ></text>
</g>
<g >
<title>bnx2_poll_work (10,147,944 samples, 0.01%)</title><rect x="41.0" y="1541" width="0.1" height="15.0" fill="rgb(220,216,32)" rx="2" ry="2" />
<text  x="44.00" y="1551.5" ></text>
</g>
<g >
<title>user_path_at_empty (173,311,297 samples, 0.19%)</title><rect x="88.4" y="1493" width="2.3" height="15.0" fill="rgb(225,32,16)" rx="2" ry="2" />
<text  x="91.45" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="549" width="3.0" height="15.0" fill="rgb(232,202,16)" rx="2" ry="2" />
<text  x="131.55" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1397" width="0.8" height="15.0" fill="rgb(238,79,27)" rx="2" ry="2" />
<text  x="101.56" y="1407.5" ></text>
</g>
<g >
<title>ret_from_intr (15,757,452 samples, 0.02%)</title><rect x="920.2" y="1477" width="0.2" height="15.0" fill="rgb(213,143,29)" rx="2" ry="2" />
<text  x="923.20" y="1487.5" ></text>
</g>
<g >
<title>__libc_write (4,815,089,713 samples, 5.40%)</title><rect x="1123.4" y="1541" width="63.7" height="15.0" fill="rgb(240,201,34)" rx="2" ry="2" />
<text  x="1126.40" y="1551.5" >__libc..</text>
</g>
<g >
<title>ipt_do_table (16,221,037 samples, 0.02%)</title><rect x="1151.4" y="565" width="0.2" height="15.0" fill="rgb(234,95,8)" rx="2" ry="2" />
<text  x="1154.42" y="575.5" ></text>
</g>
<g >
<title>execute_shell_function (20,750,409 samples, 0.02%)</title><rect x="10.8" y="1413" width="0.3" height="15.0" fill="rgb(223,9,42)" rx="2" ry="2" />
<text  x="13.79" y="1423.5" ></text>
</g>
<g >
<title>br_forward (160,442,887 samples, 0.18%)</title><rect x="1177.3" y="1077" width="2.1" height="15.0" fill="rgb(240,11,46)" rx="2" ry="2" />
<text  x="1180.30" y="1087.5" ></text>
</g>
<g >
<title>start_thread (37,466,878,023 samples, 42.02%)</title><rect x="692.6" y="1637" width="495.8" height="15.0" fill="rgb(230,173,48)" rx="2" ry="2" />
<text  x="695.63" y="1647.5" >start_thread</text>
</g>
<g >
<title>ip_local_deliver (30,423,826 samples, 0.03%)</title><rect x="252.0" y="1381" width="0.4" height="15.0" fill="rgb(233,229,40)" rx="2" ry="2" />
<text  x="255.01" y="1391.5" ></text>
</g>
<g >
<title>_int_free (15,002,474 samples, 0.02%)</title><rect x="85.9" y="1429" width="0.2" height="15.0" fill="rgb(236,65,27)" rx="2" ry="2" />
<text  x="88.86" y="1439.5" ></text>
</g>
<g >
<title>__switch_to_asm (7,863,518 samples, 0.01%)</title><rect x="701.8" y="1557" width="0.1" height="15.0" fill="rgb(210,214,44)" rx="2" ry="2" />
<text  x="704.84" y="1567.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (234,009,749 samples, 0.26%)</title><rect x="527.7" y="1349" width="3.1" height="15.0" fill="rgb(229,3,27)" rx="2" ry="2" />
<text  x="530.69" y="1359.5" ></text>
</g>
<g >
<title>br_nf_post_routing (789,404,437 samples, 0.89%)</title><rect x="1147.5" y="789" width="10.4" height="15.0" fill="rgb(249,87,27)" rx="2" ry="2" />
<text  x="1150.46" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (221,904,866 samples, 0.25%)</title><rect x="128.5" y="197" width="3.0" height="15.0" fill="rgb(210,6,30)" rx="2" ry="2" />
<text  x="131.55" y="207.5" ></text>
</g>
<g >
<title>gc_mark (227,328,270 samples, 0.25%)</title><rect x="916.5" y="1477" width="3.0" height="15.0" fill="rgb(250,7,25)" rx="2" ry="2" />
<text  x="919.46" y="1487.5" ></text>
</g>
<g >
<title>br_nf_forward_finish (31,563,563 samples, 0.04%)</title><rect x="251.2" y="1253" width="0.4" height="15.0" fill="rgb(241,94,18)" rx="2" ry="2" />
<text  x="254.19" y="1263.5" ></text>
</g>
<g >
<title>ipv4_conntrack_defrag (7,772,292 samples, 0.01%)</title><rect x="1133.1" y="1189" width="0.1" height="15.0" fill="rgb(229,228,28)" rx="2" ry="2" />
<text  x="1136.14" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="533" width="6.5" height="15.0" fill="rgb(226,12,41)" rx="2" ry="2" />
<text  x="103.13" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (513,501,633 samples, 0.58%)</title><rect x="99.8" y="1605" width="6.8" height="15.0" fill="rgb(248,216,34)" rx="2" ry="2" />
<text  x="102.79" y="1615.5" ></text>
</g>
<g >
<title>unfreeze_partials.isra.0 (23,078,135 samples, 0.03%)</title><rect x="514.1" y="1221" width="0.3" height="15.0" fill="rgb(242,198,17)" rx="2" ry="2" />
<text  x="517.05" y="1231.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (115,665,295 samples, 0.13%)</title><rect x="238.6" y="1493" width="1.5" height="15.0" fill="rgb(229,216,39)" rx="2" ry="2" />
<text  x="241.57" y="1503.5" ></text>
</g>
<g >
<title>execute_command_internal (12,129,602 samples, 0.01%)</title><rect x="10.8" y="1333" width="0.1" height="15.0" fill="rgb(210,110,13)" rx="2" ry="2" />
<text  x="13.79" y="1343.5" ></text>
</g>
<g >
<title>__mpn_lshift (12,880,367 samples, 0.01%)</title><rect x="1111.5" y="1429" width="0.2" height="15.0" fill="rgb(231,106,39)" rx="2" ry="2" />
<text  x="1114.52" y="1439.5" ></text>
</g>
<g >
<title>tcp4_gro_receive (9,283,457 samples, 0.01%)</title><rect x="539.4" y="1397" width="0.1" height="15.0" fill="rgb(227,224,39)" rx="2" ry="2" />
<text  x="542.35" y="1407.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (10,666,883 samples, 0.01%)</title><rect x="555.5" y="1061" width="0.2" height="15.0" fill="rgb(236,103,38)" rx="2" ry="2" />
<text  x="558.51" y="1071.5" ></text>
</g>
<g >
<title>fdb_find_rcu (10,828,317 samples, 0.01%)</title><rect x="1146.3" y="901" width="0.1" height="15.0" fill="rgb(237,206,45)" rx="2" ry="2" />
<text  x="1149.29" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="549" width="3.6" height="15.0" fill="rgb(212,67,20)" rx="2" ry="2" />
<text  x="109.59" y="559.5" ></text>
</g>
<g >
<title>ipt_do_table (56,554,358 samples, 0.06%)</title><rect x="571.9" y="1365" width="0.8" height="15.0" fill="rgb(232,215,52)" rx="2" ry="2" />
<text  x="574.92" y="1375.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (9,089,356 samples, 0.01%)</title><rect x="986.0" y="1381" width="0.1" height="15.0" fill="rgb(233,202,3)" rx="2" ry="2" />
<text  x="988.96" y="1391.5" ></text>
</g>
<g >
<title>update_blocked_averages (10,897,949 samples, 0.01%)</title><rect x="641.2" y="1365" width="0.1" height="15.0" fill="rgb(219,98,4)" rx="2" ry="2" />
<text  x="644.20" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (473,675,089 samples, 0.53%)</title><rect x="100.1" y="213" width="6.3" height="15.0" fill="rgb(227,63,18)" rx="2" ry="2" />
<text  x="103.13" y="223.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (15,804,694 samples, 0.02%)</title><rect x="743.6" y="1333" width="0.2" height="15.0" fill="rgb(234,70,4)" rx="2" ry="2" />
<text  x="746.59" y="1343.5" ></text>
</g>
<g >
<title>lj_trace_exit (98,519,925 samples, 0.11%)</title><rect x="690.7" y="1621" width="1.3" height="15.0" fill="rgb(246,175,18)" rx="2" ry="2" />
<text  x="693.67" y="1631.5" ></text>
</g>
<g >
<title>br_nf_dev_queue_xmit (231,179,004 samples, 0.26%)</title><rect x="733.3" y="789" width="3.1" height="15.0" fill="rgb(209,123,46)" rx="2" ry="2" />
<text  x="736.33" y="799.5" ></text>
</g>
<g >
<title>lj_gc_step (180,793,656 samples, 0.20%)</title><rect x="1115.9" y="1525" width="2.4" height="15.0" fill="rgb(233,227,26)" rx="2" ry="2" />
<text  x="1118.91" y="1535.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (15,391,366 samples, 0.02%)</title><rect x="73.0" y="709" width="0.2" height="15.0" fill="rgb(216,197,51)" rx="2" ry="2" />
<text  x="76.02" y="719.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (25,488,973 samples, 0.03%)</title><rect x="251.2" y="1109" width="0.4" height="15.0" fill="rgb(252,9,51)" rx="2" ry="2" />
<text  x="254.24" y="1119.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (13,653,275 samples, 0.02%)</title><rect x="544.1" y="901" width="0.2" height="15.0" fill="rgb(211,78,41)" rx="2" ry="2" />
<text  x="547.10" y="911.5" ></text>
</g>
<g >
<title>do_IRQ (23,934,635 samples, 0.03%)</title><rect x="985.8" y="1477" width="0.3" height="15.0" fill="rgb(235,63,43)" rx="2" ry="2" />
<text  x="988.77" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="853" width="0.3" height="15.0" fill="rgb(243,45,37)" rx="2" ry="2" />
<text  x="102.79" y="863.5" ></text>
</g>
<g >
<title>_do_fork (10,579,320 samples, 0.01%)</title><rect x="51.3" y="1509" width="0.2" height="15.0" fill="rgb(231,134,46)" rx="2" ry="2" />
<text  x="54.34" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1477" width="18.3" height="15.0" fill="rgb(250,44,31)" rx="2" ry="2" />
<text  x="113.16" y="1487.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_out (14,386,477 samples, 0.02%)</title><rect x="743.0" y="1189" width="0.2" height="15.0" fill="rgb(223,155,21)" rx="2" ry="2" />
<text  x="746.04" y="1199.5" ></text>
</g>
<g >
<title>br_nf_post_routing (200,028,705 samples, 0.22%)</title><rect x="542.2" y="1189" width="2.7" height="15.0" fill="rgb(230,124,25)" rx="2" ry="2" />
<text  x="545.21" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1381" width="0.4" height="15.0" fill="rgb(221,122,27)" rx="2" ry="2" />
<text  x="56.88" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1093" width="0.9" height="15.0" fill="rgb(228,108,27)" rx="2" ry="2" />
<text  x="134.54" y="1103.5" ></text>
</g>
<g >
<title>__wake_up_common (105,634,565 samples, 0.12%)</title><rect x="554.1" y="997" width="1.4" height="15.0" fill="rgb(234,95,54)" rx="2" ry="2" />
<text  x="557.07" y="1007.5" ></text>
</g>
<g >
<title>br_forward (34,288,487 samples, 0.04%)</title><rect x="251.2" y="1317" width="0.4" height="15.0" fill="rgb(208,145,27)" rx="2" ry="2" />
<text  x="254.17" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8,548,759 samples, 0.01%)</title><rect x="101.3" y="69" width="0.1" height="15.0" fill="rgb(218,58,2)" rx="2" ry="2" />
<text  x="104.27" y="79.5" ></text>
</g>
<g >
<title>lj_BC_KNIL (32,373,821 samples, 0.04%)</title><rect x="1031.2" y="1541" width="0.4" height="15.0" fill="rgb(232,161,49)" rx="2" ry="2" />
<text  x="1034.15" y="1551.5" ></text>
</g>
<g >
<title>netif_skb_features (10,165,423 samples, 0.01%)</title><rect x="1180.1" y="1093" width="0.1" height="15.0" fill="rgb(228,220,18)" rx="2" ry="2" />
<text  x="1183.11" y="1103.5" ></text>
</g>
<g >
<title>blk_mq_dispatch_rq_list (64,386,621 samples, 0.07%)</title><rect x="35.9" y="1301" width="0.9" height="15.0" fill="rgb(245,122,20)" rx="2" ry="2" />
<text  x="38.91" y="1311.5" ></text>
</g>
<g >
<title>ret_from_fork (260,328,569 samples, 0.29%)</title><rect x="40.9" y="1653" width="3.5" height="15.0" fill="rgb(231,10,19)" rx="2" ry="2" />
<text  x="43.93" y="1663.5" ></text>
</g>
<g >
<title>lj_BC_ITERN (11,748,050 samples, 0.01%)</title><rect x="1029.9" y="1541" width="0.2" height="15.0" fill="rgb(217,174,46)" rx="2" ry="2" />
<text  x="1032.91" y="1551.5" ></text>
</g>
<g >
<title>rw_verify_area (22,805,409 samples, 0.03%)</title><rect x="96.7" y="1509" width="0.3" height="15.0" fill="rgb(238,102,51)" rx="2" ry="2" />
<text  x="99.65" y="1519.5" ></text>
</g>
<g >
<title>resizetab (26,646,397 samples, 0.03%)</title><rect x="1099.1" y="1493" width="0.3" height="15.0" fill="rgb(212,96,1)" rx="2" ry="2" />
<text  x="1102.06" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="597" width="0.9" height="15.0" fill="rgb(206,155,50)" rx="2" ry="2" />
<text  x="134.54" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,621,857 samples, 0.55%)</title><rect x="100.1" y="1365" width="6.5" height="15.0" fill="rgb(242,48,42)" rx="2" ry="2" />
<text  x="103.13" y="1375.5" ></text>
</g>
<g >
<title>nf_hook_slow (49,895,103 samples, 0.06%)</title><rect x="734.2" y="613" width="0.7" height="15.0" fill="rgb(249,155,20)" rx="2" ry="2" />
<text  x="737.23" y="623.5" ></text>
</g>
<g >
<title>__GI___libc_alloca_cutoff (10,430,876 samples, 0.01%)</title><rect x="1110.8" y="1413" width="0.2" height="15.0" fill="rgb(232,142,45)" rx="2" ry="2" />
<text  x="1113.83" y="1423.5" ></text>
</g>
<g >
<title>_int_free (29,778,252 samples, 0.03%)</title><rect x="122.9" y="101" width="0.4" height="15.0" fill="rgb(213,172,44)" rx="2" ry="2" />
<text  x="125.94" y="111.5" ></text>
</g>
<g >
<title>hash_conntrack_raw (8,911,532 samples, 0.01%)</title><rect x="1135.8" y="1141" width="0.1" height="15.0" fill="rgb(220,165,7)" rx="2" ry="2" />
<text  x="1138.77" y="1151.5" ></text>
</g>
<g >
<title>ip_output (11,249,282 samples, 0.01%)</title><rect x="252.1" y="1285" width="0.1" height="15.0" fill="rgb(213,152,11)" rx="2" ry="2" />
<text  x="255.09" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="277" width="18.3" height="15.0" fill="rgb(224,187,11)" rx="2" ry="2" />
<text  x="113.16" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="213" width="0.9" height="15.0" fill="rgb(251,77,25)" rx="2" ry="2" />
<text  x="134.54" y="223.5" ></text>
</g>
<g >
<title>lj_vmeta_tgetv (25,203,507 samples, 0.03%)</title><rect x="1119.9" y="1541" width="0.4" height="15.0" fill="rgb(223,16,24)" rx="2" ry="2" />
<text  x="1122.95" y="1551.5" ></text>
</g>
<g >
<title>tick_handle_oneshot_broadcast (587,145,643 samples, 0.66%)</title><rect x="642.1" y="1365" width="7.8" height="15.0" fill="rgb(230,25,8)" rx="2" ry="2" />
<text  x="645.10" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,448,485 samples, 0.55%)</title><rect x="100.1" y="1173" width="6.5" height="15.0" fill="rgb(240,45,7)" rx="2" ry="2" />
<text  x="103.13" y="1183.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (12,116,485 samples, 0.01%)</title><rect x="735.4" y="517" width="0.1" height="15.0" fill="rgb(231,38,0)" rx="2" ry="2" />
<text  x="738.37" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,621,857 samples, 0.55%)</title><rect x="100.1" y="1477" width="6.5" height="15.0" fill="rgb(243,124,12)" rx="2" ry="2" />
<text  x="103.13" y="1487.5" ></text>
</g>
<g >
<title>tcp_push (8,388,528 samples, 0.01%)</title><rect x="1126.8" y="1333" width="0.1" height="15.0" fill="rgb(226,200,41)" rx="2" ry="2" />
<text  x="1129.83" y="1343.5" ></text>
</g>
<g >
<title>perf_pmu_sched_task (21,097,130 samples, 0.02%)</title><rect x="591.1" y="1525" width="0.3" height="15.0" fill="rgb(230,36,43)" rx="2" ry="2" />
<text  x="594.14" y="1535.5" ></text>
</g>
<g >
<title>tcp_sendmsg (4,504,242,022 samples, 5.05%)</title><rect x="1126.3" y="1349" width="59.6" height="15.0" fill="rgb(252,229,22)" rx="2" ry="2" />
<text  x="1129.30" y="1359.5" >tcp_se..</text>
</g>
<g >
<title>dev_hard_start_xmit (82,812,938 samples, 0.09%)</title><rect x="1177.7" y="981" width="1.1" height="15.0" fill="rgb(210,27,12)" rx="2" ry="2" />
<text  x="1180.75" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (326,473,684 samples, 0.37%)</title><rect x="62.1" y="405" width="4.3" height="15.0" fill="rgb(245,142,1)" rx="2" ry="2" />
<text  x="65.12" y="415.5" ></text>
</g>
<g >
<title>br_forward_finish (14,003,840 samples, 0.02%)</title><rect x="742.6" y="1045" width="0.2" height="15.0" fill="rgb(232,176,6)" rx="2" ry="2" />
<text  x="745.58" y="1055.5" ></text>
</g>
<g >
<title>sch_direct_xmit (28,186,131 samples, 0.03%)</title><rect x="544.0" y="917" width="0.4" height="15.0" fill="rgb(217,4,39)" rx="2" ry="2" />
<text  x="547.03" y="927.5" ></text>
</g>
<g >
<title>update_load_avg (9,109,038 samples, 0.01%)</title><rect x="140.5" y="1365" width="0.1" height="15.0" fill="rgb(229,208,6)" rx="2" ry="2" />
<text  x="143.47" y="1375.5" ></text>
</g>
<g >
<title>fsnotify_add_event (74,349,085 samples, 0.08%)</title><rect x="145.4" y="1333" width="1.0" height="15.0" fill="rgb(219,72,25)" rx="2" ry="2" />
<text  x="148.43" y="1343.5" ></text>
</g>
<g >
<title>__lock_text_start (8,843,574 samples, 0.01%)</title><rect x="220.2" y="1221" width="0.1" height="15.0" fill="rgb(254,31,18)" rx="2" ry="2" />
<text  x="223.21" y="1231.5" ></text>
</g>
<g >
<title>memset (18,451,430 samples, 0.02%)</title><rect x="152.0" y="1253" width="0.2" height="15.0" fill="rgb(208,213,54)" rx="2" ry="2" />
<text  x="154.96" y="1263.5" ></text>
</g>
<g >
<title>do_epoll_wait (844,166,487 samples, 0.95%)</title><rect x="702.5" y="1509" width="11.2" height="15.0" fill="rgb(219,3,43)" rx="2" ry="2" />
<text  x="705.52" y="1519.5" ></text>
</g>
<g >
<title>do_csum (26,606,759 samples, 0.03%)</title><rect x="1155.8" y="389" width="0.4" height="15.0" fill="rgb(205,126,53)" rx="2" ry="2" />
<text  x="1158.80" y="399.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (13,905,397 samples, 0.02%)</title><rect x="39.0" y="1509" width="0.2" height="15.0" fill="rgb(247,132,41)" rx="2" ry="2" />
<text  x="41.98" y="1519.5" ></text>
</g>
<g >
<title>wake_up_process (17,624,123 samples, 0.02%)</title><rect x="591.6" y="1413" width="0.2" height="15.0" fill="rgb(229,178,8)" rx="2" ry="2" />
<text  x="594.57" y="1423.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (35,912,132 samples, 0.04%)</title><rect x="1174.9" y="949" width="0.5" height="15.0" fill="rgb(237,121,53)" rx="2" ry="2" />
<text  x="1177.93" y="959.5" ></text>
</g>
<g >
<title>nf_hook_slow (23,997,224 samples, 0.03%)</title><rect x="41.7" y="1301" width="0.3" height="15.0" fill="rgb(248,18,32)" rx="2" ry="2" />
<text  x="44.73" y="1311.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (219,295,454 samples, 0.25%)</title><rect x="733.4" y="741" width="2.9" height="15.0" fill="rgb(206,26,35)" rx="2" ry="2" />
<text  x="736.43" y="751.5" ></text>
</g>
<g >
<title>sock_def_readable (116,329,923 samples, 0.13%)</title><rect x="554.0" y="1045" width="1.5" height="15.0" fill="rgb(245,93,2)" rx="2" ry="2" />
<text  x="556.97" y="1055.5" ></text>
</g>
<g >
<title>security_file_permission (20,170,039 samples, 0.02%)</title><rect x="96.7" y="1493" width="0.3" height="15.0" fill="rgb(249,192,3)" rx="2" ry="2" />
<text  x="99.69" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7,696,142 samples, 0.01%)</title><rect x="129.2" y="69" width="0.2" height="15.0" fill="rgb(231,78,35)" rx="2" ry="2" />
<text  x="132.25" y="79.5" ></text>
</g>
<g >
<title>nf_nat_inet_fn (16,986,534 samples, 0.02%)</title><rect x="1182.1" y="1141" width="0.2" height="15.0" fill="rgb(236,70,28)" rx="2" ry="2" />
<text  x="1185.05" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,880,873 samples, 0.55%)</title><rect x="100.1" y="1589" width="6.5" height="15.0" fill="rgb(222,45,4)" rx="2" ry="2" />
<text  x="103.13" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="453" width="0.3" height="15.0" fill="rgb(234,121,39)" rx="2" ry="2" />
<text  x="102.79" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="421" width="0.9" height="15.0" fill="rgb(209,141,3)" rx="2" ry="2" />
<text  x="134.54" y="431.5" ></text>
</g>
<g >
<title>net_rx_action (21,971,044 samples, 0.02%)</title><rect x="893.9" y="1397" width="0.3" height="15.0" fill="rgb(243,135,54)" rx="2" ry="2" />
<text  x="896.89" y="1407.5" ></text>
</g>
<g >
<title>kthread (10,767,858 samples, 0.01%)</title><rect x="40.8" y="1637" width="0.1" height="15.0" fill="rgb(206,57,13)" rx="2" ry="2" />
<text  x="43.75" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,549,793 samples, 0.12%)</title><rect x="97.2" y="933" width="1.4" height="15.0" fill="rgb(243,47,52)" rx="2" ry="2" />
<text  x="100.15" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="325" width="0.4" height="15.0" fill="rgb(235,123,15)" rx="2" ry="2" />
<text  x="56.88" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (98,886,686 samples, 0.11%)</title><rect x="93.8" y="1541" width="1.3" height="15.0" fill="rgb(217,165,40)" rx="2" ry="2" />
<text  x="96.77" y="1551.5" ></text>
</g>
<g >
<title>net_rx_action (13,085,976 samples, 0.01%)</title><rect x="899.0" y="1413" width="0.2" height="15.0" fill="rgb(244,205,17)" rx="2" ry="2" />
<text  x="902.05" y="1423.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_fn (81,623,269 samples, 0.09%)</title><rect x="730.6" y="1189" width="1.0" height="15.0" fill="rgb(208,168,20)" rx="2" ry="2" />
<text  x="733.57" y="1199.5" ></text>
</g>
<g >
<title>fdb_find_rcu (8,898,505 samples, 0.01%)</title><rect x="541.8" y="1301" width="0.1" height="15.0" fill="rgb(234,16,0)" rx="2" ry="2" />
<text  x="544.82" y="1311.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (111,013,832 samples, 0.12%)</title><rect x="554.0" y="1029" width="1.5" height="15.0" fill="rgb(254,190,8)" rx="2" ry="2" />
<text  x="557.04" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1541" width="3.0" height="15.0" fill="rgb(217,29,48)" rx="2" ry="2" />
<text  x="131.55" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (946,000,189 samples, 1.06%)</title><rect x="60.9" y="757" width="12.5" height="15.0" fill="rgb(246,70,21)" rx="2" ry="2" />
<text  x="63.91" y="767.5" ></text>
</g>
<g >
<title>expand_prompt_string (8,435,251 samples, 0.01%)</title><rect x="10.6" y="1221" width="0.2" height="15.0" fill="rgb(223,174,23)" rx="2" ry="2" />
<text  x="13.65" y="1231.5" ></text>
</g>
<g >
<title>lj_alloc_free (8,377,858 samples, 0.01%)</title><rect x="894.3" y="1445" width="0.1" height="15.0" fill="rgb(223,53,18)" rx="2" ry="2" />
<text  x="897.30" y="1455.5" ></text>
</g>
<g >
<title>netif_receive_skb (967,660,476 samples, 1.09%)</title><rect x="545.3" y="1285" width="12.8" height="15.0" fill="rgb(206,73,26)" rx="2" ry="2" />
<text  x="548.25" y="1295.5" ></text>
</g>
<g >
<title>__fdget_pos (11,127,922 samples, 0.01%)</title><rect x="95.6" y="1525" width="0.2" height="15.0" fill="rgb(234,216,11)" rx="2" ry="2" />
<text  x="98.61" y="1535.5" ></text>
</g>
<g >
<title>__mod_memcg_state (7,569,542 samples, 0.01%)</title><rect x="211.5" y="1157" width="0.1" height="15.0" fill="rgb(238,218,26)" rx="2" ry="2" />
<text  x="214.53" y="1167.5" ></text>
</g>
<g >
<title>_copy_to_iter (25,324,079 samples, 0.03%)</title><rect x="727.9" y="1285" width="0.4" height="15.0" fill="rgb(231,160,35)" rx="2" ry="2" />
<text  x="730.93" y="1295.5" ></text>
</g>
<g >
<title>rand (20,080,342 samples, 0.02%)</title><rect x="1187.7" y="1525" width="0.3" height="15.0" fill="rgb(240,69,50)" rx="2" ry="2" />
<text  x="1190.71" y="1535.5" ></text>
</g>
<g >
<title>fib_table_lookup (51,881,362 samples, 0.06%)</title><rect x="1171.2" y="917" width="0.7" height="15.0" fill="rgb(211,54,6)" rx="2" ry="2" />
<text  x="1174.19" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="293" width="3.0" height="15.0" fill="rgb(211,43,32)" rx="2" ry="2" />
<text  x="131.55" y="303.5" ></text>
</g>
<g >
<title>udp_v4_early_demux (8,297,053 samples, 0.01%)</title><rect x="527.5" y="1333" width="0.1" height="15.0" fill="rgb(225,86,28)" rx="2" ry="2" />
<text  x="530.52" y="1343.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (8,926,491 samples, 0.01%)</title><rect x="1064.2" y="1493" width="0.1" height="15.0" fill="rgb(205,81,4)" rx="2" ry="2" />
<text  x="1067.18" y="1503.5" ></text>
</g>
<g >
<title>vxlan_gro_receive (51,014,135 samples, 0.06%)</title><rect x="523.9" y="1333" width="0.7" height="15.0" fill="rgb(209,187,51)" rx="2" ry="2" />
<text  x="526.92" y="1343.5" ></text>
</g>
<g >
<title>dup_mm (10,579,320 samples, 0.01%)</title><rect x="51.3" y="1477" width="0.2" height="15.0" fill="rgb(225,200,8)" rx="2" ry="2" />
<text  x="54.34" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="661" width="3.0" height="15.0" fill="rgb(243,170,21)" rx="2" ry="2" />
<text  x="131.55" y="671.5" ></text>
</g>
<g >
<title>ext4_ind_trans_blocks (26,175,174 samples, 0.03%)</title><rect x="194.0" y="1269" width="0.3" height="15.0" fill="rgb(236,89,14)" rx="2" ry="2" />
<text  x="196.98" y="1279.5" ></text>
</g>
<g >
<title>mempool_free_slab (34,321,918 samples, 0.04%)</title><rect x="514.5" y="1301" width="0.4" height="15.0" fill="rgb(241,115,15)" rx="2" ry="2" />
<text  x="517.45" y="1311.5" ></text>
</g>
<g >
<title>do_syscall_64 (65,030,191 samples, 0.07%)</title><rect x="136.4" y="1525" width="0.9" height="15.0" fill="rgb(245,153,19)" rx="2" ry="2" />
<text  x="139.39" y="1535.5" ></text>
</g>
<g >
<title>hrtimer_force_reprogram (18,256,389 samples, 0.02%)</title><rect x="706.8" y="1413" width="0.2" height="15.0" fill="rgb(210,156,29)" rx="2" ry="2" />
<text  x="709.77" y="1423.5" ></text>
</g>
<g >
<title>udp_queue_rcv_skb (97,817,009 samples, 0.11%)</title><rect x="528.4" y="1237" width="1.3" height="15.0" fill="rgb(206,225,15)" rx="2" ry="2" />
<text  x="531.37" y="1247.5" ></text>
</g>
<g >
<title>xas_store (75,711,905 samples, 0.08%)</title><rect x="209.2" y="1221" width="1.0" height="15.0" fill="rgb(223,148,40)" rx="2" ry="2" />
<text  x="212.22" y="1231.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (8,454,139 samples, 0.01%)</title><rect x="642.3" y="1317" width="0.2" height="15.0" fill="rgb(215,123,30)" rx="2" ry="2" />
<text  x="645.34" y="1327.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (44,426,260 samples, 0.05%)</title><rect x="706.1" y="1445" width="0.6" height="15.0" fill="rgb(217,174,9)" rx="2" ry="2" />
<text  x="709.15" y="1455.5" ></text>
</g>
<g >
<title>update_process_times (51,296,130 samples, 0.06%)</title><rect x="642.5" y="1285" width="0.7" height="15.0" fill="rgb(215,140,30)" rx="2" ry="2" />
<text  x="645.48" y="1295.5" ></text>
</g>
<g >
<title>timer_interrupt (26,602,838 samples, 0.03%)</title><rect x="602.5" y="1317" width="0.4" height="15.0" fill="rgb(225,139,51)" rx="2" ry="2" />
<text  x="605.51" y="1327.5" ></text>
</g>
<g >
<title>tcp_dnat_handler (16,866,441 samples, 0.02%)</title><rect x="1168.3" y="885" width="0.2" height="15.0" fill="rgb(240,127,27)" rx="2" ry="2" />
<text  x="1171.32" y="895.5" ></text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (36,498,772 samples, 0.04%)</title><rect x="595.1" y="1589" width="0.5" height="15.0" fill="rgb(248,98,30)" rx="2" ry="2" />
<text  x="598.14" y="1599.5" ></text>
</g>
<g >
<title>__slab_alloc (12,169,629 samples, 0.01%)</title><rect x="521.5" y="1397" width="0.1" height="15.0" fill="rgb(216,38,24)" rx="2" ry="2" />
<text  x="524.47" y="1407.5" ></text>
</g>
<g >
<title>do_IRQ (23,357,916 samples, 0.03%)</title><rect x="1028.0" y="1493" width="0.3" height="15.0" fill="rgb(224,148,45)" rx="2" ry="2" />
<text  x="1031.02" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="661" width="0.4" height="15.0" fill="rgb(241,177,3)" rx="2" ry="2" />
<text  x="56.54" y="671.5" ></text>
</g>
<g >
<title>queue_work_on (14,878,444 samples, 0.02%)</title><rect x="253.9" y="1349" width="0.2" height="15.0" fill="rgb(212,82,9)" rx="2" ry="2" />
<text  x="256.91" y="1359.5" ></text>
</g>
<g >
<title>trace_exit_cp (78,738,297 samples, 0.09%)</title><rect x="690.9" y="1589" width="1.1" height="15.0" fill="rgb(231,172,42)" rx="2" ry="2" />
<text  x="693.91" y="1599.5" ></text>
</g>
<g >
<title>nf_hook_slow (11,861,781 samples, 0.01%)</title><rect x="1182.6" y="1205" width="0.2" height="15.0" fill="rgb(207,114,12)" rx="2" ry="2" />
<text  x="1185.63" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (61,531,245 samples, 0.07%)</title><rect x="131.5" y="725" width="0.9" height="15.0" fill="rgb(218,106,37)" rx="2" ry="2" />
<text  x="134.54" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="677" width="18.3" height="15.0" fill="rgb(250,133,10)" rx="2" ry="2" />
<text  x="113.16" y="687.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (10,480,032 samples, 0.01%)</title><rect x="889.8" y="1333" width="0.2" height="15.0" fill="rgb(221,93,24)" rx="2" ry="2" />
<text  x="892.82" y="1343.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (10,243,556 samples, 0.01%)</title><rect x="75.3" y="837" width="0.2" height="15.0" fill="rgb(249,138,28)" rx="2" ry="2" />
<text  x="78.35" y="847.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (14,071,284 samples, 0.02%)</title><rect x="50.3" y="1637" width="0.1" height="15.0" fill="rgb(216,41,36)" rx="2" ry="2" />
<text  x="53.26" y="1647.5" ></text>
</g>
<g >
<title>sock_sendmsg (4,556,969,678 samples, 5.11%)</title><rect x="1125.8" y="1381" width="60.3" height="15.0" fill="rgb(211,85,21)" rx="2" ry="2" />
<text  x="1128.84" y="1391.5" >sock_s..</text>
</g>
<g >
<title>ip_route_output_flow (14,101,145 samples, 0.02%)</title><rect x="569.4" y="1237" width="0.2" height="15.0" fill="rgb(227,224,10)" rx="2" ry="2" />
<text  x="572.43" y="1247.5" ></text>
</g>
<g >
<title>mongo::BlockCompressor::compress (19,265,537 samples, 0.02%)</title><rect x="16.1" y="1525" width="0.2" height="15.0" fill="rgb(246,119,44)" rx="2" ry="2" />
<text  x="19.08" y="1535.5" ></text>
</g>
<g >
<title>ipt_do_table (7,950,287 samples, 0.01%)</title><rect x="729.7" y="1173" width="0.1" height="15.0" fill="rgb(228,103,51)" rx="2" ry="2" />
<text  x="732.70" y="1183.5" ></text>
</g>
<g >
<title>mongo::CommandHelpers::runCommandDirectly (45,353,356 samples, 0.05%)</title><rect x="15.2" y="1541" width="0.6" height="15.0" fill="rgb(211,70,47)" rx="2" ry="2" />
<text  x="18.18" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1589" width="0.9" height="15.0" fill="rgb(210,213,41)" rx="2" ry="2" />
<text  x="134.54" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1541" width="0.9" height="15.0" fill="rgb(214,209,44)" rx="2" ry="2" />
<text  x="134.54" y="1551.5" ></text>
</g>
<g >
<title>dbs_update_util_handler (16,143,827 samples, 0.02%)</title><rect x="709.7" y="1349" width="0.2" height="15.0" fill="rgb(216,58,6)" rx="2" ry="2" />
<text  x="712.66" y="1359.5" ></text>
</g>
<g >
<title>__schedule (22,001,242 samples, 0.02%)</title><rect x="44.1" y="1589" width="0.3" height="15.0" fill="rgb(251,89,36)" rx="2" ry="2" />
<text  x="47.07" y="1599.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (13,005,510 samples, 0.01%)</title><rect x="48.6" y="1637" width="0.1" height="15.0" fill="rgb(216,90,53)" rx="2" ry="2" />
<text  x="51.56" y="1647.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (723,917,311 samples, 0.81%)</title><rect x="246.8" y="1541" width="9.6" height="15.0" fill="rgb(222,36,46)" rx="2" ry="2" />
<text  x="249.83" y="1551.5" ></text>
</g>
<g >
<title>napi_complete_done (7,781,785 samples, 0.01%)</title><rect x="250.9" y="1445" width="0.1" height="15.0" fill="rgb(227,162,6)" rx="2" ry="2" />
<text  x="253.86" y="1455.5" ></text>
</g>
<g >
<title>expand_string_assignment (8,435,251 samples, 0.01%)</title><rect x="10.6" y="1237" width="0.2" height="15.0" fill="rgb(216,126,6)" rx="2" ry="2" />
<text  x="13.65" y="1247.5" ></text>
</g>
<g >
<title>Watcher::fireCallbacks (7,586,103 samples, 0.01%)</title><rect x="132.9" y="1605" width="0.1" height="15.0" fill="rgb(244,169,48)" rx="2" ry="2" />
<text  x="135.88" y="1615.5" ></text>
</g>
<g >
<title>run_ksoftirqd (13,377,600 samples, 0.02%)</title><rect x="40.5" y="1605" width="0.2" height="15.0" fill="rgb(253,171,37)" rx="2" ry="2" />
<text  x="43.52" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1477" width="0.8" height="15.0" fill="rgb(225,176,19)" rx="2" ry="2" />
<text  x="101.56" y="1487.5" ></text>
</g>
<g >
<title>ip_list_rcv (10,887,322 samples, 0.01%)</title><rect x="41.1" y="1477" width="0.2" height="15.0" fill="rgb(248,61,24)" rx="2" ry="2" />
<text  x="44.15" y="1487.5" ></text>
</g>
<g >
<title>down_read (14,136,738 samples, 0.02%)</title><rect x="161.5" y="1221" width="0.2" height="15.0" fill="rgb(210,203,6)" rx="2" ry="2" />
<text  x="164.51" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,271,264 samples, 0.55%)</title><rect x="100.1" y="245" width="6.5" height="15.0" fill="rgb(241,40,26)" rx="2" ry="2" />
<text  x="103.13" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1269" width="0.9" height="15.0" fill="rgb(226,129,27)" rx="2" ry="2" />
<text  x="134.54" y="1279.5" ></text>
</g>
<g >
<title>hrtimer_update_next_event (8,553,249 samples, 0.01%)</title><rect x="706.8" y="1397" width="0.1" height="15.0" fill="rgb(240,90,13)" rx="2" ry="2" />
<text  x="709.78" y="1407.5" ></text>
</g>
<g >
<title>reschedule_interrupt (204,677,895 samples, 0.23%)</title><rect x="639.1" y="1477" width="2.7" height="15.0" fill="rgb(224,87,35)" rx="2" ry="2" />
<text  x="642.06" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,807,084,278 samples, 2.03%)</title><rect x="58.9" y="1317" width="23.9" height="15.0" fill="rgb(212,30,17)" rx="2" ry="2" />
<text  x="61.89" y="1327.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="949" width="3.0" height="15.0" fill="rgb(215,22,1)" rx="2" ry="2" />
<text  x="131.55" y="959.5" ></text>
</g>
<g >
<title>memset (14,057,749 samples, 0.02%)</title><rect x="90.2" y="1461" width="0.2" height="15.0" fill="rgb(251,17,52)" rx="2" ry="2" />
<text  x="93.24" y="1471.5" ></text>
</g>
<g >
<title>tick_irq_enter (26,245,766 samples, 0.03%)</title><rect x="510.4" y="1493" width="0.3" height="15.0" fill="rgb(223,156,35)" rx="2" ry="2" />
<text  x="513.38" y="1503.5" ></text>
</g>
<g >
<title>do_csum (7,820,939 samples, 0.01%)</title><rect x="1168.4" y="853" width="0.1" height="15.0" fill="rgb(250,70,32)" rx="2" ry="2" />
<text  x="1171.39" y="863.5" ></text>
</g>
<g >
<title>__inc_numa_state (10,434,150 samples, 0.01%)</title><rect x="197.0" y="1189" width="0.1" height="15.0" fill="rgb(221,164,35)" rx="2" ry="2" />
<text  x="199.96" y="1199.5" ></text>
</g>
<g >
<title>ip_local_out (3,787,986,186 samples, 4.25%)</title><rect x="1132.7" y="1221" width="50.1" height="15.0" fill="rgb(233,43,18)" rx="2" ry="2" />
<text  x="1135.66" y="1231.5" >ip_lo..</text>
</g>
<g >
<title>sk_stream_alloc_skb (125,236,085 samples, 0.14%)</title><rect x="1128.7" y="1317" width="1.6" height="15.0" fill="rgb(215,41,0)" rx="2" ry="2" />
<text  x="1131.65" y="1327.5" ></text>
</g>
<g >
<title>execute_command (41,956,479 samples, 0.05%)</title><rect x="10.6" y="1557" width="0.6" height="15.0" fill="rgb(229,17,30)" rx="2" ry="2" />
<text  x="13.64" y="1567.5" ></text>
</g>
<g >
<title>__irq_work_queue_local (22,336,099 samples, 0.03%)</title><rect x="254.7" y="1397" width="0.2" height="15.0" fill="rgb(232,132,36)" rx="2" ry="2" />
<text  x="257.65" y="1407.5" ></text>
</g>
<g >
<title>lj_mem_realloc (64,149,700 samples, 0.07%)</title><rect x="688.4" y="1637" width="0.8" height="15.0" fill="rgb(217,161,12)" rx="2" ry="2" />
<text  x="691.38" y="1647.5" ></text>
</g>
<g >
<title>process_one_work (9,509,234 samples, 0.01%)</title><rect x="45.5" y="1605" width="0.2" height="15.0" fill="rgb(250,138,10)" rx="2" ry="2" />
<text  x="48.54" y="1615.5" ></text>
</g>
<g >
<title>ext4_mark_inode_dirty (457,279,761 samples, 0.51%)</title><rect x="223.8" y="1285" width="6.0" height="15.0" fill="rgb(205,127,2)" rx="2" ry="2" />
<text  x="226.76" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1381" width="0.9" height="15.0" fill="rgb(239,145,1)" rx="2" ry="2" />
<text  x="134.54" y="1391.5" ></text>
</g>
<g >
<title>nf_conntrack_in (138,458,548 samples, 0.16%)</title><rect x="572.9" y="1365" width="1.8" height="15.0" fill="rgb(246,197,16)" rx="2" ry="2" />
<text  x="575.88" y="1375.5" ></text>
</g>
<g >
<title>propagatemark (23,822,186 samples, 0.03%)</title><rect x="1118.0" y="1509" width="0.3" height="15.0" fill="rgb(237,105,14)" rx="2" ry="2" />
<text  x="1120.98" y="1519.5" ></text>
</g>
<g >
<title>generic_update_time (19,675,669 samples, 0.02%)</title><rect x="148.1" y="1301" width="0.2" height="15.0" fill="rgb(231,114,28)" rx="2" ry="2" />
<text  x="151.07" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="757" width="3.0" height="15.0" fill="rgb(224,34,9)" rx="2" ry="2" />
<text  x="131.55" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="1621" width="18.3" height="15.0" fill="rgb(253,18,36)" rx="2" ry="2" />
<text  x="113.16" y="1631.5" ></text>
</g>
<g >
<title>nf_nat_inet_fn (68,451,694 samples, 0.08%)</title><rect x="1140.5" y="1141" width="0.9" height="15.0" fill="rgb(223,152,47)" rx="2" ry="2" />
<text  x="1143.50" y="1151.5" ></text>
</g>
<g >
<title>lj_fff_newstr (18,194,008 samples, 0.02%)</title><rect x="1118.3" y="1541" width="0.2" height="15.0" fill="rgb(215,92,24)" rx="2" ry="2" />
<text  x="1121.31" y="1551.5" ></text>
</g>
<g >
<title>nf_hook_slow (22,487,064 samples, 0.03%)</title><rect x="743.0" y="1205" width="0.2" height="15.0" fill="rgb(235,146,4)" rx="2" ry="2" />
<text  x="745.95" y="1215.5" ></text>
</g>
<g >
<title>local.runtime.mcall (36,623,043 samples, 0.04%)</title><rect x="12.6" y="1653" width="0.5" height="15.0" fill="rgb(225,74,10)" rx="2" ry="2" />
<text  x="15.62" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (86,566,108 samples, 0.10%)</title><rect x="74.6" y="869" width="1.1" height="15.0" fill="rgb(225,23,9)" rx="2" ry="2" />
<text  x="77.56" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9,473,001 samples, 0.01%)</title><rect x="77.8" y="981" width="0.2" height="15.0" fill="rgb(240,222,6)" rx="2" ry="2" />
<text  x="80.84" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12,447,107 samples, 0.01%)</title><rect x="74.3" y="789" width="0.2" height="15.0" fill="rgb(223,126,20)" rx="2" ry="2" />
<text  x="77.29" y="799.5" ></text>
</g>
<g >
<title>sched_clock_cpu (31,869,897 samples, 0.04%)</title><rect x="576.8" y="1541" width="0.4" height="15.0" fill="rgb(238,8,41)" rx="2" ry="2" />
<text  x="579.78" y="1551.5" ></text>
</g>
<g >
<title>do_IRQ (12,813,476 samples, 0.01%)</title><rect x="980.6" y="1445" width="0.2" height="15.0" fill="rgb(213,78,34)" rx="2" ry="2" />
<text  x="983.64" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13,403,929 samples, 0.02%)</title><rect x="128.4" y="165" width="0.1" height="15.0" fill="rgb(241,194,33)" rx="2" ry="2" />
<text  x="131.37" y="175.5" ></text>
</g>
<g >
<title>perf_mmap__push (7,329,172,231 samples, 8.22%)</title><rect x="141.4" y="1573" width="97.0" height="15.0" fill="rgb(243,187,34)" rx="2" ry="2" />
<text  x="144.42" y="1583.5" >perf_mmap__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="965" width="3.0" height="15.0" fill="rgb(219,107,51)" rx="2" ry="2" />
<text  x="131.55" y="975.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (9,289,764 samples, 0.01%)</title><rect x="894.1" y="1349" width="0.1" height="15.0" fill="rgb(240,94,46)" rx="2" ry="2" />
<text  x="897.06" y="1359.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (26,602,838 samples, 0.03%)</title><rect x="602.5" y="1333" width="0.4" height="15.0" fill="rgb(208,79,6)" rx="2" ry="2" />
<text  x="605.51" y="1343.5" ></text>
</g>
<g >
<title>br_nf_hook_thresh (280,650,204 samples, 0.31%)</title><rect x="732.8" y="965" width="3.8" height="15.0" fill="rgb(246,180,8)" rx="2" ry="2" />
<text  x="735.85" y="975.5" ></text>
</g>
<g >
<title>aeDeleteTimeEvent (44,633,232 samples, 0.05%)</title><rect x="698.3" y="1573" width="0.5" height="15.0" fill="rgb(212,150,11)" rx="2" ry="2" />
<text  x="701.25" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1429" width="0.8" height="15.0" fill="rgb(211,98,53)" rx="2" ry="2" />
<text  x="101.56" y="1439.5" ></text>
</g>
<g >
<title>kmem_cache_free (8,360,758 samples, 0.01%)</title><rect x="536.2" y="1093" width="0.2" height="15.0" fill="rgb(248,17,13)" rx="2" ry="2" />
<text  x="539.25" y="1103.5" ></text>
</g>
<g >
<title>new_slab (34,335,283 samples, 0.04%)</title><rect x="31.0" y="1381" width="0.4" height="15.0" fill="rgb(213,146,9)" rx="2" ry="2" />
<text  x="33.96" y="1391.5" ></text>
</g>
<g >
<title>ttwu_do_activate (63,269,145 samples, 0.07%)</title><rect x="554.5" y="869" width="0.9" height="15.0" fill="rgb(210,201,20)" rx="2" ry="2" />
<text  x="557.51" y="879.5" ></text>
</g>
<g >
<title>napi_complete_done (17,419,431 samples, 0.02%)</title><rect x="41.3" y="1541" width="0.2" height="15.0" fill="rgb(244,30,37)" rx="2" ry="2" />
<text  x="44.30" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1285" width="3.6" height="15.0" fill="rgb(209,126,53)" rx="2" ry="2" />
<text  x="109.59" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="677" width="0.4" height="15.0" fill="rgb(230,35,48)" rx="2" ry="2" />
<text  x="56.88" y="687.5" ></text>
</g>
<g >
<title>__vfprintf_internal (143,455,294 samples, 0.16%)</title><rect x="681.9" y="1557" width="1.9" height="15.0" fill="rgb(211,47,18)" rx="2" ry="2" />
<text  x="684.89" y="1567.5" ></text>
</g>
<g >
<title>ip_rcv_finish (729,170,898 samples, 0.82%)</title><rect x="562.0" y="1397" width="9.7" height="15.0" fill="rgb(222,198,46)" rx="2" ry="2" />
<text  x="565.02" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (783,562,205 samples, 0.88%)</title><rect x="99.8" y="1621" width="10.4" height="15.0" fill="rgb(222,223,53)" rx="2" ry="2" />
<text  x="102.79" y="1631.5" ></text>
</g>
<g >
<title>__test_set_page_writeback (152,717,897 samples, 0.17%)</title><rect x="19.1" y="1477" width="2.0" height="15.0" fill="rgb(240,108,9)" rx="2" ry="2" />
<text  x="22.10" y="1487.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (82,049,921 samples, 0.09%)</title><rect x="255.1" y="1461" width="1.1" height="15.0" fill="rgb(220,59,40)" rx="2" ry="2" />
<text  x="258.08" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (2,244,304,371 samples, 2.52%)</title><rect x="662.9" y="1653" width="29.7" height="15.0" fill="rgb(236,188,28)" rx="2" ry="2" />
<text  x="665.89" y="1663.5" >[u..</text>
</g>
<g >
<title>lj_vm_call_dispatch_f (7,971,760 samples, 0.01%)</title><rect x="1118.7" y="1541" width="0.1" height="15.0" fill="rgb(225,62,27)" rx="2" ry="2" />
<text  x="1121.67" y="1551.5" ></text>
</g>
<g >
<title>irq_work_run_list (15,784,554 samples, 0.02%)</title><rect x="253.9" y="1381" width="0.2" height="15.0" fill="rgb(240,6,36)" rx="2" ry="2" />
<text  x="256.90" y="1391.5" ></text>
</g>
<g >
<title>lj_fff_gcstep (181,680,853 samples, 0.20%)</title><rect x="1115.9" y="1541" width="2.4" height="15.0" fill="rgb(241,217,40)" rx="2" ry="2" />
<text  x="1118.90" y="1551.5" ></text>
</g>
<g >
<title>ip_finish_output (65,388,187 samples, 0.07%)</title><rect x="543.6" y="997" width="0.8" height="15.0" fill="rgb(218,118,8)" rx="2" ry="2" />
<text  x="546.58" y="1007.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/vendor/github.com/hashicorp/memberlist.(*Memberlist).packetListen (12,152,747 samples, 0.01%)</title><rect x="12.4" y="1621" width="0.1" height="15.0" fill="rgb(233,20,47)" rx="2" ry="2" />
<text  x="15.38" y="1631.5" ></text>
</g>
<g >
<title>iptable_mangle_hook (24,278,174 samples, 0.03%)</title><rect x="740.6" y="997" width="0.3" height="15.0" fill="rgb(244,47,40)" rx="2" ry="2" />
<text  x="743.63" y="1007.5" ></text>
</g>
<g >
<title>gettimeofday (290,646,669 samples, 0.33%)</title><rect x="714.2" y="1573" width="3.8" height="15.0" fill="rgb(205,83,2)" rx="2" ry="2" />
<text  x="717.15" y="1583.5" ></text>
</g>
<g >
<title>memcg_kmem_get_cache (9,901,261 samples, 0.01%)</title><rect x="145.2" y="1317" width="0.2" height="15.0" fill="rgb(252,202,46)" rx="2" ry="2" />
<text  x="148.22" y="1327.5" ></text>
</g>
<g >
<title>sd_event_loop (7,719,600 samples, 0.01%)</title><rect x="653.9" y="1605" width="0.1" height="15.0" fill="rgb(233,87,48)" rx="2" ry="2" />
<text  x="656.90" y="1615.5" ></text>
</g>
<g >
<title>_int_free (16,098,187 samples, 0.02%)</title><rect x="54.0" y="229" width="0.2" height="15.0" fill="rgb(247,95,18)" rx="2" ry="2" />
<text  x="56.97" y="239.5" ></text>
</g>
<g >
<title>__libc_write (10,096,975 samples, 0.01%)</title><rect x="663.2" y="1637" width="0.1" height="15.0" fill="rgb(210,43,38)" rx="2" ry="2" />
<text  x="666.16" y="1647.5" ></text>
</g>
<g >
<title>start_kernel (4,348,009,023 samples, 4.88%)</title><rect x="596.4" y="1605" width="57.5" height="15.0" fill="rgb(245,107,9)" rx="2" ry="2" />
<text  x="599.36" y="1615.5" >start_..</text>
</g>
<g >
<title>bio_associate_blkg (18,721,846 samples, 0.02%)</title><rect x="31.9" y="1477" width="0.3" height="15.0" fill="rgb(228,218,4)" rx="2" ry="2" />
<text  x="34.92" y="1487.5" ></text>
</g>
<g >
<title>tick_check_broadcast_expired (7,942,224 samples, 0.01%)</title><rect x="596.0" y="1605" width="0.1" height="15.0" fill="rgb(232,0,34)" rx="2" ry="2" />
<text  x="598.97" y="1615.5" ></text>
</g>
<g >
<title>sched_idle_set_state (7,586,866 samples, 0.01%)</title><rect x="579.0" y="1557" width="0.1" height="15.0" fill="rgb(227,43,38)" rx="2" ry="2" />
<text  x="582.03" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1477" width="1.4" height="15.0" fill="rgb(205,146,40)" rx="2" ry="2" />
<text  x="100.15" y="1487.5" ></text>
</g>
<g >
<title>lj_BC_TGETV (499,760,168 samples, 0.56%)</title><rect x="1090.6" y="1541" width="6.6" height="15.0" fill="rgb(243,30,34)" rx="2" ry="2" />
<text  x="1093.58" y="1551.5" ></text>
</g>
<g >
<title>tcp_poll (20,527,759 samples, 0.02%)</title><rect x="704.6" y="1413" width="0.3" height="15.0" fill="rgb(249,192,22)" rx="2" ry="2" />
<text  x="707.64" y="1423.5" ></text>
</g>
<g >
<title>connect_socket (14,303,553 samples, 0.02%)</title><rect x="700.9" y="1557" width="0.2" height="15.0" fill="rgb(210,160,9)" rx="2" ry="2" />
<text  x="703.92" y="1567.5" ></text>
</g>
<g >
<title>ttwu_do_activate (9,850,007 samples, 0.01%)</title><rect x="575.7" y="1445" width="0.1" height="15.0" fill="rgb(208,149,38)" rx="2" ry="2" />
<text  x="578.67" y="1455.5" ></text>
</g>
<g >
<title>ep_poll (786,395,701 samples, 0.88%)</title><rect x="702.9" y="1493" width="10.4" height="15.0" fill="rgb(215,131,16)" rx="2" ry="2" />
<text  x="705.91" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="613" width="0.8" height="15.0" fill="rgb(207,161,51)" rx="2" ry="2" />
<text  x="101.56" y="623.5" ></text>
</g>
<g >
<title>tcp_delack_timer (7,562,575 samples, 0.01%)</title><rect x="650.9" y="1365" width="0.1" height="15.0" fill="rgb(229,61,46)" rx="2" ry="2" />
<text  x="653.91" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1525" width="3.6" height="15.0" fill="rgb(240,205,14)" rx="2" ry="2" />
<text  x="109.59" y="1535.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (9,982,589 samples, 0.01%)</title><rect x="1090.4" y="1477" width="0.2" height="15.0" fill="rgb(222,152,5)" rx="2" ry="2" />
<text  x="1093.44" y="1487.5" ></text>
</g>
<g >
<title>scheduler_ipi (49,019,621 samples, 0.05%)</title><rect x="507.2" y="1509" width="0.6" height="15.0" fill="rgb(247,68,18)" rx="2" ry="2" />
<text  x="510.17" y="1519.5" ></text>
</g>
<g >
<title>copy_process (10,579,320 samples, 0.01%)</title><rect x="51.3" y="1493" width="0.2" height="15.0" fill="rgb(211,164,25)" rx="2" ry="2" />
<text  x="54.34" y="1503.5" ></text>
</g>
<g >
<title>lj_tab_newkey (8,986,657 samples, 0.01%)</title><rect x="1099.6" y="1509" width="0.1" height="15.0" fill="rgb(248,55,8)" rx="2" ry="2" />
<text  x="1102.58" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="901" width="0.4" height="15.0" fill="rgb(237,1,20)" rx="2" ry="2" />
<text  x="56.88" y="911.5" ></text>
</g>
<g >
<title>operator delete (7,923,113 samples, 0.01%)</title><rect x="123.4" y="101" width="0.1" height="15.0" fill="rgb(207,113,46)" rx="2" ry="2" />
<text  x="126.40" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="229" width="18.3" height="15.0" fill="rgb(247,18,0)" rx="2" ry="2" />
<text  x="113.16" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1221" width="0.4" height="15.0" fill="rgb(239,130,39)" rx="2" ry="2" />
<text  x="56.88" y="1231.5" ></text>
</g>
<g >
<title>kfree_skbmem (18,350,858 samples, 0.02%)</title><rect x="552.6" y="1029" width="0.3" height="15.0" fill="rgb(238,113,14)" rx="2" ry="2" />
<text  x="555.64" y="1039.5" ></text>
</g>
<g >
<title>lj_str_new (67,311,059 samples, 0.08%)</title><rect x="1115.0" y="1509" width="0.9" height="15.0" fill="rgb(228,12,22)" rx="2" ry="2" />
<text  x="1118.00" y="1519.5" ></text>
</g>
<g >
<title>nf_hook_slow (29,699,447 samples, 0.03%)</title><rect x="252.0" y="1365" width="0.4" height="15.0" fill="rgb(213,143,43)" rx="2" ry="2" />
<text  x="255.02" y="1375.5" ></text>
</g>
<g >
<title>perf_pmu_sched_task (30,751,997 samples, 0.03%)</title><rect x="590.4" y="1541" width="0.4" height="15.0" fill="rgb(229,141,36)" rx="2" ry="2" />
<text  x="593.36" y="1551.5" ></text>
</g>
<g >
<title>netif_rx_internal (7,695,795 samples, 0.01%)</title><rect x="1180.9" y="917" width="0.1" height="15.0" fill="rgb(232,125,44)" rx="2" ry="2" />
<text  x="1183.92" y="927.5" ></text>
</g>
<g >
<title>xas_load (13,582,258 samples, 0.02%)</title><rect x="516.7" y="1285" width="0.2" height="15.0" fill="rgb(221,142,3)" rx="2" ry="2" />
<text  x="519.67" y="1295.5" ></text>
</g>
<g >
<title>_raw_spin_lock (11,270,965 samples, 0.01%)</title><rect x="585.9" y="1525" width="0.2" height="15.0" fill="rgb(244,165,24)" rx="2" ry="2" />
<text  x="588.93" y="1535.5" ></text>
</g>
<g >
<title>iptable_mangle_hook (9,942,248 samples, 0.01%)</title><rect x="559.2" y="1349" width="0.1" height="15.0" fill="rgb(249,191,3)" rx="2" ry="2" />
<text  x="562.18" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (33,318,551 samples, 0.04%)</title><rect x="53.9" y="581" width="0.4" height="15.0" fill="rgb(234,185,43)" rx="2" ry="2" />
<text  x="56.88" y="591.5" ></text>
</g>
<g >
<title>process_backlog (2,720,363,968 samples, 3.05%)</title><rect x="539.6" y="1461" width="36.0" height="15.0" fill="rgb(235,116,14)" rx="2" ry="2" />
<text  x="542.57" y="1471.5" >pro..</text>
</g>
<g >
<title>__brelse (37,033,090 samples, 0.04%)</title><rect x="160.0" y="1221" width="0.5" height="15.0" fill="rgb(252,190,45)" rx="2" ry="2" />
<text  x="163.02" y="1231.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2,702,939,535 samples, 3.03%)</title><rect x="539.8" y="1445" width="35.8" height="15.0" fill="rgb(223,218,5)" rx="2" ry="2" />
<text  x="542.79" y="1455.5" >__n..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1045" width="0.8" height="15.0" fill="rgb(208,142,50)" rx="2" ry="2" />
<text  x="101.56" y="1055.5" ></text>
</g>
<g >
<title>mongo::FTDCBSONUtil::(anonymous namespace)::extractMetricsFromDocument (10,911,326 samples, 0.01%)</title><rect x="15.8" y="1493" width="0.2" height="15.0" fill="rgb(245,54,51)" rx="2" ry="2" />
<text  x="18.83" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="597" width="1.4" height="15.0" fill="rgb(232,112,53)" rx="2" ry="2" />
<text  x="100.15" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,389,267,259 samples, 1.56%)</title><rect x="110.2" y="789" width="18.3" height="15.0" fill="rgb(247,85,51)" rx="2" ry="2" />
<text  x="113.16" y="799.5" ></text>
</g>
<g >
<title>netif_rx_internal (8,122,250 samples, 0.01%)</title><rect x="1163.6" y="741" width="0.1" height="15.0" fill="rgb(222,40,50)" rx="2" ry="2" />
<text  x="1166.58" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,620,760 samples, 0.03%)</title><rect x="99.8" y="421" width="0.3" height="15.0" fill="rgb(238,0,2)" rx="2" ry="2" />
<text  x="102.79" y="431.5" ></text>
</g>
<g >
<title>operator new (67,225,045 samples, 0.08%)</title><rect x="130.6" y="101" width="0.9" height="15.0" fill="rgb(240,69,13)" rx="2" ry="2" />
<text  x="133.59" y="111.5" ></text>
</g>
<g >
<title>operator new (15,951,676 samples, 0.02%)</title><rect x="74.1" y="789" width="0.2" height="15.0" fill="rgb(211,10,35)" rx="2" ry="2" />
<text  x="77.08" y="799.5" ></text>
</g>
<g >
<title>__skb_ext_del (21,557,255 samples, 0.02%)</title><rect x="1147.9" y="757" width="0.3" height="15.0" fill="rgb(241,31,10)" rx="2" ry="2" />
<text  x="1150.88" y="767.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (31,672,634 samples, 0.04%)</title><rect x="167.8" y="1205" width="0.4" height="15.0" fill="rgb(233,49,5)" rx="2" ry="2" />
<text  x="170.81" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="965" width="0.9" height="15.0" fill="rgb(216,64,10)" rx="2" ry="2" />
<text  x="134.54" y="975.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (20,618,401 samples, 0.02%)</title><rect x="730.2" y="1157" width="0.2" height="15.0" fill="rgb(254,28,10)" rx="2" ry="2" />
<text  x="733.17" y="1167.5" ></text>
</g>
<g >
<title>__GI___strlen_sse2 (16,282,003 samples, 0.02%)</title><rect x="680.2" y="1573" width="0.2" height="15.0" fill="rgb(230,12,7)" rx="2" ry="2" />
<text  x="683.22" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="789" width="0.3" height="15.0" fill="rgb(251,80,8)" rx="2" ry="2" />
<text  x="102.79" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (21,806,378 samples, 0.02%)</title><rect x="62.6" y="229" width="0.3" height="15.0" fill="rgb(236,229,11)" rx="2" ry="2" />
<text  x="65.63" y="239.5" ></text>
</g>
<g >
<title>validate_xmit_skb (14,268,973 samples, 0.02%)</title><rect x="735.5" y="501" width="0.2" height="15.0" fill="rgb(243,13,48)" rx="2" ry="2" />
<text  x="738.54" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1413" width="1.4" height="15.0" fill="rgb(223,1,5)" rx="2" ry="2" />
<text  x="100.15" y="1423.5" ></text>
</g>
<g >
<title>lj_cf_string_format (8,710,361 samples, 0.01%)</title><rect x="1028.3" y="1525" width="0.1" height="15.0" fill="rgb(216,107,48)" rx="2" ry="2" />
<text  x="1031.33" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1237" width="0.4" height="15.0" fill="rgb(227,86,13)" rx="2" ry="2" />
<text  x="56.54" y="1247.5" ></text>
</g>
<g >
<title>__irq_work_queue_local (12,461,742 samples, 0.01%)</title><rect x="709.7" y="1317" width="0.2" height="15.0" fill="rgb(217,219,20)" rx="2" ry="2" />
<text  x="712.69" y="1327.5" ></text>
</g>
<g >
<title>futex_wake (103,629,230 samples, 0.12%)</title><rect x="93.7" y="1573" width="1.4" height="15.0" fill="rgb(226,15,28)" rx="2" ry="2" />
<text  x="96.73" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="549" width="0.4" height="15.0" fill="rgb(212,175,33)" rx="2" ry="2" />
<text  x="56.54" y="559.5" ></text>
</g>
<g >
<title>irq_exit (202,511,925 samples, 0.23%)</title><rect x="639.1" y="1429" width="2.7" height="15.0" fill="rgb(232,74,54)" rx="2" ry="2" />
<text  x="642.08" y="1439.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (8,464,815 samples, 0.01%)</title><rect x="254.1" y="1445" width="0.1" height="15.0" fill="rgb(211,80,53)" rx="2" ry="2" />
<text  x="257.11" y="1455.5" ></text>
</g>
<g >
<title>ip_local_out (9,921,282 samples, 0.01%)</title><rect x="700.9" y="1349" width="0.2" height="15.0" fill="rgb(246,226,7)" rx="2" ry="2" />
<text  x="703.94" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,880,873 samples, 0.55%)</title><rect x="100.1" y="1541" width="6.5" height="15.0" fill="rgb(228,107,10)" rx="2" ry="2" />
<text  x="103.13" y="1551.5" ></text>
</g>
<g >
<title>do_IRQ (12,401,990 samples, 0.01%)</title><rect x="1090.4" y="1509" width="0.2" height="15.0" fill="rgb(232,169,24)" rx="2" ry="2" />
<text  x="1093.40" y="1519.5" ></text>
</g>
<g >
<title>iptable_mangle_hook (19,645,325 samples, 0.02%)</title><rect x="531.1" y="1333" width="0.2" height="15.0" fill="rgb(209,115,27)" rx="2" ry="2" />
<text  x="534.07" y="1343.5" ></text>
</g>
<g >
<title>ext4_meta_trans_blocks (15,479,859 samples, 0.02%)</title><rect x="194.3" y="1269" width="0.2" height="15.0" fill="rgb(207,105,9)" rx="2" ry="2" />
<text  x="197.32" y="1279.5" ></text>
</g>
<g >
<title>script_request (28,116,597,518 samples, 31.53%)</title><rect x="751.1" y="1557" width="372.1" height="15.0" fill="rgb(236,73,24)" rx="2" ry="2" />
<text  x="754.09" y="1567.5" >script_request</text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (15,297,989 samples, 0.02%)</title><rect x="51.3" y="1621" width="0.2" height="15.0" fill="rgb(214,210,4)" rx="2" ry="2" />
<text  x="54.31" y="1631.5" ></text>
</g>
<g >
<title>do_IRQ (11,298,240 samples, 0.01%)</title><rect x="987.1" y="1493" width="0.2" height="15.0" fill="rgb(248,148,5)" rx="2" ry="2" />
<text  x="990.11" y="1503.5" ></text>
</g>
<g >
<title>read_tsc (17,000,976 samples, 0.02%)</title><rect x="38.0" y="1429" width="0.2" height="15.0" fill="rgb(208,159,20)" rx="2" ry="2" />
<text  x="41.00" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,771,381 samples, 0.01%)</title><rect x="12.7" y="1573" width="0.2" height="15.0" fill="rgb(250,194,15)" rx="2" ry="2" />
<text  x="15.72" y="1583.5" ></text>
</g>
<g >
<title>sshd (33,073,653 samples, 0.04%)</title><rect x="242.0" y="1669" width="0.4" height="15.0" fill="rgb(216,143,45)" rx="2" ry="2" />
<text  x="244.99" y="1679.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (724,837,172 samples, 0.81%)</title><rect x="732.0" y="1125" width="9.6" height="15.0" fill="rgb(231,70,12)" rx="2" ry="2" />
<text  x="734.97" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (52,788,754 samples, 0.06%)</title><rect x="131.5" y="181" width="0.7" height="15.0" fill="rgb(217,76,21)" rx="2" ry="2" />
<text  x="134.54" y="191.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (10,338,455 samples, 0.01%)</title><rect x="509.8" y="1461" width="0.2" height="15.0" fill="rgb(212,126,11)" rx="2" ry="2" />
<text  x="512.84" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (116,601,099 samples, 0.13%)</title><rect x="139.4" y="1541" width="1.6" height="15.0" fill="rgb(208,6,34)" rx="2" ry="2" />
<text  x="142.45" y="1551.5" ></text>
</g>
<g >
<title>inet_gro_receive (21,342,548 samples, 0.02%)</title><rect x="524.2" y="1301" width="0.3" height="15.0" fill="rgb(220,34,25)" rx="2" ry="2" />
<text  x="527.25" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="949" width="1.4" height="15.0" fill="rgb(250,166,6)" rx="2" ry="2" />
<text  x="100.15" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (15,212,027 samples, 0.02%)</title><rect x="86.9" y="1541" width="0.2" height="15.0" fill="rgb(210,121,29)" rx="2" ry="2" />
<text  x="89.94" y="1551.5" ></text>
</g>
<g >
<title>rw_verify_area (35,894,373 samples, 0.04%)</title><rect x="1186.3" y="1429" width="0.5" height="15.0" fill="rgb(250,51,18)" rx="2" ry="2" />
<text  x="1189.31" y="1439.5" ></text>
</g>
<g >
<title>bnx2_poll (13,868,111 samples, 0.02%)</title><rect x="518.9" y="1461" width="0.2" height="15.0" fill="rgb(235,43,34)" rx="2" ry="2" />
<text  x="521.90" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (106,549,793 samples, 0.12%)</title><rect x="97.2" y="1189" width="1.4" height="15.0" fill="rgb(239,112,24)" rx="2" ry="2" />
<text  x="100.15" y="1199.5" ></text>
</g>
<g >
<title>__getblk_gfp (230,219,568 samples, 0.26%)</title><rect x="189.1" y="1189" width="3.0" height="15.0" fill="rgb(237,90,15)" rx="2" ry="2" />
<text  x="192.09" y="1199.5" ></text>
</g>
<g >
<title>irq_work_run_list (23,767,338 samples, 0.03%)</title><rect x="591.5" y="1493" width="0.3" height="15.0" fill="rgb(220,49,27)" rx="2" ry="2" />
<text  x="594.50" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1205" width="3.0" height="15.0" fill="rgb(238,63,19)" rx="2" ry="2" />
<text  x="131.55" y="1215.5" ></text>
</g>
<g >
<title>lj_str_free (259,178,635 samples, 0.29%)</title><rect x="890.0" y="1461" width="3.4" height="15.0" fill="rgb(209,36,18)" rx="2" ry="2" />
<text  x="892.97" y="1471.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (9,934,998 samples, 0.01%)</title><rect x="750.7" y="1525" width="0.1" height="15.0" fill="rgb(229,109,28)" rx="2" ry="2" />
<text  x="753.69" y="1535.5" ></text>
</g>
<g >
<title>_raw_write_lock (10,951,952 samples, 0.01%)</title><rect x="161.4" y="1221" width="0.1" height="15.0" fill="rgb(228,189,43)" rx="2" ry="2" />
<text  x="164.36" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1573" width="0.8" height="15.0" fill="rgb(254,147,14)" rx="2" ry="2" />
<text  x="101.56" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1077" width="3.6" height="15.0" fill="rgb(229,129,23)" rx="2" ry="2" />
<text  x="109.59" y="1087.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_ctl (46,988,001 samples, 0.05%)</title><rect x="746.3" y="1493" width="0.6" height="15.0" fill="rgb(220,184,20)" rx="2" ry="2" />
<text  x="749.30" y="1503.5" ></text>
</g>
<g >
<title>__ip_vs_conn_put_timer (32,145,336 samples, 0.04%)</title><rect x="1161.6" y="885" width="0.4" height="15.0" fill="rgb(242,24,18)" rx="2" ry="2" />
<text  x="1164.59" y="895.5" ></text>
</g>
<g >
<title>iptable_filter_hook (8,460,204 samples, 0.01%)</title><rect x="557.4" y="1141" width="0.1" height="15.0" fill="rgb(239,204,33)" rx="2" ry="2" />
<text  x="560.37" y="1151.5" ></text>
</g>
<g >
<title>tsc_verify_tsc_adjust (7,831,514 samples, 0.01%)</title><rect x="595.6" y="1589" width="0.1" height="15.0" fill="rgb(238,131,8)" rx="2" ry="2" />
<text  x="598.64" y="1599.5" ></text>
</g>
<g >
<title>ip_vs_in.part.0 (25,684,449 samples, 0.03%)</title><rect x="252.0" y="1317" width="0.4" height="15.0" fill="rgb(240,25,27)" rx="2" ry="2" />
<text  x="255.02" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (226,138,968 samples, 0.25%)</title><rect x="128.5" y="229" width="3.0" height="15.0" fill="rgb(240,11,27)" rx="2" ry="2" />
<text  x="131.55" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (61,833,823 samples, 0.07%)</title><rect x="98.6" y="149" width="0.8" height="15.0" fill="rgb(235,151,40)" rx="2" ry="2" />
<text  x="101.61" y="159.5" ></text>
</g>
<g >
<title>validate_xmit_skb (68,065,860 samples, 0.08%)</title><rect x="1155.3" y="485" width="0.9" height="15.0" fill="rgb(224,218,50)" rx="2" ry="2" />
<text  x="1158.30" y="495.5" ></text>
</g>
<g >
<title>lj_BC_MOV (28,467,827 samples, 0.03%)</title><rect x="1064.6" y="1541" width="0.4" height="15.0" fill="rgb(247,87,8)" rx="2" ry="2" />
<text  x="1067.65" y="1551.5" ></text>
</g>
<g >
<title>br_fdb_update (15,037,745 samples, 0.02%)</title><rect x="541.8" y="1317" width="0.2" height="15.0" fill="rgb(222,155,53)" rx="2" ry="2" />
<text  x="544.79" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1141" width="0.8" height="15.0" fill="rgb(231,17,51)" rx="2" ry="2" />
<text  x="101.56" y="1151.5" ></text>
</g>
<g >
<title>record__write (132,724,080 samples, 0.15%)</title><rect x="238.4" y="1573" width="1.8" height="15.0" fill="rgb(228,161,39)" rx="2" ry="2" />
<text  x="241.41" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,620,760 samples, 0.03%)</title><rect x="99.8" y="197" width="0.3" height="15.0" fill="rgb(246,135,28)" rx="2" ry="2" />
<text  x="102.79" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (89,933,054 samples, 0.10%)</title><rect x="106.6" y="149" width="1.2" height="15.0" fill="rgb(223,200,18)" rx="2" ry="2" />
<text  x="109.59" y="159.5" ></text>
</g>
<g >
<title>nf_hook_slow (30,544,417 samples, 0.03%)</title><rect x="251.2" y="1205" width="0.4" height="15.0" fill="rgb(248,82,43)" rx="2" ry="2" />
<text  x="254.20" y="1215.5" ></text>
</g>
<g >
<title>dev_queue_xmit (22,155,932 samples, 0.02%)</title><rect x="41.7" y="1237" width="0.3" height="15.0" fill="rgb(209,163,15)" rx="2" ry="2" />
<text  x="44.75" y="1247.5" ></text>
</g>
<g >
<title>DirTree::_find (21,008,481 samples, 0.02%)</title><rect x="54.7" y="1573" width="0.3" height="15.0" fill="rgb(207,192,35)" rx="2" ry="2" />
<text  x="57.74" y="1583.5" ></text>
</g>
<g >
<title>ksys_write (4,710,350,188 samples, 5.28%)</title><rect x="1124.5" y="1461" width="62.3" height="15.0" fill="rgb(208,192,37)" rx="2" ry="2" />
<text  x="1127.50" y="1471.5" >ksys_w..</text>
</g>
<g >
<title>ret_from_intr (12,813,476 samples, 0.01%)</title><rect x="980.6" y="1461" width="0.2" height="15.0" fill="rgb(243,116,34)" rx="2" ry="2" />
<text  x="983.64" y="1471.5" ></text>
</g>
<g >
<title>br_forward (220,227,318 samples, 0.25%)</title><rect x="535.3" y="1285" width="2.9" height="15.0" fill="rgb(216,85,50)" rx="2" ry="2" />
<text  x="538.30" y="1295.5" ></text>
</g>
<g >
<title>ext4_write_end (34,222,591 samples, 0.04%)</title><rect x="239.4" y="1333" width="0.5" height="15.0" fill="rgb(208,113,54)" rx="2" ry="2" />
<text  x="242.40" y="1343.5" ></text>
</g>
<g >
<title>mempool_alloc (638,802,464 samples, 0.72%)</title><rect x="21.9" y="1445" width="8.4" height="15.0" fill="rgb(210,14,14)" rx="2" ry="2" />
<text  x="24.85" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="1221" width="0.8" height="15.0" fill="rgb(243,48,32)" rx="2" ry="2" />
<text  x="101.56" y="1231.5" ></text>
</g>
<g >
<title>emptybuffer (77,449,456 samples, 0.09%)</title><rect x="684.6" y="1605" width="1.1" height="15.0" fill="rgb(234,24,33)" rx="2" ry="2" />
<text  x="687.63" y="1615.5" ></text>
</g>
<g >
<title>bnx2_poll_work (10,454,994 samples, 0.01%)</title><rect x="518.9" y="1445" width="0.1" height="15.0" fill="rgb(233,155,43)" rx="2" ry="2" />
<text  x="521.90" y="1455.5" ></text>
</g>
<g >
<title>perf_evlist__poll (129,397,185 samples, 0.15%)</title><rect x="139.3" y="1605" width="1.7" height="15.0" fill="rgb(245,162,26)" rx="2" ry="2" />
<text  x="142.30" y="1615.5" ></text>
</g>
<g >
<title>local.github.com/docker/docker/libnetwork/networkdb.(*delegate).NotifyMsg (14,578,514 samples, 0.02%)</title><rect x="12.1" y="1589" width="0.2" height="15.0" fill="rgb(213,128,27)" rx="2" ry="2" />
<text  x="15.13" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="837" width="3.6" height="15.0" fill="rgb(224,12,38)" rx="2" ry="2" />
<text  x="109.59" y="847.5" ></text>
</g>
<g >
<title>ip_output (8,502,931 samples, 0.01%)</title><rect x="251.4" y="1013" width="0.2" height="15.0" fill="rgb(226,21,45)" rx="2" ry="2" />
<text  x="254.44" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="725" width="0.4" height="15.0" fill="rgb(218,74,53)" rx="2" ry="2" />
<text  x="56.54" y="735.5" ></text>
</g>
<g >
<title>__x64_sys_write (8,535,433 samples, 0.01%)</title><rect x="1124.0" y="1493" width="0.2" height="15.0" fill="rgb(212,136,11)" rx="2" ry="2" />
<text  x="1127.04" y="1503.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (20,488,859 samples, 0.02%)</title><rect x="638.2" y="1413" width="0.2" height="15.0" fill="rgb(244,158,8)" rx="2" ry="2" />
<text  x="641.17" y="1423.5" ></text>
</g>
<g >
<title>br_dev_queue_push_xmit (725,654,347 samples, 0.81%)</title><rect x="1148.2" y="757" width="9.6" height="15.0" fill="rgb(231,49,5)" rx="2" ry="2" />
<text  x="1151.22" y="767.5" ></text>
</g>
<g >
<title>_raw_read_lock (15,570,398 samples, 0.02%)</title><rect x="161.2" y="1221" width="0.2" height="15.0" fill="rgb(216,190,28)" rx="2" ry="2" />
<text  x="164.15" y="1231.5" ></text>
</g>
<g >
<title>record__write (7,275,434,660 samples, 8.16%)</title><rect x="142.1" y="1541" width="96.3" height="15.0" fill="rgb(252,82,7)" rx="2" ry="2" />
<text  x="145.10" y="1551.5" >record__write</text>
</g>
<g >
<title>_raw_spin_lock (35,964,552 samples, 0.04%)</title><rect x="1153.7" y="517" width="0.5" height="15.0" fill="rgb(248,149,11)" rx="2" ry="2" />
<text  x="1156.69" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (33,318,551 samples, 0.04%)</title><rect x="53.9" y="1173" width="0.4" height="15.0" fill="rgb(207,16,14)" rx="2" ry="2" />
<text  x="56.88" y="1183.5" ></text>
</g>
<g >
<title>ip_finish_output2 (60,607,687 samples, 0.07%)</title><rect x="735.0" y="581" width="0.8" height="15.0" fill="rgb(211,103,23)" rx="2" ry="2" />
<text  x="737.96" y="591.5" ></text>
</g>
<g >
<title>br_handle_frame (109,228,372 samples, 0.12%)</title><rect x="41.6" y="1493" width="1.5" height="15.0" fill="rgb(221,186,34)" rx="2" ry="2" />
<text  x="44.63" y="1503.5" ></text>
</g>
<g >
<title>ip_list_rcv (527,299,429 samples, 0.59%)</title><rect x="526.0" y="1381" width="7.0" height="15.0" fill="rgb(250,31,10)" rx="2" ry="2" />
<text  x="529.02" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (487,448,485 samples, 0.55%)</title><rect x="100.1" y="1141" width="6.5" height="15.0" fill="rgb(223,74,52)" rx="2" ry="2" />
<text  x="103.13" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="597" width="3.6" height="15.0" fill="rgb(245,27,5)" rx="2" ry="2" />
<text  x="109.59" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="469" width="6.5" height="15.0" fill="rgb(210,220,12)" rx="2" ry="2" />
<text  x="103.13" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (9,865,523 samples, 0.01%)</title><rect x="1126.4" y="1333" width="0.2" height="15.0" fill="rgb(248,81,12)" rx="2" ry="2" />
<text  x="1129.43" y="1343.5" ></text>
</g>
<g >
<title>operator new (120,282,243 samples, 0.13%)</title><rect x="107.8" y="149" width="1.6" height="15.0" fill="rgb(207,158,51)" rx="2" ry="2" />
<text  x="110.78" y="159.5" ></text>
</g>
<g >
<title>execute_command (11,351,520 samples, 0.01%)</title><rect x="10.6" y="1413" width="0.2" height="15.0" fill="rgb(237,110,35)" rx="2" ry="2" />
<text  x="13.64" y="1423.5" ></text>
</g>
<g >
<title>activate_task (56,305,495 samples, 0.06%)</title><rect x="554.5" y="853" width="0.8" height="15.0" fill="rgb(237,120,35)" rx="2" ry="2" />
<text  x="557.52" y="863.5" ></text>
</g>
<g >
<title>__es_tree_search.isra.0 (53,444,016 samples, 0.06%)</title><rect x="163.7" y="1205" width="0.7" height="15.0" fill="rgb(242,226,19)" rx="2" ry="2" />
<text  x="166.67" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1237" width="3.0" height="15.0" fill="rgb(220,42,16)" rx="2" ry="2" />
<text  x="131.55" y="1247.5" ></text>
</g>
<g >
<title>tcp4_gro_receive (11,596,475 samples, 0.01%)</title><rect x="524.4" y="1285" width="0.1" height="15.0" fill="rgb(206,101,19)" rx="2" ry="2" />
<text  x="527.36" y="1295.5" ></text>
</g>
<g >
<title>vfs_read (27,609,343 samples, 0.03%)</title><rect x="14.5" y="1541" width="0.4" height="15.0" fill="rgb(239,168,49)" rx="2" ry="2" />
<text  x="17.53" y="1551.5" ></text>
</g>
<g >
<title>aeCreateFileEvent (128,483,546 samples, 0.14%)</title><rect x="699.0" y="1557" width="1.7" height="15.0" fill="rgb(253,124,22)" rx="2" ry="2" />
<text  x="702.04" y="1567.5" ></text>
</g>
<g >
<title>__es_insert_extent (74,282,818 samples, 0.08%)</title><rect x="162.3" y="1205" width="1.0" height="15.0" fill="rgb(247,148,41)" rx="2" ry="2" />
<text  x="165.32" y="1215.5" ></text>
</g>
<g >
<title>[perf-11609.map] (76,857,477 samples, 0.09%)</title><rect x="49.8" y="1653" width="1.0" height="15.0" fill="rgb(227,62,12)" rx="2" ry="2" />
<text  x="52.75" y="1663.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (23,887,738 samples, 0.03%)</title><rect x="742.5" y="1109" width="0.3" height="15.0" fill="rgb(234,213,51)" rx="2" ry="2" />
<text  x="745.50" y="1119.5" ></text>
</g>
<g >
<title>nf_conntrack_in (100,313,884 samples, 0.11%)</title><rect x="1174.2" y="965" width="1.3" height="15.0" fill="rgb(243,60,22)" rx="2" ry="2" />
<text  x="1177.21" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1269" width="0.4" height="15.0" fill="rgb(222,54,21)" rx="2" ry="2" />
<text  x="56.54" y="1279.5" ></text>
</g>
<g >
<title>lj_cf_math_random (7,579,821 samples, 0.01%)</title><rect x="676.8" y="1637" width="0.1" height="15.0" fill="rgb(215,128,18)" rx="2" ry="2" />
<text  x="679.85" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="293" width="0.9" height="15.0" fill="rgb(208,28,43)" rx="2" ry="2" />
<text  x="134.54" y="303.5" ></text>
</g>
<g >
<title>dequeue_entity (9,608,745 samples, 0.01%)</title><rect x="136.7" y="1381" width="0.1" height="15.0" fill="rgb(243,116,14)" rx="2" ry="2" />
<text  x="139.66" y="1391.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (37,494,225 samples, 0.04%)</title><rect x="91.4" y="1589" width="0.5" height="15.0" fill="rgb(210,42,51)" rx="2" ry="2" />
<text  x="94.38" y="1599.5" ></text>
</g>
<g >
<title>ip_finish_output (7,667,387 samples, 0.01%)</title><rect x="251.4" y="997" width="0.1" height="15.0" fill="rgb(215,157,17)" rx="2" ry="2" />
<text  x="254.44" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1221" width="3.6" height="15.0" fill="rgb(243,166,39)" rx="2" ry="2" />
<text  x="109.59" y="1231.5" ></text>
</g>
<g >
<title>ip_local_out (214,224,978 samples, 0.24%)</title><rect x="548.3" y="981" width="2.8" height="15.0" fill="rgb(244,180,37)" rx="2" ry="2" />
<text  x="551.26" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="645" width="6.5" height="15.0" fill="rgb(226,180,31)" rx="2" ry="2" />
<text  x="103.13" y="655.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_fn (30,388,498 samples, 0.03%)</title><rect x="569.3" y="1269" width="0.4" height="15.0" fill="rgb(210,71,45)" rx="2" ry="2" />
<text  x="572.27" y="1279.5" ></text>
</g>
<g >
<title>ip_vs_local_request4 (8,910,030 samples, 0.01%)</title><rect x="1133.6" y="1173" width="0.1" height="15.0" fill="rgb(245,156,21)" rx="2" ry="2" />
<text  x="1136.61" y="1183.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (63,159,432 samples, 0.07%)</title><rect x="1163.1" y="805" width="0.8" height="15.0" fill="rgb(250,139,18)" rx="2" ry="2" />
<text  x="1166.07" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="1541" width="0.4" height="15.0" fill="rgb(223,202,34)" rx="2" ry="2" />
<text  x="56.54" y="1551.5" ></text>
</g>
<g >
<title>inet_addr_type_dev_table (30,196,107 samples, 0.03%)</title><rect x="1166.3" y="837" width="0.4" height="15.0" fill="rgb(237,32,36)" rx="2" ry="2" />
<text  x="1169.25" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (8,046,763 samples, 0.01%)</title><rect x="85.1" y="1365" width="0.1" height="15.0" fill="rgb(236,69,12)" rx="2" ry="2" />
<text  x="88.08" y="1375.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (15,377,881 samples, 0.02%)</title><rect x="735.5" y="517" width="0.2" height="15.0" fill="rgb(212,73,46)" rx="2" ry="2" />
<text  x="738.53" y="527.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (14,368,613 samples, 0.02%)</title><rect x="852.3" y="1461" width="0.2" height="15.0" fill="rgb(210,215,47)" rx="2" ry="2" />
<text  x="855.34" y="1471.5" ></text>
</g>
<g >
<title>cpuacct_charge (10,259,306 samples, 0.01%)</title><rect x="709.1" y="1349" width="0.1" height="15.0" fill="rgb(238,12,12)" rx="2" ry="2" />
<text  x="712.10" y="1359.5" ></text>
</g>
<g >
<title>intel_idle (10,901,206 samples, 0.01%)</title><rect x="577.7" y="1557" width="0.1" height="15.0" fill="rgb(207,54,51)" rx="2" ry="2" />
<text  x="580.68" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="453" width="0.4" height="15.0" fill="rgb(221,15,13)" rx="2" ry="2" />
<text  x="56.54" y="463.5" ></text>
</g>
<g >
<title>lua_getfield (82,297,672 samples, 0.09%)</title><rect x="1122.0" y="1541" width="1.1" height="15.0" fill="rgb(232,59,48)" rx="2" ry="2" />
<text  x="1124.97" y="1551.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (72,915,467 samples, 0.08%)</title><rect x="573.6" y="1349" width="0.9" height="15.0" fill="rgb(224,85,11)" rx="2" ry="2" />
<text  x="576.55" y="1359.5" ></text>
</g>
<g >
<title>ip_output (22,283,436 samples, 0.02%)</title><rect x="255.8" y="1301" width="0.3" height="15.0" fill="rgb(253,37,54)" rx="2" ry="2" />
<text  x="258.79" y="1311.5" ></text>
</g>
<g >
<title>lj_vmeta_tsetv (121,623,507 samples, 0.14%)</title><rect x="1120.3" y="1541" width="1.6" height="15.0" fill="rgb(232,85,28)" rx="2" ry="2" />
<text  x="1123.30" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="325" width="1.4" height="15.0" fill="rgb(246,127,10)" rx="2" ry="2" />
<text  x="100.15" y="335.5" ></text>
</g>
<g >
<title>call_cpuidle (15,051,561 samples, 0.02%)</title><rect x="243.3" y="1605" width="0.2" height="15.0" fill="rgb(227,146,7)" rx="2" ry="2" />
<text  x="246.26" y="1615.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (28,458,670 samples, 0.03%)</title><rect x="14.5" y="1605" width="0.4" height="15.0" fill="rgb(235,227,43)" rx="2" ry="2" />
<text  x="17.53" y="1615.5" ></text>
</g>
<g >
<title>ext4_claim_free_clusters (31,604,815 samples, 0.04%)</title><rect x="177.4" y="1173" width="0.4" height="15.0" fill="rgb(215,212,14)" rx="2" ry="2" />
<text  x="180.39" y="1183.5" ></text>
</g>
<g >
<title>kfree (11,517,746 samples, 0.01%)</title><rect x="726.6" y="1269" width="0.1" height="15.0" fill="rgb(232,143,12)" rx="2" ry="2" />
<text  x="729.56" y="1279.5" ></text>
</g>
<g >
<title>ext4_alloc_branch (1,435,231,711 samples, 1.61%)</title><rect x="168.6" y="1205" width="19.0" height="15.0" fill="rgb(209,195,46)" rx="2" ry="2" />
<text  x="171.57" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (2,007,785,170 samples, 2.25%)</title><rect x="58.6" y="1413" width="26.6" height="15.0" fill="rgb(234,207,26)" rx="2" ry="2" />
<text  x="61.64" y="1423.5" >s..</text>
</g>
<g >
<title>ip_rcv_finish_core.isra.0 (158,457,582 samples, 0.18%)</title><rect x="1170.5" y="981" width="2.1" height="15.0" fill="rgb(221,103,38)" rx="2" ry="2" />
<text  x="1173.54" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="1349" width="3.0" height="15.0" fill="rgb(216,51,31)" rx="2" ry="2" />
<text  x="131.55" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="565" width="0.9" height="15.0" fill="rgb(230,119,38)" rx="2" ry="2" />
<text  x="134.54" y="575.5" ></text>
</g>
<g >
<title>do_IRQ (26,226,534 samples, 0.03%)</title><rect x="889.6" y="1429" width="0.4" height="15.0" fill="rgb(251,197,33)" rx="2" ry="2" />
<text  x="892.62" y="1439.5" ></text>
</g>
<g >
<title>__wake_up_common (45,943,349 samples, 0.05%)</title><rect x="555.9" y="949" width="0.6" height="15.0" fill="rgb(247,37,10)" rx="2" ry="2" />
<text  x="558.89" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,707,760,148 samples, 1.92%)</title><rect x="59.1" y="1253" width="22.6" height="15.0" fill="rgb(248,185,33)" rx="2" ry="2" />
<text  x="62.09" y="1263.5" >s..</text>
</g>
<g >
<title>nf_xfrm_me_harder (8,192,134 samples, 0.01%)</title><rect x="564.5" y="1301" width="0.1" height="15.0" fill="rgb(229,167,38)" rx="2" ry="2" />
<text  x="567.53" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (270,060,572 samples, 0.30%)</title><rect x="106.6" y="1573" width="3.6" height="15.0" fill="rgb(208,163,12)" rx="2" ry="2" />
<text  x="109.59" y="1583.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned_erms (478,320,934 samples, 0.54%)</title><rect x="783.9" y="1509" width="6.3" height="15.0" fill="rgb(229,174,53)" rx="2" ry="2" />
<text  x="786.92" y="1519.5" ></text>
</g>
<g >
<title>nf_nat_manip_pkt (16,787,613 samples, 0.02%)</title><rect x="560.8" y="1285" width="0.2" height="15.0" fill="rgb(240,206,1)" rx="2" ry="2" />
<text  x="563.78" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (61,531,245 samples, 0.07%)</title><rect x="131.5" y="1621" width="0.9" height="15.0" fill="rgb(241,38,12)" rx="2" ry="2" />
<text  x="134.54" y="1631.5" ></text>
</g>
<g >
<title>xfrm_lookup (12,396,243 samples, 0.01%)</title><rect x="1140.2" y="1141" width="0.1" height="15.0" fill="rgb(205,123,32)" rx="2" ry="2" />
<text  x="1143.18" y="1151.5" ></text>
</g>
<g >
<title>__GI_epoll_ctl (221,290,493 samples, 0.25%)</title><rect x="747.9" y="1541" width="2.9" height="15.0" fill="rgb(252,219,23)" rx="2" ry="2" />
<text  x="750.89" y="1551.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (10,862,281 samples, 0.01%)</title><rect x="583.2" y="1557" width="0.1" height="15.0" fill="rgb(236,223,16)" rx="2" ry="2" />
<text  x="586.20" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (101,450,025 samples, 0.11%)</title><rect x="62.6" y="245" width="1.3" height="15.0" fill="rgb(205,198,13)" rx="2" ry="2" />
<text  x="65.59" y="255.5" ></text>
</g>
<g >
<title>ep_send_events_proc (109,403,579 samples, 0.12%)</title><rect x="703.8" y="1461" width="1.4" height="15.0" fill="rgb(232,111,27)" rx="2" ry="2" />
<text  x="706.76" y="1471.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (7,905,348 samples, 0.01%)</title><rect x="157.3" y="1237" width="0.1" height="15.0" fill="rgb(211,66,22)" rx="2" ry="2" />
<text  x="160.29" y="1247.5" ></text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::operator= (8,656,283 samples, 0.01%)</title><rect x="67.5" y="405" width="0.1" height="15.0" fill="rgb(250,135,44)" rx="2" ry="2" />
<text  x="70.48" y="415.5" ></text>
</g>
<g >
<title>br_nf_hook_thresh (205,405,065 samples, 0.23%)</title><rect x="542.1" y="1237" width="2.8" height="15.0" fill="rgb(223,58,44)" rx="2" ry="2" />
<text  x="545.14" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (487,271,264 samples, 0.55%)</title><rect x="100.1" y="661" width="6.5" height="15.0" fill="rgb(229,34,52)" rx="2" ry="2" />
<text  x="103.13" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (106,549,793 samples, 0.12%)</title><rect x="97.2" y="309" width="1.4" height="15.0" fill="rgb(230,12,15)" rx="2" ry="2" />
<text  x="100.15" y="319.5" ></text>
</g>
<g >
<title>ip_local_out (15,387,198 samples, 0.02%)</title><rect x="251.3" y="1029" width="0.3" height="15.0" fill="rgb(236,130,36)" rx="2" ry="2" />
<text  x="254.35" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (65,390,268 samples, 0.07%)</title><rect x="98.6" y="389" width="0.8" height="15.0" fill="rgb(252,22,38)" rx="2" ry="2" />
<text  x="101.56" y="399.5" ></text>
</g>
<g >
<title>process_backlog (9,289,764 samples, 0.01%)</title><rect x="894.1" y="1381" width="0.1" height="15.0" fill="rgb(208,51,41)" rx="2" ry="2" />
<text  x="897.06" y="1391.5" ></text>
</g>
<g >
<title>ret_from_intr (7,672,545 samples, 0.01%)</title><rect x="1027.9" y="1493" width="0.1" height="15.0" fill="rgb(229,210,31)" rx="2" ry="2" />
<text  x="1030.91" y="1503.5" ></text>
</g>
<g >
<title>ipt_do_table (8,584,182 samples, 0.01%)</title><rect x="564.2" y="1301" width="0.1" height="15.0" fill="rgb(232,118,53)" rx="2" ry="2" />
<text  x="567.23" y="1311.5" ></text>
</g>
<g >
<title>sock_recvmsg (1,429,642,251 samples, 1.60%)</title><rect x="725.2" y="1381" width="18.9" height="15.0" fill="rgb(252,6,18)" rx="2" ry="2" />
<text  x="728.20" y="1391.5" ></text>
</g>
<g >
<title>__GI__IO_setb (14,341,718 samples, 0.02%)</title><rect x="1105.0" y="1445" width="0.2" height="15.0" fill="rgb(238,78,28)" rx="2" ry="2" />
<text  x="1108.04" y="1455.5" ></text>
</g>
<g >
<title>_int_free (11,633,092 samples, 0.01%)</title><rect x="68.1" y="469" width="0.2" height="15.0" fill="rgb(215,24,6)" rx="2" ry="2" />
<text  x="71.14" y="479.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (45,392,039 samples, 0.05%)</title><rect x="1128.9" y="1285" width="0.6" height="15.0" fill="rgb(233,82,4)" rx="2" ry="2" />
<text  x="1131.88" y="1295.5" ></text>
</g>
<g >
<title>lj_str_new (35,722,447 samples, 0.04%)</title><rect x="1122.6" y="1525" width="0.5" height="15.0" fill="rgb(223,215,52)" rx="2" ry="2" />
<text  x="1125.59" y="1535.5" ></text>
</g>
<g >
<title>ip_vs_conn_out_get_proto (7,608,161 samples, 0.01%)</title><rect x="739.7" y="917" width="0.1" height="15.0" fill="rgb(238,122,42)" rx="2" ry="2" />
<text  x="742.66" y="927.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (8,712,985 samples, 0.01%)</title><rect x="579.1" y="1573" width="0.1" height="15.0" fill="rgb(216,190,17)" rx="2" ry="2" />
<text  x="582.13" y="1583.5" ></text>
</g>
<g >
<title>command_substitute (8,953,654 samples, 0.01%)</title><rect x="10.8" y="997" width="0.1" height="15.0" fill="rgb(249,76,52)" rx="2" ry="2" />
<text  x="13.80" y="1007.5" ></text>
</g>
<g >
<title>fib_table_lookup (35,476,590 samples, 0.04%)</title><rect x="1166.8" y="789" width="0.5" height="15.0" fill="rgb(252,164,53)" rx="2" ry="2" />
<text  x="1169.81" y="799.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (12,411,891 samples, 0.01%)</title><rect x="737.9" y="805" width="0.1" height="15.0" fill="rgb(235,43,24)" rx="2" ry="2" />
<text  x="740.88" y="815.5" ></text>
</g>
<g >
<title>vfs_write (7,105,200,587 samples, 7.97%)</title><rect x="144.1" y="1397" width="94.1" height="15.0" fill="rgb(236,95,28)" rx="2" ry="2" />
<text  x="147.14" y="1407.5" >vfs_write</text>
</g>
<g >
<title>execute_command (32,101,929 samples, 0.04%)</title><rect x="10.6" y="1445" width="0.5" height="15.0" fill="rgb(243,170,40)" rx="2" ry="2" />
<text  x="13.64" y="1455.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (12,015,538 samples, 0.01%)</title><rect x="1017.2" y="1509" width="0.1" height="15.0" fill="rgb(236,102,47)" rx="2" ry="2" />
<text  x="1020.19" y="1519.5" ></text>
</g>
<g >
<title>__pagevec_release (11,397,576 samples, 0.01%)</title><rect x="16.9" y="1525" width="0.2" height="15.0" fill="rgb(241,121,25)" rx="2" ry="2" />
<text  x="19.95" y="1535.5" ></text>
</g>
<g >
<title>ext4_set_bits (10,673,651 samples, 0.01%)</title><rect x="184.2" y="1157" width="0.2" height="15.0" fill="rgb(232,229,12)" rx="2" ry="2" />
<text  x="187.22" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (226,138,968 samples, 0.25%)</title><rect x="128.5" y="469" width="3.0" height="15.0" fill="rgb(227,117,38)" rx="2" ry="2" />
<text  x="131.55" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (43,021,133 samples, 0.05%)</title><rect x="131.7" y="117" width="0.5" height="15.0" fill="rgb(226,192,20)" rx="2" ry="2" />
<text  x="134.67" y="127.5" ></text>
</g>
<g >
<title>resizetab (27,874,420 samples, 0.03%)</title><rect x="1121.4" y="1477" width="0.4" height="15.0" fill="rgb(243,2,30)" rx="2" ry="2" />
<text  x="1124.43" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (25,990,548 samples, 0.03%)</title><rect x="53.5" y="229" width="0.4" height="15.0" fill="rgb(212,227,10)" rx="2" ry="2" />
<text  x="56.54" y="239.5" ></text>
</g>
<g >
<title>fib_table_lookup (12,415,499 samples, 0.01%)</title><rect x="740.1" y="933" width="0.2" height="15.0" fill="rgb(223,229,21)" rx="2" ry="2" />
<text  x="743.13" y="943.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (13,052,804 samples, 0.01%)</title><rect x="52.1" y="1637" width="0.2" height="15.0" fill="rgb(230,87,14)" rx="2" ry="2" />
<text  x="55.12" y="1647.5" ></text>
</g>
<g >
<title>nf_hook_slow (622,107,356 samples, 0.70%)</title><rect x="1133.3" y="1189" width="8.2" height="15.0" fill="rgb(223,109,25)" rx="2" ry="2" />
<text  x="1136.32" y="1199.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (16,052,422 samples, 0.02%)</title><rect x="81.2" y="1157" width="0.2" height="15.0" fill="rgb(217,165,44)" rx="2" ry="2" />
<text  x="84.17" y="1167.5" ></text>
</g>
<g >
<title>process_backlog (11,824,158 samples, 0.01%)</title><rect x="650.3" y="1397" width="0.2" height="15.0" fill="rgb(207,140,9)" rx="2" ry="2" />
<text  x="653.33" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (25,990,548 samples, 0.03%)</title><rect x="53.5" y="901" width="0.4" height="15.0" fill="rgb(210,28,3)" rx="2" ry="2" />
<text  x="56.54" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,047,311,919 samples, 1.17%)</title><rect x="60.7" y="837" width="13.9" height="15.0" fill="rgb(249,181,16)" rx="2" ry="2" />
<text  x="63.70" y="847.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (46,419,265 samples, 0.05%)</title><rect x="536.7" y="1077" width="0.6" height="15.0" fill="rgb(224,92,13)" rx="2" ry="2" />
<text  x="539.67" y="1087.5" ></text>
</g>
<g >
<title>napi_gro_receive (157,030,265 samples, 0.18%)</title><rect x="522.7" y="1413" width="2.0" height="15.0" fill="rgb(234,160,49)" rx="2" ry="2" />
<text  x="525.65" y="1423.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (144,429,816 samples, 0.16%)</title><rect x="175.0" y="1125" width="1.9" height="15.0" fill="rgb(221,125,5)" rx="2" ry="2" />
<text  x="178.02" y="1135.5" ></text>
</g>
<g >
<title>scsi_end_request (499,002,916 samples, 0.56%)</title><rect x="511.4" y="1413" width="6.6" height="15.0" fill="rgb(216,221,7)" rx="2" ry="2" />
<text  x="514.43" y="1423.5" ></text>
</g>
<g >
<title>ip_route_me_harder (32,482,211 samples, 0.04%)</title><rect x="738.8" y="869" width="0.5" height="15.0" fill="rgb(239,97,38)" rx="2" ry="2" />
<text  x="741.84" y="879.5" ></text>
</g>
</g>
</svg>
